/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 36203:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CLEAR_ACCOUNT_INFO: function() { return /* binding */ CLEAR_ACCOUNT_INFO; },
/* harmony export */   CLEAR_PEACOCK_INFO: function() { return /* binding */ CLEAR_PEACOCK_INFO; },
/* harmony export */   SET_ACCOUNT_CHECKED: function() { return /* binding */ SET_ACCOUNT_CHECKED; },
/* harmony export */   SET_ACCOUNT_INFO: function() { return /* binding */ SET_ACCOUNT_INFO; },
/* harmony export */   SET_ACCOUNT_TRIAL: function() { return /* binding */ SET_ACCOUNT_TRIAL; },
/* harmony export */   SET_ACCOUNT_TRIAL_ERROR: function() { return /* binding */ SET_ACCOUNT_TRIAL_ERROR; },
/* harmony export */   SET_DATA_COLLECTION: function() { return /* binding */ SET_DATA_COLLECTION; },
/* harmony export */   SET_PEACOCK_INFO: function() { return /* binding */ SET_PEACOCK_INFO; },
/* harmony export */   requestTrialAccess: function() { return /* binding */ requestTrialAccess; },
/* harmony export */   setTrialError: function() { return /* binding */ setTrialError; },
/* harmony export */   signin: function() { return /* binding */ signin; },
/* harmony export */   signout: function() { return /* binding */ signout; },
/* harmony export */   signup: function() { return /* binding */ signup; }
/* harmony export */ });
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48403);
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_capitalize__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_identity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62899);
/* harmony import */ var _lib_analytics_adobeIdentity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(35877);
/* harmony import */ var _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(51054);
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(26566);
/* harmony import */ var _lib_park_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(66956);
/* harmony import */ var _utils_getAdobeTagging__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(17627);
/* harmony import */ var _utils_getPlatform__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(14336);
/* harmony import */ var _utils_getAllowedBrands__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(95087);
/* harmony import */ var _components_IterableInBrowser_getJwt__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(25663);
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(67217);
/* harmony import */ var _lib_patterns_pllContainer_pllLoadSteps__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(87096);
/* harmony import */ var _utils_isDayZeroUser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(36849);
/* eslint-disable no-underscore-dangle */
















const APP_NAME = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('app.name').toLowerCase();
const TYPES = {
  apple: 'apple',
  email: 'Email',
  facebook: 'facebook',
  google: 'google'
};
const NONE = 'NONE';
const SET_ACCOUNT_CHECKED = 'SET_ACCOUNT_CHECKED';
const CLEAR_ACCOUNT_INFO = 'CLEAR_ACCOUNT_INFO';
const CLEAR_PEACOCK_INFO = 'CLEAR_PEACOCK_INFO';
const SET_DATA_COLLECTION = 'SET_DATA_COLLECTION';
const signout = function () {
  let {
    triggerSignoutAnalytics = true,
    manual = false
  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return dispatch => Promise.resolve(true).then(() => {
    if (triggerSignoutAnalytics) {
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.trackEvent({
        type: 'UserPreference',
        name: 'NBC Sign Out',
        attributes: {
          'Sign Out Type': manual ? 'Manual' : 'Expired Session'
        }
      });
    }
    return true;
  }).then(() => (0,_lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .logout */ .kS)()).then(() => _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.logout()).then(() => (0,_components_IterableInBrowser_getJwt__WEBPACK_IMPORTED_MODULE_9__/* .clearStoredToken */ .j)()).then(() => (0,_utils_isDayZeroUser__WEBPACK_IMPORTED_MODULE_11__/* .clearActiveUser */ .LD)()).then(() => {
    if (triggerSignoutAnalytics) {
      dispatch({
        type: CLEAR_ACCOUNT_INFO,
        payload: {}
      });
    }
    return true;
  });
};
const getTempPassUserAttributes = function () {
  let {
    secondaryTempPassName,
    initialTempPassName
  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let isSecondary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  if (!initialTempPassName) return {};
  const attrs = {
    ["".concat(APP_NAME.toLowerCase(), " Feature Flags")]: initialTempPassName,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.USER_REGISTRATION_REFERRER]: 'TempPass'
  };
  if (isSecondary) {
    attrs[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.USER_PROFILE] = _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.FREE;
    attrs["".concat(APP_NAME.toLowerCase(), " Feature Flags")] = secondaryTempPassName;
  }
  return attrs;
};
const getTempPassEventAttributes = initialTempPassName => {
  if (!initialTempPassName) return {};
  return {
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.PROFILE]: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.FREE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.REGISTRATION_REFERRER]: 'TempPass'
  };
};
const SET_ACCOUNT_INFO = 'SET_ACCOUNT_INFO';
const SET_PEACOCK_INFO = 'SET_PEACOCK_INFO';
const signin = function (email, password) {
  let {
    signInType = TYPES.email,
    triggerSignoutAnalyticsOnFailure = true,
    entityAnalytics = {},
    referrer,
    brandSource,
    tempPassRule
  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  let token = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  let vppaOptIn = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  let isVppaCheckboxEnabled = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;
  return (dispatch, getState) => {
    let user = {};
    const state = getState();
    return Promise.resolve(true).then(() => {
      if (signInType === TYPES.email && !email) {
        throw _lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .accountErrors */ .OS.NO_EMAIL_PROVIDED;
      }
      return (0,_lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .login */ .x4)({
        email,
        password,
        token
      }, signInType.toLowerCase(), false, vppaOptIn, brandSource);
    }).then(response => {
      if (typeof response.mail === 'undefined') {
        throw _lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .accountErrors */ .OS.ACCOUNT_ERROR;
      }
      user = response;
      // IDM returns peacockId in response which conflicts with the facade service
      // We need to replace peacockId for a boolean
      if (user.peacockId) {
        delete user.peacockId;
        user.isPeacockUser = true;
      }
      // Need to store password for peacock requirement check
      if (signInType !== TYPES.apple) {
        user.idmPassword = password;
      }
      return _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.login(response.mail);
    }).then(mParticleId => {
      if (!mParticleId) {
        throw _lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .accountErrors */ .OS.ACCOUNT_ERROR;
      }
      _lib_analytics_adobeIdentity__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.trackIdentitySignIn(signInType);
      return mParticleId;
    }).then(mParticleId => {
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.setUserAttributes({
        'User Product': APP_NAME,
        'User Platform': (0,_utils_getPlatform__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(),
        'User Converted': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User VPPA Opt In Date': isVppaCheckboxEnabled ? new Date().toISOString() : NONE,
        'User Language': state.client.language === 'es' ? 'Spanish' : 'English',
        'Adobe Upstream ID': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'upstreamUserID']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'Adobe HBA Status': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'hbaStatus']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'Adobe Max Rating': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'maxRating']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'Adobe Language Preference': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'language']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        ...getTempPassUserAttributes(tempPassRule, true)
      });
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.trackEvent({
        type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.USER_PREFERENCE,
        name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NBC_AUTHENTICATION_SUCCESS,
        attributes: {
          'Registration Referrer': referrer || 'NBC Login',
          'Sign In Type': lodash_capitalize__WEBPACK_IMPORTED_MODULE_2___default()(signInType),
          'Registration Source': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state.client.activation, 'platform') || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          'Video ID': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          Brand: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          ...entityAnalytics,
          ...getTempPassEventAttributes(tempPassRule === null || tempPassRule === void 0 ? void 0 : tempPassRule.initialTempPassName)
        }
      });
      dispatch((0,_client__WEBPACK_IMPORTED_MODULE_10__/* .unsetLoadStep */ .N1)(_lib_patterns_pllContainer_pllLoadSteps__WEBPACK_IMPORTED_MODULE_14__/* .INITIAL_PERSONALIZATION */ .zS));
      dispatch((0,_client__WEBPACK_IMPORTED_MODULE_10__/* .unsetLoadStep */ .N1)(_lib_patterns_pllContainer_pllLoadSteps__WEBPACK_IMPORTED_MODULE_14__/* .REPORTED_SERVER_FEATURE_FLAGS */ .aS));
      dispatch({
        type: SET_ACCOUNT_INFO,
        user
      });
      dispatch((0,_client__WEBPACK_IMPORTED_MODULE_10__/* .setBffMParticleId */ .L8)(mParticleId));
      return user;
    }).catch(error => {
      const promise = Promise.resolve();
      return promise.then(() => dispatch(signout({
        triggerSignoutAnalytics: triggerSignoutAnalyticsOnFailure
      })))
      // We need to always return a Promise rejection here, so the
      // caller can properly handle sign in errors on his/her own
      // catch statement.
      .then(() => Promise.reject(error)).catch(() => Promise.reject(error));
    });
  };
};
const signup = function (user) {
  let {
    triggerSignoutAnalyticsOnFailure = true,
    signUpType = TYPES.email,
    entityAnalytics = {},
    referrer,
    brandSource,
    emailStatus = 'Email Valid',
    isPersonalizationEnabled = true,
    tempPassRule,
    isVppaCheckboxEnabled = true
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return (dispatch, getState) => {
    // Entity IDs are often passed when signing up as a result of a Video or Show.
    const state = getState();
    const data = {
      email: user.email,
      password: user.password || null,
      forename: user.forename || null,
      surname: user.surname || null,
      gender: (0,_lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .normalizeGender */ .J9)(user.gender, state.client.language),
      zipCode: user.zipCode || null,
      phoneNumber: user.phoneNumber || null,
      terms: user.terms,
      vendorId: user.vendorId || null,
      token: user.token || null,
      birthYear: user.birthYear || null
    };

    // We cannot complete signup when mParticle is down.
    if (!window.mParticle.Identity.getCurrentUser()) {
      return Promise.reject();
    }

    // Update Unknown profile to signal that they converted to a Known profile.
    _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.setUserAttributes({
      'User Converted': 'True',
      ...getTempPassUserAttributes(tempPassRule)
    });
    _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.trackEvent({
      type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.USER_PREFERENCE,
      name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.CONVERSION,
      attributes: {
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.PAGE_NAME]: 'Sign Up',
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.PAGE_TYPE]: 'Auth Funnel',
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.SIGN_IN_TYPE]: lodash_capitalize__WEBPACK_IMPORTED_MODULE_2___default()(signUpType),
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.VIDEO_ID]: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.BRAND]: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.PROFILE]: 'Unauthenticated',
        ...entityAnalytics
      }
    });
    let userInfo;
    let mParticleIdAnonymous;
    let registrationDate;
    let firstVisitDate;
    return _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.getUserAttribute('User First Visit Date').then(date => {
      firstVisitDate = date;
      // Grab the anonymous mParticleId.
      return _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.getId();
    }).then(mpIdAnon => {
      if (!mpIdAnon) {
        throw _lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .accountErrors */ .OS.ACCOUNT_ERROR;
      }
      mParticleIdAnonymous = mpIdAnon;
    }).then(() => (0,_lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .register */ .z2)(data, signUpType.toLowerCase(), brandSource)).then(response => {
      userInfo = response;
      userInfo.signInType = signUpType;
      // Need to store password for peacock profile creation.
      if (signUpType !== TYPES.apple) {
        userInfo.idmPassword = user.password;
      }
      registrationDate = userInfo.termsAndConditionsAgreementDate ? new Date(parseInt(userInfo.termsAndConditionsAgreementDate, 10)).toISOString() : new Date().toISOString();
      // Login and then grab the authed mParticleId.
      return _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.login(data.email);
    }).then(mpIdAuth => {
      if (!mpIdAuth) {
        throw _lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .accountErrors */ .OS.ACCOUNT_ERROR;
      }
      userInfo.mParticleId = mpIdAuth;
      // Migrate data (watches/favorites) from the users old ID to the new ID.
      isPersonalizationEnabled && (0,_lib_park_api__WEBPACK_IMPORTED_MODULE_6__/* .parkAPIPost */ .gB)("users/".concat(mParticleIdAnonymous, "/migrate/").concat(mpIdAuth)).catch(() => null);
      userInfo.birthYear = userInfo.birthYear && userInfo.birthYear.toString();
      dispatch({
        type: SET_ACCOUNT_INFO,
        user: userInfo
      });
      _lib_analytics_adobeIdentity__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.trackIdentitySignUp(signUpType);
      return _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.modifyIdentity({
        customerid: userInfo._id,
        other3: (0,_utils_getAdobeTagging__WEBPACK_IMPORTED_MODULE_7__/* .getAamId */ ._m)(),
        other4: (0,_utils_getAdobeTagging__WEBPACK_IMPORTED_MODULE_7__/* .getMcmId */ .KA)()
      });
    }).then(() => {
      const brands = state.adobePass.isAuthenticated && (0,_utils_getAllowedBrands__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(state.adobePass.brands);
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.setUserAttributes({
        'User Converted': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Email Status': emailStatus,
        'User Episode Credits Left': "".concat(userInfo.episodeCount || 0),
        'User First Visit Date': firstVisitDate || registrationDate,
        'User MVPD': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, 'adobePass.mvpd.mvpd_id', 'Unauthenticated'),
        'User MVPD Referrer': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, 'adobePass.mvpd.title') ? 'MVPD Login' : _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Allowed Brands': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(brands, 'allowedBrands', _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE),
        'User Not Allowed Brands': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(brands, 'notAllowedBrands', _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE),
        'User Profile': 'Free',
        'User Registration Date': registrationDate,
        'User Sign In Type': lodash_capitalize__WEBPACK_IMPORTED_MODULE_2___default()(signUpType),
        'User VPPA Opt In': isVppaCheckboxEnabled ? 'True' : NONE,
        'User VPPA Opt In Date': isVppaCheckboxEnabled ? registrationDate : NONE,
        'User VPPA Opt In Platform': isVppaCheckboxEnabled ? (0,_utils_getPlatform__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)() : NONE,
        'User VPPA Opt In Product': isVppaCheckboxEnabled ? APP_NAME : NONE,
        'User Registration Referrer': referrer || 'NBC Login',
        'User Registration Source': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state.client.activation, 'platform') || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Show Favorited': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Product': APP_NAME,
        'User Platform': (0,_utils_getPlatform__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(),
        'User Social Network': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Cross App': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Rec Shelf': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Language': state.client.language === 'es' ? 'Spanish' : 'English',
        'User First Name': user.forename || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Last Name': user.surname || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Gender': user.gender || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Zip Code': user.zipCode && parseInt(user.zipCode, 10) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'User Birth Year': user.birthYear && parseInt(user.birthYear, 10) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'Adobe Upstream ID': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'upstreamUserID']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'Adobe HBA Status': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'hbaStatus']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'Adobe Max Rating': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'maxRating']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        'Adobe Language Preference': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state, ['adobePass', 'language']) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
        ...getTempPassUserAttributes(tempPassRule, true)
      });
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.trackEvent({
        type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.USER_PREFERENCE,
        name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.REGISTRATION_SUCCESS,
        attributes: {
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.PAGE_NAME]: 'Registration',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.PAGE_TYPE]: 'Auth Funnel',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.SIGN_IN_TYPE]: lodash_capitalize__WEBPACK_IMPORTED_MODULE_2___default()(signUpType),
          'Registration Source': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state.client.activation, 'platform') || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          'Registration Date': registrationDate,
          'Registration Referrer': referrer || 'NBC Login',
          'Video ID': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          Brand: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          ...entityAnalytics,
          ...getTempPassEventAttributes(tempPassRule === null || tempPassRule === void 0 ? void 0 : tempPassRule.initialTempPassName)
        }
      });
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP.trackEvent({
        type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.USER_PREFERENCE,
        name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NBC_AUTHENTICATION_SUCCESS,
        attributes: {
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.REGISTRATION_REFERRER]: referrer || 'NBC Login',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.SIGN_IN_TYPE]: lodash_capitalize__WEBPACK_IMPORTED_MODULE_2___default()(signUpType),
          'Registration Source': lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(state.client.activation, 'platform') || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          'Video ID': _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          Brand: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_12__.NONE,
          ...entityAnalytics,
          ...getTempPassEventAttributes(tempPassRule === null || tempPassRule === void 0 ? void 0 : tempPassRule.initialTempPassName)
        }
      });
    }).then(() => userInfo).catch(error => dispatch(signout({
      triggerSignoutAnalytics: triggerSignoutAnalyticsOnFailure
    }))
    // We need to always return a Promise rejection here, so the
    // caller can properly handle sign up errors on his/her own
    // catch statement.
    .then(() => Promise.reject(error)).catch(() => Promise.reject(error)));
  };
};
const SET_ACCOUNT_TRIAL = 'SET_ACCOUNT_TRIAL';
const SET_ACCOUNT_TRIAL_ERROR = 'SET_ACCOUNT_TRIAL_ERROR';
const setTrialError = (mpxGuid, error) => ({
  type: SET_ACCOUNT_TRIAL_ERROR,
  episodeId: mpxGuid,
  error: error.error || error.message
});
const requestTrialAccess = mpxGuid => async (dispatch, getState) => {
  try {
    const {
      id,
      rev
    } = getState().account;
    const {
      data
    } = await (0,_lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .fetchTrialAccess */ .eq)({
      rev,
      userId: id,
      episodeId: mpxGuid
    });
    const profile = data === null || data === void 0 ? void 0 : data.profile;
    if (!profile) {
      throw new Error('Invalid IDM trial response');
    }
    (0,_lib_identity__WEBPACK_IMPORTED_MODULE_3__/* .updateSession */ .CT)(profile);
    dispatch({
      type: SET_ACCOUNT_TRIAL,
      credits: profile.episodeCount,
      episodeId: mpxGuid,
      rev: profile._rev
    });
  } catch (error) {
    dispatch(setTrialError(mpxGuid, error));
  }
};

/***/ }),

/***/ 40671:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $U: function() { return /* binding */ STORE_STATIC_LIST; },
/* harmony export */   $r: function() { return /* binding */ APPEND_VIDEO_LIST; },
/* harmony export */   $z: function() { return /* binding */ REMOVE_ITEM_IN_STATIC_LIST; },
/* harmony export */   Ah: function() { return /* binding */ STORE_SHOW; },
/* harmony export */   Bq: function() { return /* binding */ CLEAR_LIST; },
/* harmony export */   Dw: function() { return /* binding */ FAIL_VIDEO_LIST; },
/* harmony export */   WE: function() { return /* binding */ SET_VALUE; },
/* harmony export */   Xx: function() { return /* binding */ STORE_GUEST; },
/* harmony export */   Z5: function() { return /* binding */ STORE_ITEM_IN_STATIC_LIST; },
/* harmony export */   _0: function() { return /* binding */ STORE_WATCH; },
/* harmony export */   b2: function() { return /* binding */ STORE_VIDEO; },
/* harmony export */   bh: function() { return /* binding */ STORE_GUEST_LIST; },
/* harmony export */   f: function() { return /* binding */ CLEAR_GUEST_LIST; },
/* harmony export */   gT: function() { return /* binding */ SWEEPSTAKES; },
/* harmony export */   gs: function() { return /* binding */ FAIL_GUESTS_CALENDAR; },
/* harmony export */   he: function() { return /* binding */ SET_VALUES; },
/* harmony export */   i9: function() { return /* binding */ STORE_GUESTS_CALENDAR; },
/* harmony export */   jL: function() { return /* binding */ STORE_SHOW_SERIES; },
/* harmony export */   nc: function() { return /* binding */ SET_FACEBOOK_USER; },
/* harmony export */   s4: function() { return /* binding */ STORE_BRANCH; },
/* harmony export */   t7: function() { return /* binding */ STORE_VIDEO_LIST; },
/* harmony export */   vK: function() { return /* binding */ STORE_SERIES; },
/* harmony export */   yO: function() { return /* binding */ FAIL_GUEST_LIST; }
/* harmony export */ });
/* unused harmony export FAIL_GUEST */
// @TODO, turn these into action creators.
const STORE_WATCH = 'STORE_WATCH';
const STORE_STATIC_LIST = 'STORE_STATIC_LIST';
const STORE_ITEM_IN_STATIC_LIST = 'STORE_ITEM_IN_STATIC_LIST';
const REMOVE_ITEM_IN_STATIC_LIST = 'REMOVE_ITEM_IN_STATIC_LIST';
const STORE_BRANCH = 'STORE_BRANCH';
const SET_VALUE = 'SET_VALUE';
const SET_VALUES = 'SET_VALUES';
const SWEEPSTAKES = 'SWEEPSTAKES';
const SET_FACEBOOK_USER = 'SET_FACEBOOK_USER';
const CLEAR_LIST = 'CLEAR_LIST';

// @DEPRECATED, do not use these anymore.
const STORE_SHOW = 'STORE_SHOW';
const STORE_VIDEO = 'STORE_VIDEO';
const STORE_VIDEO_LIST = 'STORE_VIDEO_LIST';
const FAIL_VIDEO_LIST = 'FAIL_VIDEO_LIST';
const APPEND_VIDEO_LIST = 'APPEND_VIDEO_LIST';
const STORE_GUEST_LIST = 'STORE_GUEST_LIST';
const CLEAR_GUEST_LIST = 'CLEAR_GUEST_LIST';
const STORE_GUEST = 'STORE_GUEST';
const FAIL_GUEST_LIST = 'FAIL_GUEST_LIST';
const FAIL_GUEST = 'FAIL_GUEST';
const STORE_GUESTS_CALENDAR = 'STORE_GUESTS_CALENDAR';
const FAIL_GUESTS_CALENDAR = 'FAIL_GUESTS_CALENDAR';
const STORE_SERIES = 'STORE_SERIES';
const STORE_SHOW_SERIES = 'STORE_SHOW_SERIES';

/***/ }),

/***/ 8959:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $g: function() { return /* binding */ adobePassAuthzFailure; },
/* harmony export */   Ai: function() { return /* binding */ ADOBEPASS_IFRAME_CREATE; },
/* harmony export */   BH: function() { return /* binding */ ADOBEPASS_IFRAME_DESTROY; },
/* harmony export */   F9: function() { return /* binding */ adobePassSetBrands; },
/* harmony export */   IL: function() { return /* binding */ adobePassAuthnStatus; },
/* harmony export */   LL: function() { return /* binding */ adobePassAuthnFailure; },
/* harmony export */   MB: function() { return /* binding */ adobePassIframeCreate; },
/* harmony export */   MM: function() { return /* binding */ adobePassIframeDestroy; },
/* harmony export */   PJ: function() { return /* binding */ ADOBEPASS_SET_CONFIG; },
/* harmony export */   Rc: function() { return /* binding */ ADOBEPASS_AUTHN_STATUS; },
/* harmony export */   UG: function() { return /* binding */ adobePassAuthnLogout; },
/* harmony export */   YD: function() { return /* binding */ ADOBEPASS_SET_BRANDS; },
/* harmony export */   _r: function() { return /* binding */ adobePassSetMetadata; },
/* harmony export */   d1: function() { return /* binding */ ADOBEPASS_SET_METADATA; },
/* harmony export */   lM: function() { return /* binding */ ADOBEPASS_AUTHZ_SUCCESS; },
/* harmony export */   lg: function() { return /* binding */ ADOBEPASS_AUTHZ_FAILURE; },
/* harmony export */   n1: function() { return /* binding */ adobePassAuthzSuccess; },
/* harmony export */   ot: function() { return /* binding */ ADOBEPASS_AUTHN_LOGOUT; },
/* harmony export */   tu: function() { return /* binding */ ADOBEPASS_AUTHZ_CLEAR; },
/* harmony export */   x0: function() { return /* binding */ adobePassSetConfig; },
/* harmony export */   y4: function() { return /* binding */ ADOBEPASS_AUTHN_FAILURE; }
/* harmony export */ });
/* unused harmony export adobePassAuthzClear */
const ADOBEPASS_AUTHN_STATUS = 'ADOBEPASS_AUTHN_STATUS';
const adobePassAuthnStatus = _ref => {
  let {
    isAuthenticated,
    isTempPassAuthenticated,
    isTempPassAuthenticationChecked,
    tempPassName,
    mvpd,
    tempPassExpiration,
    errorMappings = {}
  } = _ref;
  return dispatch => dispatch({
    type: ADOBEPASS_AUTHN_STATUS,
    isAuthenticated,
    isTempPassAuthenticated,
    isTempPassAuthenticationChecked,
    tempPassName,
    mvpd,
    tempPassExpiration,
    errorMappings
  });
};
const ADOBEPASS_AUTHN_FAILURE = 'ADOBEPASS_AUTHN_FAILURE';
const adobePassAuthnFailure = _ref2 => {
  let {
    authnError
  } = _ref2;
  return dispatch => dispatch({
    type: ADOBEPASS_AUTHN_FAILURE,
    authnError
  });
};
const ADOBEPASS_AUTHN_LOGOUT = 'ADOBEPASS_AUTHN_LOGOUT';
const adobePassAuthnLogout = () => dispatch => dispatch({
  type: ADOBEPASS_AUTHN_LOGOUT
});
const ADOBEPASS_AUTHZ_SUCCESS = 'ADOBEPASS_AUTHZ_SUCCESS';
const adobePassAuthzSuccess = _ref3 => {
  let {
    pathname,
    authToken
  } = _ref3;
  return {
    type: ADOBEPASS_AUTHZ_SUCCESS,
    pathname,
    authToken
  };
};
const ADOBEPASS_AUTHZ_FAILURE = 'ADOBEPASS_AUTHZ_FAILURE';
const adobePassAuthzFailure = _ref4 => {
  let {
    pathname,
    authzError
  } = _ref4;
  return {
    type: ADOBEPASS_AUTHZ_FAILURE,
    pathname,
    authzError
  };
};
const ADOBEPASS_AUTHZ_CLEAR = 'ADOBEPASS_AUTHZ_CLEAR';
const adobePassAuthzClear = _ref5 => {
  let {
    pathname
  } = _ref5;
  return {
    type: ADOBEPASS_AUTHZ_CLEAR,
    pathname
  };
};
const ADOBEPASS_IFRAME_CREATE = 'ADOBEPASS_IFRAME_CREATE';
const adobePassIframeCreate = () => ({
  type: ADOBEPASS_IFRAME_CREATE
});
const ADOBEPASS_IFRAME_DESTROY = 'ADOBEPASS_IFRAME_DESTROY';
const adobePassIframeDestroy = () => ({
  type: ADOBEPASS_IFRAME_DESTROY
});
const ADOBEPASS_SET_CONFIG = 'ADOBEPASS_SET_CONFIG';
const adobePassSetConfig = _ref6 => {
  let {
    mvpds
  } = _ref6;
  return {
    type: ADOBEPASS_SET_CONFIG,
    mvpds
  };
};
const ADOBEPASS_SET_BRANDS = 'ADOBEPASS_SET_BRANDS';
const adobePassSetBrands = brands => ({
  type: ADOBEPASS_SET_BRANDS,
  brands
});
const ADOBEPASS_SET_METADATA = 'ADOBEPASS_SET_METADATA';
const adobePassSetMetadata = metadata => ({
  type: ADOBEPASS_SET_METADATA,
  metadata
});

/***/ }),

/***/ 67217:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  sE: function() { return /* binding */ CLIENT_CLEAR_NEXT_VIDEO; },
  ZI: function() { return /* binding */ CLIENT_COMPLETE_LOAD_STEP; },
  Wi: function() { return /* binding */ CLIENT_SET_ACTIVATION; },
  S: function() { return /* binding */ CLIENT_SET_ADBLOCK; },
  cA: function() { return /* binding */ CLIENT_SET_BFF_MPARTICLE_API_KEY; },
  r3: function() { return /* binding */ CLIENT_SET_BFF_MPARTICLE_ID; },
  N4: function() { return /* binding */ CLIENT_SET_BFF_PARAMS; },
  Vn: function() { return /* binding */ CLIENT_SET_GEOLOCATION; },
  KX: function() { return /* binding */ CLIENT_SET_IP; },
  ac: function() { return /* binding */ CLIENT_SET_IS_DAYZERO; },
  bK: function() { return /* binding */ CLIENT_SET_LANGUAGE; },
  Zr: function() { return /* binding */ CLIENT_SET_LAST_USER_INTERACTIONS_CHANGE; },
  vC: function() { return /* binding */ CLIENT_SET_MPARTICLE_SESSION_ID; },
  vf: function() { return /* binding */ CLIENT_SET_NATIONAL_BROADCAST_TYPE; },
  fc: function() { return /* binding */ CLIENT_SET_NEXT_VIDEO; },
  CA: function() { return /* binding */ CLIENT_SET_ONETRUST_INTEGRITY_KEY; },
  nO: function() { return /* binding */ CLIENT_SET_START_TIME; },
  Kd: function() { return /* binding */ CLIENT_SET_VALUE; },
  tG: function() { return /* binding */ CLIENT_UNSET_LOAD_STEP; },
  jL: function() { return /* binding */ CLIENT_USER_AGENT; },
  I3: function() { return /* binding */ clearNextVideo; },
  wo: function() { return /* binding */ completeLoadStep; },
  ng: function() { return /* binding */ fetchGeoLocation; },
  PB: function() { return /* binding */ formatGeoLocation; },
  WE: function() { return /* binding */ setActivation; },
  YV: function() { return /* binding */ setAdBlock; },
  L8: function() { return /* binding */ setBffMParticleId; },
  ZR: function() { return /* binding */ setBffParams; },
  Fk: function() { return /* binding */ setDayZero; },
  to: function() { return /* binding */ setGeoLocation; },
  m0: function() { return /* binding */ setLanguage; },
  ML: function() { return /* binding */ setLastUserInteractionsChange; },
  pL: function() { return /* binding */ setMParticleSessionId; },
  oW: function() { return /* binding */ setNationalBroadcastType; },
  Ei: function() { return /* binding */ setNextVideo; },
  qv: function() { return /* binding */ setStartTime; },
  N1: function() { return /* binding */ unsetLoadStep; }
});

// UNUSED EXPORTS: CLIENT_SET_MPS, CLIENT_SET_PERSONALIZATION, setIp, setMParticleApiKey, setOneTrustIntegrityKey, setUserAgent, setValue

// EXTERNAL MODULE: ./webpack-alias/park-logger.js
var park_logger = __webpack_require__(67788);
var park_logger_default = /*#__PURE__*/__webpack_require__.n(park_logger);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./fetches/common/fetchGeoData.js
var fetchGeoData = __webpack_require__(52596);
;// CONCATENATED MODULE: ./utils/isSupportedRegionVOD.js
/**
 * Given a country code, determine if a user is in a supported area for VOD.
 *
 * @param {string} code An ISO3166 country code
 * @return {bool} True if is supported are to watch a VOD
 */
/* harmony default export */ var isSupportedRegionVOD = (code => ['US', 'CA', 'MX'].includes(code.toUpperCase()));
// EXTERNAL MODULE: ./utils/isDayZeroUser.js
var isDayZeroUser = __webpack_require__(36849);
// EXTERNAL MODULE: ./utils/programmingTypes.js
var programmingTypes = __webpack_require__(20057);
;// CONCATENATED MODULE: ./actions/client.js







// Client Actions
const CLIENT_USER_AGENT = 'CLIENT_USER_AGENT';
const CLIENT_SET_GEOLOCATION = 'CLIENT_SET_GEOLOCATION';
const CLIENT_SET_ADBLOCK = 'CLIENT_SET_ADBLOCK';
const CLIENT_SET_ACTIVATION = 'CLIENT_SET_ACTIVATION';
const CLIENT_SET_LANGUAGE = 'CLIENT_SET_LANGUAGE';
const CLIENT_SET_PERSONALIZATION = 'CLIENT_SET_PERSONALIZATION';
const CLIENT_SET_MPS = 'CLIENT_SET_MPS';
const CLIENT_SET_IP = 'CLIENT_SET_IP';
const CLIENT_SET_BFF_PARAMS = 'CLIENT_SET_BFF_PARAMS';
const CLIENT_SET_BFF_MPARTICLE_ID = 'CLIENT_SET_BFF_MPARTICLE_ID';
const CLIENT_SET_BFF_MPARTICLE_API_KEY = 'CLIENT_SET_BFF_MPARTICLE_API_KEY';
const CLIENT_SET_VALUE = 'CLIENT_SET_VALUE';
const CLIENT_SET_IS_DAYZERO = 'CLIENT_SET_IS_DAYZERO';
const CLIENT_SET_MPARTICLE_SESSION_ID = 'CLIENT_SET_MPARTICLE_SESSION_ID';
const CLIENT_SET_ONETRUST_INTEGRITY_KEY = 'CLIENT_SET_ONETRUST_INTEGRITY_KEY';
const CLIENT_SET_START_TIME = 'CLIENT_SET_START_TIME';
const CLIENT_COMPLETE_LOAD_STEP = 'CLIENT_COMPLETE_LOAD_STEP';
const CLIENT_UNSET_LOAD_STEP = 'CLIENT_UNSET_LOAD_STEP';
const CLIENT_SET_NATIONAL_BROADCAST_TYPE = 'CLIENT_SET_NATIONAL_BROADCAST_TYPE';
const CLIENT_SET_LAST_USER_INTERACTIONS_CHANGE = 'CLIENT_SET_LAST_USER_INTERACTIONS_CHANGE';

/**
 * Sets user agent flags based for device capabilities.
 *
 * @param {bool} isMobile
 *  Whether the user is on a Mobile device (tablets are also considered mobile).
 * @param {bool} isMobileWithApp
 *  Whether the user is on a Mobile device with our app, i.e. iOS and Android.
 * @param {bool} isTablet
 *  Whether the user is on a Tablet device.
 * @param {object} browserInfo
 *  General info from browser (name, version, product, manufacturer, os, etc).
 *
 * @returns {object} redux action
 */
const setUserAgent = _ref => {
  let {
    isMobile,
    isMobileWithApp,
    isTablet,
    browserInfo
  } = _ref;
  return {
    type: CLIENT_USER_AGENT,
    userAgent: {
      isMobile,
      isMobileWithApp,
      isTablet,
      browserInfo
    }
  };
};
const setGeoLocation = _ref2 => {
  let {
    brand,
    country,
    isSupportedRegionLive,
    isSupportedRegionVOD,
    channel,
    geoChannel,
    geoChannelLive,
    homeChannel,
    geoZip,
    ip,
    isAuthKilled,
    assetInfo,
    isRestricted,
    restriction,
    timeZone
  } = _ref2;
  return {
    type: CLIENT_SET_GEOLOCATION,
    brand,
    country,
    isSupportedRegionLive,
    isSupportedRegionVOD,
    channel,
    geoChannel,
    geoChannelLive,
    homeChannel,
    geoZip,
    ip,
    isAuthKilled,
    assetInfo,
    isRestricted,
    restriction,
    timeZone
  };
};
const formatGeoLocation = (brand, payload) => {
  var _payload$data, _payload$data$request, _payload$data$request2;
  const countryCode = get_default()(payload, ['data', 'requestInfo', 'countryCode'], 'US');
  const ip = get_default()(payload, ['data', 'requestInfo', 'ip'], 'NA');
  const timeZone = get_default()(payload, ['data', 'requestInfo', 'timeZone']);
  countryCode === null && park_logger_default().log("geoServices returns countryCode null for IP address ".concat(ip));
  let geoChannelLive;
  // It is used to get the page schedule when it is outside the USA and the MVPD provider is allowed.
  // It should not be overwritten by VOD GEO API because It will not return the geoChannel when it is not allowed
  // to watch the content
  if (brand === 'nbc' && (payload === null || payload === void 0 ? void 0 : (_payload$data = payload.data) === null || _payload$data === void 0 ? void 0 : (_payload$data$request = _payload$data.requestInfo) === null || _payload$data$request === void 0 ? void 0 : (_payload$data$request2 = _payload$data$request.mediaType) === null || _payload$data$request2 === void 0 ? void 0 : _payload$data$request2.toLowerCase()) === programmingTypes/* LIVE */.wI) {
    var _payload$data2, _payload$data2$locali;
    geoChannelLive = payload === null || payload === void 0 ? void 0 : (_payload$data2 = payload.data) === null || _payload$data2 === void 0 ? void 0 : (_payload$data2$locali = _payload$data2.localizedChannelInfo) === null || _payload$data2$locali === void 0 ? void 0 : _payload$data2$locali.geoChannel;
  }
  return {
    brand,
    country: countryCode || 'US',
    isSupportedRegionLive: !get_default()(payload, ['data', 'restricted'], true),
    isSupportedRegionVOD: isSupportedRegionVOD(countryCode || 'US'),
    channel: get_default()(payload, ['data', 'localizedChannelInfo', 'channel']),
    geoChannel: get_default()(payload, ['data', 'localizedChannelInfo', 'geoChannel']),
    geoChannelLive,
    homeChannel: get_default()(payload, ['data', 'localizedChannelInfo', 'homeChannel']),
    geoZip: get_default()(payload, ['data', 'requestInfo', 'geoZip']),
    ip,
    // This value can change regularly depending on the program playing.
    // Be sure to re-fire this action whenever you need the latest value.
    isAuthKilled: !get_default()(payload, ['data', 'assetInfo', 'authRequired'], true),
    // Used for passing latest live asset details to the cloudpath player.
    assetInfo: get_default()(payload, ['data', 'assetInfo']),
    isRestricted: !!get_default()(payload, ['data', 'restricted']),
    restriction: get_default()(payload, ['data', 'restrictionDetails']),
    timeZone
  };
};
const fetchGeoLocation = data => async dispatch => {
  const geoData = await (0,fetchGeoData/* default */.Z)(data);
  dispatch(setGeoLocation(formatGeoLocation(data === null || data === void 0 ? void 0 : data.brand, geoData)));
};
const CLIENT_SET_NEXT_VIDEO = 'CLIENT_SET_NEXT_VIDEO';
const setNextVideo = (showTitle, seasonNumber) => ({
  type: CLIENT_SET_NEXT_VIDEO,
  payload: {
    showTitle,
    seasonNumber
  }
});
const CLIENT_CLEAR_NEXT_VIDEO = 'CLIENT_CLEAR_NEXT_VIDEO';
const clearNextVideo = () => ({
  type: CLIENT_CLEAR_NEXT_VIDEO,
  payload: {}
});
const setAdBlock = status => ({
  type: CLIENT_SET_ADBLOCK,
  status
});
const setActivation = data => ({
  type: CLIENT_SET_ACTIVATION,
  data
});
const setLanguage = language => ({
  type: CLIENT_SET_LANGUAGE,
  language
});
const setBffParams = params => ({
  type: CLIENT_SET_BFF_PARAMS,
  params
});
const setMParticleApiKey = mParticleApiKey => ({
  type: CLIENT_SET_BFF_MPARTICLE_API_KEY,
  mParticleApiKey
});
const setMParticleSessionId = mParticleSessionId => ({
  type: CLIENT_SET_MPARTICLE_SESSION_ID,
  mParticleSessionId
});
const setIp = ip => ({
  type: CLIENT_SET_IP,
  ip
});
const setValue = (value, key) => ({
  type: CLIENT_SET_VALUE,
  key,
  value
});
const setDayZero = isDayZero => (dispatch, getState) => {
  var _state$client;
  const state = getState();
  const mpId = state === null || state === void 0 ? void 0 : (_state$client = state.client) === null || _state$client === void 0 ? void 0 : _state$client.bffMParticleId;
  (0,isDayZeroUser/* syncDayZero */.Jr)(mpId, isDayZero);
  return dispatch({
    type: CLIENT_SET_IS_DAYZERO,
    isDayZero
  });
};
const setBffMParticleId = mParticleId => dispatch => {
  const dayZeroValue = (0,isDayZeroUser/* checkStoredDayZero */.a5)(mParticleId);
  dispatch({
    type: CLIENT_SET_BFF_MPARTICLE_ID,
    mParticleId
  });
  dispatch(setDayZero(dayZeroValue));
};
const setOneTrustIntegrityKey = integrityKey => ({
  type: CLIENT_SET_ONETRUST_INTEGRITY_KEY,
  integrityKey
});
const setStartTime = startTime => ({
  type: CLIENT_SET_START_TIME,
  startTime
});
const completeLoadStep = loadStep => ({
  type: CLIENT_COMPLETE_LOAD_STEP,
  loadStep
});
const unsetLoadStep = loadStep => ({
  type: CLIENT_UNSET_LOAD_STEP,
  loadStep
});
const setNationalBroadcastType = nationalBroadcastType => ({
  type: CLIENT_SET_NATIONAL_BROADCAST_TYPE,
  nationalBroadcastType
});
const setLastUserInteractionsChange = time => ({
  type: CLIENT_SET_LAST_USER_INTERACTIONS_CHANGE,
  time: time !== null && time !== void 0 ? time : Date.now()
});

/***/ }),

/***/ 30909:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I: function() { return /* binding */ storeDeprecatedPage; },
/* harmony export */   O: function() { return /* binding */ STORE_DEPRECATED_PAGE; }
/* harmony export */ });
const STORE_DEPRECATED_PAGE = 'STORE_DEPRECATED_PAGE';
const storeDeprecatedPage = (pathname, data) => ({
  type: STORE_DEPRECATED_PAGE,
  pathname,
  data
});

/***/ }),

/***/ 68110:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Fo: function() { return /* binding */ bulkSetFavorites; },
/* harmony export */   Ft: function() { return /* binding */ SET_USER_FAVORITE; },
/* harmony export */   KX: function() { return /* binding */ BULK_SET_FAVORITES; },
/* harmony export */   P0: function() { return /* binding */ removeUserFavorite; },
/* harmony export */   gk: function() { return /* binding */ setUserFavorite; },
/* harmony export */   zR: function() { return /* binding */ REMOVE_USER_FAVORITE; }
/* harmony export */ });
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67217);

const BULK_SET_FAVORITES = 'BULK_SET_FAVORITES';
const bulkSetFavorites = favorites => ({
  type: BULK_SET_FAVORITES,
  favorites
});
const SET_USER_FAVORITE = 'SET_USER_FAVORITE';
const setUserFavorite = (dispatch, titleId, favorite) => {
  dispatch({
    type: SET_USER_FAVORITE,
    titleId,
    favorite
  });
  dispatch((0,_client__WEBPACK_IMPORTED_MODULE_0__/* .setLastUserInteractionsChange */ .ML)());
};
const REMOVE_USER_FAVORITE = 'REMOVE_USER_FAVORITE';
const removeUserFavorite = (dispatch, titleId) => {
  dispatch({
    type: REMOVE_USER_FAVORITE,
    titleId
  });
  dispatch((0,_client__WEBPACK_IMPORTED_MODULE_0__/* .setLastUserInteractionsChange */ .ML)());
};

/***/ }),

/***/ 62452:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Xh: function() { return /* binding */ SET_LAUNCH_DARKLY_CLIENT_FLAGS; },
  f3: function() { return /* binding */ SET_LAUNCH_DARKLY_SERVER_FLAGS; },
  EK: function() { return /* binding */ setLaunchDarklyClientFlags; }
});

// UNUSED EXPORTS: setLaunchDarklyServerFlags

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./lib/launchDarkly.js + 1 modules
var launchDarkly = __webpack_require__(67745);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/axios/lib/axios.js + 48 modules
var axios = __webpack_require__(238);
// EXTERNAL MODULE: ./node_modules/qs/lib/index.js
var lib = __webpack_require__(80129);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);
// EXTERNAL MODULE: ./utils/throwHTTPError.js
var throwHTTPError = __webpack_require__(36848);
;// CONCATENATED MODULE: ./lib/amplitude.js
/**
 * This file creates a wrapper to expose the Amplitude API.
 * @see https://amplitude.zendesk.com/hc/en-us/articles/205406617-Identify-API-Modify-User-Properties
 */




const API_URL = config/* default */.Z.get('API.amplitude.url');
const API_KEY = config/* default */.Z.get('API.amplitude.apiKey');
const getFlagValues = flag => flag.bucket ? flag.bucket : JSON.stringify(flag);
const amplitude = {};

// Remove once flags in LD are cleaned, right now there is an issue with amplitude max properties. NBCRESP-15037
const ldIgnoreFlags = ['isMarketingModuleAudioEnabled', 'isMarketingModuleEnabled', 'isMarketingModulePreviewEnabled', 'isMultiCDNComcastEnabled', 'isPeacockAccountCreationEnabled', 'isPeacockAppLinkEnabled', 'isPeacockPreviewEnabled', 'isOpenMeasurementEnabled', 'is404shelfEnabled', 'isUpdateEmailEnabled', 'isWatchDataEnabledForClips', 'livePlayerWatchDuration'];

/**
 * General API POST method.
 *
 * @param {object} featureFlags
 *   Feature flags from Launch Darkly that will be sent via the POST body.
 * @param {string} mParticleId
 *  The user's permanent mParticle ID
 *
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there's an error.
 */

amplitude.setUserAttributes = (featureFlags, mParticleId) => {
  // Remove FILTER once flags in LD are cleaned, right now there is an issue with amplitude max properties. NBCRESP-15037
  const flags = Object.keys(featureFlags).filter(flag => !ldIgnoreFlags.includes(flag)).map(key => "".concat(key, "::").concat(typeof featureFlags[key] !== 'object' ? featureFlags[key] : getFlagValues(featureFlags[key])));
  const dataAttributes = lib_default().stringify({
    api_key: API_KEY,
    identification: JSON.stringify({
      user_id: mParticleId,
      user_properties: {
        'nbc.com Feature Flags': flags
      }
    })
  });
  return (0,axios/* default */.Z)({
    method: 'POST',
    url: API_URL,
    data: dataAttributes
  }).catch(err => (0,throwHTTPError/* default */.Z)(err, err.status || 500, API_URL));
};
/* harmony default export */ var lib_amplitude = (amplitude);
;// CONCATENATED MODULE: ./actions/launchDarkly.js




const SET_LAUNCH_DARKLY_CLIENT_FLAGS = 'SET_LAUNCH_DARKLY_CLIENT_FLAGS';
const SET_LAUNCH_DARKLY_SERVER_FLAGS = 'SET_LAUNCH_DARKLY_SERVER_FLAGS';
const setLaunchDarklyClientFlags = function () {
  let isPersonalizationEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  return dispatch => Promise.all([launchDarkly/* default */.Z.initialize(isPersonalizationEnabled), mParticle/* default */.ZP.getId()]).then(_ref => {
    let [ld, mParticleId] = _ref;
    const flags = ld && ld.allFlags();
    if (Object.keys(flags).length) {
      lib_amplitude.setUserAttributes(flags, mParticleId);
      dispatch({
        type: SET_LAUNCH_DARKLY_CLIENT_FLAGS,
        flags
      });
    }
  });
};
const setLaunchDarklyServerFlags = flags => dispatch => Object.keys(flags).length && dispatch({
  type: SET_LAUNCH_DARKLY_SERVER_FLAGS,
  flags
});

/***/ }),

/***/ 7230:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QT: function() { return /* binding */ removeLiveGuideItem; },
/* harmony export */   ZU: function() { return /* binding */ REMOVE_LIVE_GUIDE_ITEM; },
/* harmony export */   s_: function() { return /* binding */ STORE_LIVE_GUIDE_ITEM; },
/* harmony export */   xp: function() { return /* binding */ storeLiveGuideItem; }
/* harmony export */ });
const STORE_LIVE_GUIDE_ITEM = 'STORE_LIVE_GUIDE_ITEM';
const storeLiveGuideItem = _ref => {
  let {
    component,
    name,
    requestTimestamp,
    variables
  } = _ref;
  return {
    type: STORE_LIVE_GUIDE_ITEM,
    name,
    component,
    request: {
      variables,
      timestamp: requestTimestamp
    }
  };
};
const REMOVE_LIVE_GUIDE_ITEM = 'REMOVE_LIVE_GUIDE_ITEM';
const removeLiveGuideItem = _ref2 => {
  let {
    name
  } = _ref2;
  return {
    type: REMOVE_LIVE_GUIDE_ITEM,
    name
  };
};

/***/ }),

/***/ 4997:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Xx: function() { return /* binding */ NAVIGATION_CLEAR_ACTIVE_OVERRIDE; },
  SF: function() { return /* binding */ NAVIGATION_CLEAR_PREVIOUS_ALGOLIA_OBJECT; },
  x5: function() { return /* binding */ NAVIGATION_PRELOAD_STATUS; },
  Hu: function() { return /* binding */ NAVIGATION_SET_ACTIVE_GROUP; },
  UM: function() { return /* binding */ NAVIGATION_SET_ACTIVE_OVERRIDE; },
  Wg: function() { return /* binding */ NAVIGATION_SET_GLOBAL_NAVIGATION; },
  dn: function() { return /* binding */ NAVIGATION_SET_LIVE_CALLOUT_STATUS; },
  Ug: function() { return /* binding */ NAVIGATION_SET_NEWS_BAR_STATUS; },
  LZ: function() { return /* binding */ NAVIGATION_SET_ONBOARDING_MODAL_STATUS; },
  wY: function() { return /* binding */ NAVIGATION_SET_PREVIOUS_ALGOLIA_OBJECT; },
  Dk: function() { return /* binding */ NAVIGATION_SET_PREVIOUS_LOCATION; },
  UC: function() { return /* binding */ NAVIGATION_SET_PREVIOUS_VIDEO; },
  AB: function() { return /* binding */ NAVIGATION_SET_SEARCH_QUERY; },
  jq: function() { return /* binding */ NAVIGATION_SHOW_FOCUS; },
  hh: function() { return /* binding */ NAVIGATION_SKIP_LINK; },
  MP: function() { return /* binding */ NAVIGATION_STORE_NAVIGATION_MENU; },
  gP: function() { return /* binding */ NAVIGATION_TOGGLE_ACCOUNT_NAV; },
  E3: function() { return /* binding */ NAVIGATION_TOGGLE_FAVORITE_MODAL; },
  c$: function() { return /* binding */ NAVIGATION_TOGGLE_NAV; },
  Iw: function() { return /* binding */ clearActiveOverride; },
  j7: function() { return /* binding */ clearPreviousAlgoliaObject; },
  L_: function() { return /* binding */ fetchGlobalNavigation; },
  sq: function() { return /* binding */ setActiveNavGroup; },
  EV: function() { return /* binding */ setActiveOverride; },
  J: function() { return /* binding */ setLiveCalloutStatus; },
  EQ: function() { return /* binding */ setNavigationPreLoadStatus; },
  BJ: function() { return /* binding */ setNewsBarStatus; },
  NL: function() { return /* binding */ setOnboardingModalStatus; },
  JG: function() { return /* binding */ setPreviousAlgoliaObject; },
  Yl: function() { return /* binding */ setPreviousLocation; },
  cs: function() { return /* binding */ setPreviousVideo; },
  TD: function() { return /* binding */ setShowNavigationFocus; },
  jH: function() { return /* binding */ skipLinkActivated; },
  dv: function() { return /* binding */ storeNavigationMenu; },
  r: function() { return /* binding */ toggleAccountNav; },
  vM: function() { return /* binding */ toggleFavoriteModalVisibility; },
  mi: function() { return /* binding */ toggleNav; }
});

// UNUSED EXPORTS: setGlobalNavigation, setSearchQuery

// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/cookies-js/dist/cookies.js
var cookies = __webpack_require__(27360);
var cookies_default = /*#__PURE__*/__webpack_require__.n(cookies);
// EXTERNAL MODULE: ./lib/friendship.js + 29 modules
var friendship = __webpack_require__(67641);
;// CONCATENATED MODULE: ./components/Navigation/mocks/globalNavigation.json
var globalNavigation_namespaceObject = JSON.parse('{"component":"LinksSelectableGroup","meta":null,"treatment":"default","treatments":[],"logicName":null,"deepLinkHandle":null,"data":{"instanceID":"3e6e9b15-0c30-4b19-bcc8-bfa1ef550627","initiallySelected":0,"itemLabels":["Home","Shows","Movies","Networks","LIVE","App","Shop","Peacock Preview","Search"],"itemLabelsTitle":null,"optionalTitle":null,"gradientStart":null,"items":[{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"3d43565c-e321-4381-997b-96931da68bb5","title":"Home","machineName":"home","defaultLogo":null,"selectedLogo":null,"focusedLogo":null,"ariaLabel":"Home","destinationType":"internalPage","destination":"https://www.nbc.com"},"analytics":{"itemClickedName":"Home"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"bd4742a1-9630-411d-abf6-db063b5d2499","title":"Shows","machineName":"shows","defaultLogo":null,"selectedLogo":null,"focusedLogo":null,"ariaLabel":"Shows","destinationType":"internalPage","destination":"https://www.nbc.com/shows/all/popular"},"analytics":{"itemClickedName":"Shows"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"b284c63b-2af9-4021-923c-088d9de3ac9d","title":"Movies","machineName":"movies","defaultLogo":null,"selectedLogo":null,"focusedLogo":null,"ariaLabel":"Movies","destinationType":"internalPage","destination":"https://www.nbc.com/movies/popular"},"analytics":{"itemClickedName":"Movies"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"7a6d1a98-3608-478c-8d9c-6bdf06ccc217","title":"Networks","machineName":"networks","defaultLogo":null,"selectedLogo":null,"focusedLogo":null,"ariaLabel":"Networks","destinationType":"internalPage","destination":"https://www.nbc.com/networks"},"analytics":{"itemClickedName":"Networks"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"fa1836b1-a54f-47f6-bf42-89ffba28b6b7","title":"LIVE","machineName":"live","defaultLogo":null,"selectedLogo":null,"focusedLogo":null,"ariaLabel":"LIVE","destinationType":"internalPage","destination":"https://www.nbc.com/live"},"analytics":{"itemClickedName":"LIVE"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"391acde9-ec6e-4640-9590-a4e9f337ea00","title":"App","machineName":"app","defaultLogo":null,"selectedLogo":null,"focusedLogo":null,"ariaLabel":"App","destinationType":"internalPage","destination":"https://www.nbc.com/apps?brand=nbc"},"analytics":{"itemClickedName":"App"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"7de88f7b-9c95-4f9c-88f1-56dca64d972d","title":"Shop","machineName":"shop","defaultLogo":null,"selectedLogo":null,"focusedLogo":null,"ariaLabel":"Shop","destinationType":"externalPage","destination":"https://www.nbcstore.com/?cid=nbc_global_nav_shop"},"analytics":{"itemClickedName":"Shop"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"c5e4a7e0-c4a3-49b6-95d0-b8121fcf83c4","title":"Peacock Preview","machineName":"peacock-preview","defaultLogo":"https://img.nbc.com/sites/nbcunbc/files/images/2021/6/29/peacock_preview.png","selectedLogo":"https://img.nbc.com/sites/nbcunbc/files/images/2021/6/29/peacock_preview.png","focusedLogo":"https://img.nbc.com/sites/nbcunbc/files/images/2021/6/29/peacock_preview.png","ariaLabel":"Peacock Preview","destinationType":"internalPage","destination":"https://www.nbc.com/networks/peacock"},"analytics":{"itemClickedName":"Peacock Preview"}},{"component":"NavigationItem","meta":null,"treatment":"default","treatments":[],"data":{"instanceID":"e128b786-2632-4c3b-bc15-862458d5596e","title":"Search","machineName":"search","defaultLogo":"https://img.nbc.com/sites/nbcunbc/files/images/2021/6/29/elements-search-icon.png","selectedLogo":"https://img.nbc.com/sites/nbcunbc/files/images/2021/6/29/elements-search-icon-active.png","focusedLogo":"https://img.nbc.com/sites/nbcunbc/files/images/2021/6/30/elements-search-rollover-hover.png","ariaLabel":"Search","destinationType":"internalPage","destination":"https://www.nbc.com/search"},"analytics":{"itemClickedName":"Search"}}]},"analytics":{"itemLabels":["Home","Shows","Movies","Networks","LIVE","App","Shop","Peacock Preview","Search"]}}');
// EXTERNAL MODULE: ./utils/checkIsPersonalizationEnabled.js
var checkIsPersonalizationEnabled = __webpack_require__(64108);
;// CONCATENATED MODULE: ./actions/navigation.js






const ONEAPP_FLAG = config/* default */.Z.get('API.friendship.oneApp');
const LAUNCHDARKLY_FLAG = config/* default */.Z.get('API.friendship.launchDarkly');
const PROFILES = config/* default */.Z.get('API.friendship.defaultProfiles');
const APP = config/* default */.Z.get('API.friendship.appName');
const IDENTITY_ENABLED = config/* default */.Z.get('identity.enabled');
const IDENTITY_FAVORITE_EXPIRE = config/* default */.Z.get('identity.identityFavoriteExpire');
const NAVIGATION_TOGGLE_NAV = 'NAVIGATION_TOGGLE_NAV';
const NAVIGATION_TOGGLE_ACCOUNT_NAV = 'NAVIGATION_TOGGLE_ACCOUNT_NAV';
const NAVIGATION_SET_ACTIVE_GROUP = 'NAVIGATION_SET_ACTIVE_GROUP';
const NAVIGATION_SET_NEWS_BAR_STATUS = 'NAVIGATION_SET_NEWS_BAR_STATUS';
const NAVIGATION_SET_SEARCH_QUERY = 'NAVIGATION_SET_SEARCH_QUERY';
const NAVIGATION_SET_PREVIOUS_LOCATION = 'NAVIGATION_SET_PREVIOUS_LOCATION';
const NAVIGATION_SET_PREVIOUS_ALGOLIA_OBJECT = 'NAVIGATION_SET_PREVIOUS_ALGOLIA_OBJECT';
const NAVIGATION_CLEAR_PREVIOUS_ALGOLIA_OBJECT = 'NAVIGATION_CLEAR_PREVIOUS_ALGOLIA_OBJECT';
const NAVIGATION_SET_PREVIOUS_VIDEO = 'NAVIGATION_SET_PREVIOUS_VIDEO';
const NAVIGATION_SKIP_LINK = 'NAVIGATION_SKIP_LINK';
const NAVIGATION_SHOW_FOCUS = 'NAVIGATION_SHOW_FOCUS';
const NAVIGATION_SET_LIVE_CALLOUT_STATUS = 'NAVIGATION_SET_LIVE_CALLOUT_STATUS';
const NAVIGATION_SET_GLOBAL_NAVIGATION = 'NAVIGATION_SET_GLOBAL_NAVIGATION';
const NAVIGATION_TOGGLE_FAVORITE_MODAL = 'NAVIGATION_TOGGLE_FAVORITE_MODAL';
const NAVIGATION_SET_ONBOARDING_MODAL_STATUS = 'NAVIGATION_SET_ONBOARDING_MODAL_STATUS';
const NAVIGATION_PRELOAD_STATUS = 'NAVIGATION_PRELOAD_STATUS';
const NAVIGATION_STORE_NAVIGATION_MENU = 'NAVIGATION_STORE_NAVIGATION_MENU';
const NAVIGATION_SET_ACTIVE_OVERRIDE = 'NAVIGATION_SET_ACTIVE_OVERRIDE';
const NAVIGATION_CLEAR_ACTIVE_OVERRIDE = 'NAVIGATION_CLEAR_ACTIVE_OVERRIDE';
const toggleNav = () => ({
  type: NAVIGATION_TOGGLE_NAV
});
const skipLinkActivated = () => ({
  type: NAVIGATION_SKIP_LINK
});
const toggleAccountNav = () => ({
  type: NAVIGATION_TOGGLE_ACCOUNT_NAV
});
const setActiveNavGroup = function () {
  let activeGroup = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return {
    type: NAVIGATION_SET_ACTIVE_GROUP,
    activeGroup
  };
};
const setNewsBarStatus = function () {
  let isNewsBarOpen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return {
    type: NAVIGATION_SET_NEWS_BAR_STATUS,
    isNewsBarOpen
  };
};
const setSearchQuery = query => ({
  type: NAVIGATION_SET_SEARCH_QUERY,
  query
});
const setPreviousLocation = location => ({
  type: NAVIGATION_SET_PREVIOUS_LOCATION,
  location
});
const setPreviousAlgoliaObject = (queryID, objectID, pathname) => ({
  type: NAVIGATION_SET_PREVIOUS_ALGOLIA_OBJECT,
  queryID,
  objectID,
  pathname
});
const clearPreviousAlgoliaObject = () => ({
  type: NAVIGATION_CLEAR_PREVIOUS_ALGOLIA_OBJECT
});
const setPreviousVideo = _ref => {
  let {
    mpxGuid,
    programmingType
  } = _ref;
  return {
    type: NAVIGATION_SET_PREVIOUS_VIDEO,
    mpxGuid,
    programmingType
  };
};
const setShowNavigationFocus = _ref2 => {
  let {
    navItemIndex
  } = _ref2;
  return {
    type: NAVIGATION_SHOW_FOCUS,
    navItemIndex
  };
};
const setLiveCalloutStatus = function () {
  let isNotificationVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  let data = arguments.length > 1 ? arguments[1] : undefined;
  return {
    type: NAVIGATION_SET_LIVE_CALLOUT_STATUS,
    isNotificationVisible,
    data
  };
};
const setGlobalNavigation = data => ({
  type: NAVIGATION_SET_GLOBAL_NAVIGATION,
  data
});
const setOnboardingModalStatus = function () {
  let isOnboardingModalVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return {
    type: NAVIGATION_SET_ONBOARDING_MODAL_STATUS,
    isOnboardingModalVisible
  };
};
const setNavigationPreLoadStatus = function () {
  let isPreLoading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return {
    type: NAVIGATION_PRELOAD_STATUS,
    isPreLoading
  };
};
const storeNavigationMenu = (series, data) => ({
  type: NAVIGATION_STORE_NAVIGATION_MENU,
  series,
  data
});
const setActiveOverride = machineName => ({
  type: NAVIGATION_SET_ACTIVE_OVERRIDE,
  machineName
});
const clearActiveOverride = () => ({
  type: NAVIGATION_CLEAR_ACTIVE_OVERRIDE
});
const fetchGlobalNavigation = userId => (dispatch, getState) => {
  var _state$client;
  const state = getState();
  const isMobile = get_default()(state, ['client', 'userAgent', 'isMobile']);
  const language = ((_state$client = state.client) === null || _state$client === void 0 ? void 0 : _state$client.language) || 'en';
  const isPersonalizationEnabled = (0,checkIsPersonalizationEnabled/* default */.Z)(state);
  return (0,friendship/* getLazyComponent */.sO)({
    queryName: 'globalNavigation',
    queryVariables: {
      userId: isPersonalizationEnabled ? userId : '0',
      oneApp: ONEAPP_FLAG,
      platform: isMobile ? 'mobileWeb' : 'web',
      ld: LAUNCHDARKLY_FLAG,
      device: 'web',
      language,
      profile: PROFILES,
      app: APP
    },
    path: 'data.globalNavigation'
  }).then(payload => {
    dispatch(setGlobalNavigation(payload));
    return payload;
  }).catch(() => {
    // Fallback to mock data (the response at the time of this addition).
    dispatch(setGlobalNavigation(globalNavigation_namespaceObject));
  });
};

// eslint-disable-next-line consistent-return
const toggleFavoriteModalVisibility = (metadata, close) => {
  // Display a Modal if its the first time this user has favorited.
  let identityFavorite;
  if (IDENTITY_ENABLED) {
    identityFavorite = cookies_default().get('identityFavorite');
    if (!identityFavorite) {
      cookies_default().set('identityFavorite', '1', {
        expires: IDENTITY_FAVORITE_EXPIRE
      });
    }
  }
  const isClosing = identityFavorite || close;
  return {
    type: NAVIGATION_TOGGLE_FAVORITE_MODAL,
    ...(isClosing ? {
      open: false,
      metadata
    } : {
      metadata
    })
  };
};

/***/ }),

/***/ 18045:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   B7: function() { return /* binding */ COPY_PAGE; },
/* harmony export */   H6: function() { return /* binding */ fetchPage; },
/* harmony export */   Jc: function() { return /* binding */ FAIL_PAGE; },
/* harmony export */   Pe: function() { return /* binding */ STORE_PAGE; },
/* harmony export */   Qh: function() { return /* binding */ STORE_LAZY_PAGE; },
/* harmony export */   RL: function() { return /* binding */ UPDATE_FAVORITES_SHELF; },
/* harmony export */   Xh: function() { return /* binding */ delayFetchPage; },
/* harmony export */   ZF: function() { return /* binding */ STORE_SUBPAGE_RESPONSE; },
/* harmony export */   ag: function() { return /* binding */ subpageTypes; },
/* harmony export */   g0: function() { return /* binding */ requestSources; },
/* harmony export */   gf: function() { return /* binding */ CLEAR_SUBPAGE_RESPONSE; },
/* harmony export */   h0: function() { return /* binding */ storeSubpageResponse; },
/* harmony export */   jl: function() { return /* binding */ storeLazyPage; },
/* harmony export */   ki: function() { return /* binding */ CLEAR_PAGE; },
/* harmony export */   qX: function() { return /* binding */ failPage; },
/* harmony export */   rs: function() { return /* binding */ clearPage; },
/* harmony export */   wp: function() { return /* binding */ storePage; }
/* harmony export */ });
/* unused harmony exports copyPage, updateFavoritesShelf, storeFavorites, storeFavoritesIds, storeLoadingFavorite, removeLoadingFavorites, clearSubpageResponse, clearPlaceholders, clearFeatured */
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67641);
/* harmony import */ var _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(51054);
/* harmony import */ var _utils_HTTPError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80034);
/* harmony import */ var _utils_getVideoPathname__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(68206);
/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(67217);
/* harmony import */ var _navigation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(4997);
/* harmony import */ var _fetches_common_getBffVariables__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(92552);










const STORE_PAGE = 'STORE_PAGE';
const UPDATE_FAVORITES_SHELF = 'UPDATE_FAVORITES_SHELF';
const storePage = (pathname, payload) => ({
  type: STORE_PAGE,
  pathname,
  payload
});
const STORE_LAZY_PAGE = 'STORE_LAZY_PAGE';
const storeLazyPage = _ref => {
  let {
    pathname,
    payload,
    variables,
    source
  } = _ref;
  return {
    type: STORE_LAZY_PAGE,
    pathname,
    payload,
    variables,
    source
  };
};
const COPY_PAGE = 'COPY_PAGE';
const copyPage = (sourcePath, destinationPath) => ({
  type: COPY_PAGE,
  sourcePath,
  destinationPath
});
const updateFavoritesShelf = payload => ({
  type: UPDATE_FAVORITES_SHELF,
  payload
});
const storeFavorites = items => ({
  type: STORE_STATIC_LIST,
  listKey: 'favorites',
  items
});
const storeFavoritesIds = items => ({
  type: STORE_STATIC_LIST,
  listKey: 'favoritesIds',
  items
});
const storeLoadingFavorite = item => ({
  type: STORE_ITEM_IN_STATIC_LIST,
  listKey: 'favoritesLoading',
  item
});
const removeLoadingFavorites = () => ({
  type: CLEAR_LIST,
  listKey: 'favoritesLoading'
});
const FAIL_PAGE = 'FAIL_PAGE';
const failPage = (pathname, error) => ({
  type: FAIL_PAGE,
  pathname,
  error
});
const CLEAR_PAGE = 'CLEAR_PAGE';
const clearPage = pathname => ({
  type: CLEAR_PAGE,
  pathname
});
const requestSources = {
  CLIENT: 'client',
  SERVER: 'server'
};
const subpageTypes = {
  BASE: 'base',
  FEATURED_SECTION: 'featured',
  PLACEHOLDER_SHELVES: 'placeholders'
};
const STORE_SUBPAGE_RESPONSE = 'STORE_SUBPAGE_RESPONSE';
const storeSubpageResponse = _ref2 => {
  let {
    pathname,
    type,
    payload,
    request,
    source = requestSources.CLIENT
  } = _ref2;
  return {
    type: STORE_SUBPAGE_RESPONSE,
    pathname,
    payload,
    request,
    responseType: type,
    source
  };
};
const CLEAR_SUBPAGE_RESPONSE = 'CLEAR_SUBPAGE_RESPONSE';
const clearSubpageResponse = _ref3 => {
  let {
    pathname,
    subpage
  } = _ref3;
  return {
    type: CLEAR_SUBPAGE_RESPONSE,
    subpageType: subpage,
    pathname
  };
};
const clearPlaceholders = pathname => clearSubpageResponse({
  pathname,
  subpage: subpageTypes.PLACEHOLDER_SHELVES
});
const clearFeatured = pathname => clearSubpageResponse({
  pathname,
  subpage: subpageTypes.FEATURED_SECTION
});
const dispatchPayload = _ref4 => {
  var _pageData$data, _pageData$data$sectio;
  let {
    dispatch,
    payload,
    pathToData,
    pathname,
    userId,
    isLazyPage,
    variables,
    source
  } = _ref4;
  const pageData = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(payload, pathToData, {});

  // This sets the mParticle ID used to load the page in Redux. This is just
  // for convenience to grab the mParticleId in page components instead of
  // having to call mParticle.getId() in componentDidMount().
  if (userId) {
    dispatch((0,_client__WEBPACK_IMPORTED_MODULE_6__/* .setBffMParticleId */ .L8)(userId));
  }
  const navigationMenu = pageData === null || pageData === void 0 ? void 0 : (_pageData$data = pageData.data) === null || _pageData$data === void 0 ? void 0 : (_pageData$data$sectio = _pageData$data.sections) === null || _pageData$data$sectio === void 0 ? void 0 : _pageData$data$sectio.reduce(section => (section === null || section === void 0 ? void 0 : section.component) === 'NavigationMenu' && section);
  if (navigationMenu) {
    var _pageData$metadata;
    dispatch((0,_navigation__WEBPACK_IMPORTED_MODULE_7__/* .storeNavigationMenu */ .dv)((0,_utils_getVideoPathname__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(pageData === null || pageData === void 0 ? void 0 : (_pageData$metadata = pageData.metadata) === null || _pageData$metadata === void 0 ? void 0 : _pageData$metadata.programmingType, pathname), navigationMenu));
  }
  if (isLazyPage) {
    dispatch(storeLazyPage({
      pathname,
      payload: pageData,
      variables,
      source
    }));
  } else {
    dispatch(storePage(pathname, pageData, variables));
  }
  return pageData;
};
const QUERY_NAME = 'bonanzaPage';
const fetchPage = _ref5 => {
  let {
    pathname,
    name,
    type,
    userId,
    variables,
    query = QUERY_NAME,
    pathToData = 'data.data.bonanzaPage',
    requiredData = [],
    app,
    cacheKey,
    skipFailPage = false,
    pid,
    isLazyPage = false,
    source = requestSources.CLIENT
  } = _ref5;
  return (dispatch, getState) => {
    const state = getState();
    const bffVariables = (0,_fetches_common_getBffVariables__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)({
      name,
      type,
      userId,
      query,
      variables,
      app,
      pid,
      state,
      __legacyNonPersonalized: !isLazyPage
    });
    return (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_2__/* .gql */ .Ps)({
      query,
      variables: bffVariables,
      cacheKey
    }).then(payload => {
      const data = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(payload, pathToData);
      // No data and errors means 404 page
      if (!data && lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(payload, ['data', 'errors'], []).length) {
        throw new _utils_HTTPError__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Friendship data errors found for ".concat(pathname), 404, pathname);
      }
      // Data is fine, but required data is not coming in response
      if (data && requiredData.length) {
        requiredData.map(path => {
          const requiredPathData = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(data, path);
          if (!requiredPathData) {
            throw new _utils_HTTPError__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z("Required data not found for ".concat(pathname), 200, pathname);
          }
          return true;
        });
      }
      // Happy path
      // We should do null checks in the pages/components
      return payload;
    }).then(payload => dispatchPayload({
      dispatch,
      payload,
      pathToData,
      pathname,
      userId,
      isLazyPage,
      variables: bffVariables,
      source
    })).catch(error => {
      !skipFailPage && dispatch(failPage(pathname.replace(/^ssr::/g, ''), error) // Remove ssr:: prefix
      );
    });
  };
};
const delayFetchPage = _ref6 => {
  let {
    pathname,
    name,
    type,
    delay = 0,
    query = 'bonanzaPage',
    pathToData = 'data.data.bonanzaPage',
    requiredData = [],
    app,
    variables
  } = _ref6;
  return dispatch => Promise.resolve(true).then(() => delay > 0 && new Promise(resolve => setTimeout(resolve, delay * 1000))).then(() => _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP.getId()).then(userId => dispatch(fetchPage({
    pathname,
    name,
    type,
    userId,
    query,
    pathToData,
    requiredData,
    app,
    variables,
    skipFailPage: true
  })));
};

/***/ }),

/***/ 1135:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   L: function() { return /* binding */ setPlayerPreferences; },
/* harmony export */   w: function() { return /* binding */ PLAYER_SET_PREFERENCES; }
/* harmony export */ });
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67788);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nbcu_park_logger__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_hasSessionStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(47475);
/* harmony import */ var _utils_isClientSide__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(15343);
/* harmony import */ var _utils_getPlayerControlSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(97221);




const PLAYER_SET_PREFERENCES = 'PLAYER_SET_PREFERENCES';
const hasStorage = (0,_utils_isClientSide__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)() && (0,_utils_hasSessionStorage__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)();
const setPlayerPreferences = data => async dispatch => {
  if (hasStorage) {
    try {
      const serialized = JSON.stringify(data);
      window.sessionStorage.setItem(_utils_getPlayerControlSettings__WEBPACK_IMPORTED_MODULE_1__/* .STORAGE_KEYS */ .I.configuration, serialized);
    } catch (err) {
      _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_0___default().warn(err);
    }
  }
  return dispatch({
    type: PLAYER_SET_PREFERENCES,
    data
  });
};

/***/ }),

/***/ 34780:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   S4: function() { return /* binding */ storeWatch; },
/* harmony export */   aY: function() { return /* binding */ BULK_SET_WATCHES; },
/* harmony export */   h3: function() { return /* binding */ bulkSetWatches; }
/* harmony export */ });
/* harmony import */ var _actionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40671);

const storeWatch = (v4ID, percentViewed) => ({
  type: _actionTypes__WEBPACK_IMPORTED_MODULE_0__/* .STORE_WATCH */ ._0,
  watch: {
    v4ID,
    percentViewed
  }
});
const BULK_SET_WATCHES = 'BULK_SET_WATCHES';
const bulkSetWatches = watches => ({
  type: BULK_SET_WATCHES,
  watches
});

/***/ }),

/***/ 95963:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: function() { return /* binding */ LAZY_ON_AIR_NOW_SHELF; },
/* harmony export */   AK: function() { return /* binding */ OLYMPICS_VIDEO; },
/* harmony export */   Ax: function() { return /* binding */ ON_AIR_NOW_SHELF; },
/* harmony export */   DT: function() { return /* binding */ STACK; },
/* harmony export */   G8: function() { return /* binding */ TEMP_PASS; },
/* harmony export */   J5: function() { return /* binding */ GATED_CHANNEL; },
/* harmony export */   KT: function() { return /* binding */ VIDEO_DETAILS_EXPIRED; },
/* harmony export */   M: function() { return /* binding */ STREAM; },
/* harmony export */   Pq: function() { return /* binding */ SHELF; },
/* harmony export */   Rq: function() { return /* binding */ LIVE_GUIDE_SELECTABLE_GROUP; },
/* harmony export */   cH: function() { return /* binding */ DEFAULT_SPORTS_GRADIENT; },
/* harmony export */   ek: function() { return /* binding */ NAVIGATION_MENU; },
/* harmony export */   m6: function() { return /* binding */ VIDEO_PLAYER; },
/* harmony export */   pX: function() { return /* binding */ VIDEO; },
/* harmony export */   q_: function() { return /* binding */ CORE_SDK_PLAYER; },
/* harmony export */   rv: function() { return /* binding */ LINKS_SELECTABLE_GROUP; },
/* harmony export */   zg: function() { return /* binding */ PLAYLIST; }
/* harmony export */ });
const CORE_SDK_PLAYER = 'CoreSDKPlayer';
const DEFAULT_SPORTS_GRADIENT = {
  START: '#656C80',
  END: '#14161A'
};
const LAZY_ON_AIR_NOW_SHELF = 'LazyOnAirNowShelf';
const LINKS_SELECTABLE_GROUP = 'LinksSelectableGroup';
const LIVE_GUIDE_SELECTABLE_GROUP = 'LiveGuideSelectableGroup';
const NAVIGATION_MENU = 'NavigationMenu';
const ON_AIR_NOW_SHELF = 'OnAirNowShelf';
const PLAYLIST = 'PLAYLIST';
const SHELF = 'Shelf';
const STACK = 'Stack';
const STREAM = 'STREAM';
const VIDEO = 'VIDEO';
const VIDEO_DETAILS_EXPIRED = 'VideoDetailsExpired';
const VIDEO_PLAYER = 'VideoPlayer';
const TEMP_PASS = 'TempPass';
const OLYMPICS_VIDEO = 'OLYMPICS_VIDEO';
const GATED_CHANNEL = 'GatedChannel';

/***/ }),

/***/ 63990:
/***/ (function(__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/smoothscroll-polyfill/dist/smoothscroll.js
var smoothscroll = __webpack_require__(30523);
var smoothscroll_default = /*#__PURE__*/__webpack_require__.n(smoothscroll);
// EXTERNAL MODULE: ./node_modules/intersection-observer/intersection-observer.js
var intersection_observer = __webpack_require__(66337);
// EXTERNAL MODULE: ./node_modules/focus-visible/dist/focus-visible.js
var focus_visible = __webpack_require__(35202);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73935);
// EXTERNAL MODULE: ./node_modules/react-router/es/index.js + 32 modules
var es = __webpack_require__(61409);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 14 modules
var react_redux_es = __webpack_require__(20688);
// EXTERNAL MODULE: ./node_modules/redux/es/redux.js
var redux = __webpack_require__(14890);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/lodash/isPlainObject.js
var isPlainObject = __webpack_require__(68630);
var isPlainObject_default = /*#__PURE__*/__webpack_require__.n(isPlainObject);
// EXTERNAL MODULE: ./node_modules/reduce-reducers/es/index.js
var reduce_reducers_es = __webpack_require__(8396);
;// CONCATENATED MODULE: ./lib/patterns/combineReducers.js
/**
 * Inspired by redux's combineReducers utility.
 *
 * This is less opinionated that it allows keys
 * that are not included in reducers[]
 *
 * @param {object} reducers redux reducer functions
 *
 * @returns {object} if any of the reducers change the state
 * returns a new state, otherwise returns the original state
 */
function combineReducers() {
  let reducers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const reducerKeys = Object.keys(reducers);
  return function combination() {
    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    let action = arguments.length > 1 ? arguments[1] : undefined;
    let hasChanged = false;
    var nextState = {};
    for (let i = 0; i < reducerKeys.length; i++) {
      const key = reducerKeys[i];
      const reducer = reducers[key];
      const previousStateForKey = state[key];
      const nextStateForKey = reducer(previousStateForKey, action);
      nextState[key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? {
      ...state,
      ...nextState
    } : state;
  };
}
// EXTERNAL MODULE: ./utils/normalizeAccountInfo.js
var normalizeAccountInfo = __webpack_require__(62324);
// EXTERNAL MODULE: ./actions/account.js
var account = __webpack_require__(36203);
;// CONCATENATED MODULE: ./reducers/account.js



const initialState = {
  id: null,
  email: null,
  vendorId: null,
  forename: null,
  surname: null,
  gender: null,
  dob: null,
  zipCode: null,
  phoneNumber: null,
  isPeacockUser: false,
  idmPassword: null,
  signInType: null,
  storedDataCollection: {
    pageType: 'default'
  },
  isChecked: false,
  credits: 0,
  trials: {}
};
/* harmony default export */ var reducers_account = (function () {
  var _state$trials, _state$trials2;
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case account.SET_ACCOUNT_INFO:
      return {
        ...state,
        ...(0,normalizeAccountInfo/* default */.Z)(action.user),
        isChecked: true
      };
    case account.SET_PEACOCK_INFO:
      return {
        ...state,
        isPeacockUser: get_default()(action.user, 'isPeacockUser'),
        isChecked: true
      };
    case account.CLEAR_ACCOUNT_INFO:
      return {
        ...initialState
      };
    case account.CLEAR_PEACOCK_INFO:
      return {
        ...state,
        idmPassword: null,
        storedDataCollection: null
      };
    case account.SET_DATA_COLLECTION:
      return {
        ...state,
        storedDataCollection: get_default()(action.user, 'storedDataCollection'),
        isChecked: true
      };
    case account.SET_ACCOUNT_CHECKED:
      return {
        ...state,
        isChecked: true
      };
    case account.SET_ACCOUNT_TRIAL:
      return {
        ...state,
        rev: action.rev,
        credits: action.credits,
        trials: {
          ...((_state$trials = state.trials) !== null && _state$trials !== void 0 ? _state$trials : {}),
          [action.episodeId]: {
            hasTrial: true
          }
        }
      };
    case account.SET_ACCOUNT_TRIAL_ERROR:
      return {
        ...state,
        trials: {
          ...((_state$trials2 = state.trials) !== null && _state$trials2 !== void 0 ? _state$trials2 : {}),
          [action.episodeId]: {
            hasTrial: false,
            error: action.error
          }
        }
      };
    default:
      return state;
  }
});
// EXTERNAL MODULE: ./lib/performance.js
var performance = __webpack_require__(97503);
// EXTERNAL MODULE: ./actions/adobePass.js
var adobePass = __webpack_require__(8959);
// EXTERNAL MODULE: ./utils/normalizeMvpd.js
var normalizeMvpd = __webpack_require__(43576);
;// CONCATENATED MODULE: ./reducers/adobePass.js
/* eslint-disable no-use-before-define */




function adobePass_adobePass() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    isTempPassAuthenticated: null,
    resource: {}
  };
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case adobePass/* ADOBEPASS_AUTHN_STATUS */.Rc:
      {
        var _action$isTempPassAut, _action$isTempPassAut2;
        performance/* default */.Z.mark('AdobePass.isAuthenticationChecked');
        return setUserFlags(state, {
          isAuthenticated: action.isAuthenticated,
          isTempPassAuthenticated: (_action$isTempPassAut = action.isTempPassAuthenticated) !== null && _action$isTempPassAut !== void 0 ? _action$isTempPassAut : null,
          isTempPassAuthenticationChecked: (_action$isTempPassAut2 = action.isTempPassAuthenticationChecked) !== null && _action$isTempPassAut2 !== void 0 ? _action$isTempPassAut2 : false,
          isAuthenticationChecked: true,
          tempPassExpiration: action.tempPassExpiration || null,
          tempPassName: action.tempPassName || null,
          authnError: null,
          mvpd: action.mvpd ? (0,normalizeMvpd/* default */.Z)(action.mvpd, action.errorMappings) : null
        });
      }
    case adobePass/* ADOBEPASS_AUTHN_FAILURE */.y4:
      return setUserFlags(state, {
        isAuthenticationChecked: true,
        isTempPassAuthenticationChecked: true,
        isTempPassAuthenticated: null,
        isAuthenticated: false,
        tempPassExpiration: null,
        authnError: action.authnError,
        mvpd: null,
        brands: []
      });
    case adobePass/* ADOBEPASS_AUTHN_LOGOUT */.ot:
      return {
        isAuthenticationChecked: false,
        isTempPassAuthenticationChecked: false,
        isTempPassAuthenticated: null,
        tempPassExpiration: null,
        isAuthenticated: false,
        isBrandsChecked: false,
        mvpd: null,
        mvpds: state.mvpds,
        // Reset any resource flags
        resource: {},
        brands: []
      };
    case adobePass/* ADOBEPASS_AUTHZ_SUCCESS */.lM:
      return setResourceFlags(state, action.pathname, {
        isAuthorizationChecked: true,
        isAuthorized: true,
        authToken: action.authToken,
        authzError: null
      });
    case adobePass/* ADOBEPASS_AUTHZ_FAILURE */.lg:
      return setResourceFlags(state, action.pathname, {
        isAuthorizationChecked: true,
        isAuthorized: false,
        authToken: null,
        tempPassExpiration: null,
        authzError: action.authzError
      });
    case adobePass/* ADOBEPASS_AUTHZ_CLEAR */.tu:
      return clearResourceFlags(state, action.pathname);
    case adobePass/* ADOBEPASS_IFRAME_CREATE */.Ai:
      return setUserFlags(state, {
        isIFrameLogin: true
      });
    case adobePass/* ADOBEPASS_IFRAME_DESTROY */.BH:
      return setUserFlags(state, {
        isIFrameLogin: false
      });
    case adobePass/* ADOBEPASS_SET_CONFIG */.PJ:
      return setUserFlags(state, {
        mvpds: action.mvpds
      });
    case adobePass/* ADOBEPASS_SET_BRANDS */.YD:
      return {
        ...state,
        isBrandsChecked: true,
        brands: action.brands
      };
    case adobePass/* ADOBEPASS_SET_METADATA */.d1:
      return setUserFlags(state, {
        ...action.metadata
      });
    default:
      return state;
  }
}
function setResourceFlags(state, pathname, flags) {
  return {
    ...state,
    resource: {
      ...state.resource,
      [pathname]: {
        ...state.resource[pathname],
        ...flags
      }
    }
  };
}
function clearResourceFlags(state, pathname) {
  const resource = {
    ...state.resource
  };
  delete resource[pathname];
  return {
    ...state,
    resource
  };
}
function setUserFlags(state, flags) {
  return {
    ...state,
    ...flags
  };
}
// EXTERNAL MODULE: ./actions/actionTypes.js
var actionTypes = __webpack_require__(40671);
;// CONCATENATED MODULE: ./reducers/branch.js


function normalizeBranch(data) {
  const tags = get_default()(data, 'journey_link_data.tags', []);
  return {
    feature: get_default()(data, 'journey_link_data.feature', 'None'),
    campaign: get_default()(data, 'journey_link_data.campaign', 'None'),
    channel: get_default()(data, 'journey_link_data.channel', 'None'),
    tags: tags.toString()
  };
}
function branch() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actionTypes/* STORE_BRANCH */.s4:
      return {
        ...state,
        branch: normalizeBranch(action.branch)
      };
    default:
      return state;
  }
}
// EXTERNAL MODULE: ./actions/client.js + 1 modules
var client = __webpack_require__(67217);
// EXTERNAL MODULE: ./package.json
var package_0 = __webpack_require__(4147);
;// CONCATENATED MODULE: ./reducers/client.js


function reduce() {
  var _state$geo2, _state$completedLoadS2;
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    userAgent: {},
    previousVideo: null,
    thisVideo: null,
    adBlock: false,
    activation: null,
    language: 'en',
    bffParams: {},
    bffMParticleId: null,
    mParticleApiKey: null,
    mParticleSessionId: null,
    oneTrustIntegrityKey: null,
    startTime: Math.floor(Date.now() / 1000),
    ip: null,
    version: package_0.version,
    isDayZero: true,
    lastUserInteractionsChange: 0,
    completedLoadSteps: {},
    geo: {
      country: 'US',
      geoZip: null,
      ip: null,
      nationalBroadcastType: null,
      nbc: {
        isSupportedRegionLive: false,
        geoChannel: null,
        geoChannelLive: null,
        homeChannel: null
      }
    }
  };
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case client/* CLIENT_USER_AGENT */.jL:
      return {
        ...state,
        userAgent: {
          ...action.userAgent
        }
      };
    case client/* CLIENT_SET_GEOLOCATION */.Vn:
      {
        var _state$completedLoadS, _action$geoChannelLiv, _state$geo, _state$geo$action$bra;
        // /sle geolocation endpoints will not return populated geo information.
        // As such, we need to check if we have already determined the client geolocation previously
        // (this is done by default on client hydration using /live geolocation endpoints that do
        // return full information). If we have already geolocated on the client, we should keep the existing
        // geolocation information rather than overwriting with null/undefined or the SSR fallback values.
        const isClientGeoKnown = (_state$completedLoadS = state.completedLoadSteps) === null || _state$completedLoadS === void 0 ? void 0 : _state$completedLoadS.geo;
        const fallbackGeoZip = isClientGeoKnown ? state.geo.geoZip : undefined;
        const fallbackTimezone = isClientGeoKnown ? state.geo.timeZone : 'America/New_York';
        return {
          ...state,
          geo: {
            ...state.geo,
            country: action.country,
            geoZip: action.geoZip || fallbackGeoZip,
            ip: action.ip,
            timeZone: action.timeZone || fallbackTimezone,
            [action.brand]: {
              isSupportedRegionLive: action.isSupportedRegionLive,
              isSupportedRegionVOD: action.isSupportedRegionVOD,
              channel: action.channel,
              geoChannel: action.geoChannel,
              geoChannelLive: (_action$geoChannelLiv = action.geoChannelLive) !== null && _action$geoChannelLiv !== void 0 ? _action$geoChannelLiv : (_state$geo = state.geo) === null || _state$geo === void 0 ? void 0 : (_state$geo$action$bra = _state$geo[action.brand]) === null || _state$geo$action$bra === void 0 ? void 0 : _state$geo$action$bra.geoChannelLive,
              homeChannel: action.homeChannel,
              isAuthKilled: action.isAuthKilled,
              assetInfo: action.assetInfo,
              isRestricted: action.isRestricted,
              restriction: action.restriction
            }
          }
        };
      }
    case client/* CLIENT_SET_NEXT_VIDEO */.fc:
      return {
        ...state,
        previousVideo: state.thisVideo,
        thisVideo: action.payload
      };
    case client/* CLIENT_CLEAR_NEXT_VIDEO */.sE:
      return {
        ...state,
        previousVideo: state.thisVideo,
        thisVideo: null
      };
    case client/* CLIENT_SET_ADBLOCK */.S:
      return {
        ...state,
        adBlock: action.status
      };
    case client/* CLIENT_SET_ACTIVATION */.Wi:
      return {
        ...state,
        activation: action.data
      };
    case client/* CLIENT_SET_LANGUAGE */.bK:
      return {
        ...state,
        language: action.language
      };
    case client/* CLIENT_SET_BFF_PARAMS */.N4:
      return {
        ...state,
        bffParams: {
          ...state.bffParams,
          ...action.params
        }
      };
    case client/* CLIENT_SET_BFF_MPARTICLE_ID */.r3:
      return {
        ...state,
        bffMParticleId: action.mParticleId
      };
    case client/* CLIENT_SET_BFF_MPARTICLE_API_KEY */.cA:
      return {
        ...state,
        mParticleApiKey: action.mParticleApiKey
      };
    case client/* CLIENT_SET_MPARTICLE_SESSION_ID */.vC:
      return {
        ...state,
        mParticleSessionId: action.mParticleSessionId
      };
    case client/* CLIENT_SET_IP */.KX:
      return {
        ...state,
        ip: action.ip
      };
    case client/* CLIENT_SET_VALUE */.Kd:
      return {
        ...state,
        [action.key]: action.value
      };
    case client/* CLIENT_SET_IS_DAYZERO */.ac:
      return {
        ...state,
        isDayZero: action.isDayZero
      };
    case client/* CLIENT_SET_ONETRUST_INTEGRITY_KEY */.CA:
      return {
        ...state,
        oneTrustIntegrityKey: action.integrityKey
      };
    case client/* CLIENT_SET_START_TIME */.nO:
      return {
        ...state,
        startTime: action.startTime
      };
    case client/* CLIENT_SET_NATIONAL_BROADCAST_TYPE */.vf:
      return {
        ...state,
        geo: {
          ...((_state$geo2 = state.geo) !== null && _state$geo2 !== void 0 ? _state$geo2 : {}),
          nationalBroadcastType: action.nationalBroadcastType
        }
      };
    case client/* CLIENT_COMPLETE_LOAD_STEP */.ZI:
      return {
        ...state,
        completedLoadSteps: {
          ...((_state$completedLoadS2 = state.completedLoadSteps) !== null && _state$completedLoadS2 !== void 0 ? _state$completedLoadS2 : {}),
          [action.loadStep]: true
        }
      };
    case client/* CLIENT_UNSET_LOAD_STEP */.tG:
      {
        var _state$completedLoadS3;
        const completedLoadSteps = {
          ...((_state$completedLoadS3 = state.completedLoadSteps) !== null && _state$completedLoadS3 !== void 0 ? _state$completedLoadS3 : {})
        };
        delete completedLoadSteps[action.loadStep];
        return {
          ...state,
          completedLoadSteps
        };
      }
    case client/* CLIENT_SET_LAST_USER_INTERACTIONS_CHANGE */.Zr:
      return {
        ...state,
        lastUserInteractionsChange: action.time
      };
    default:
      return state;
  }
}
;// CONCATENATED MODULE: ./reducers/debug.js
/**
 * The purpose of this reducer is to store flags for debug use only.
 *
 * Actions are generally fired from our Chrome Extension and not within this
 * codebase. We did not create an actions/debug.js file so as to avoid the
 * promotion of using this reducer.
 */

function debug() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case 'DEBUG_SET_FLAG':
      return {
        ...state,
        [action.name]: action.value
      };
    default:
      return state;
  }
}
// EXTERNAL MODULE: ./actions/deprecated.js
var deprecated = __webpack_require__(30909);
;// CONCATENATED MODULE: ./reducers/deprecated.js


/**
 * @todo
 * In an effort to move legacy code from createContainer to connectContainer,
 * we created this reducer as a helper to store Park API payloads for certain
 * page components. Eventually, we should update those components to make full
 * use of the pre-existing reducers (entities, lists etc).
 */

/* harmony default export */ var reducers_deprecated = (function () {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case deprecated/* STORE_DEPRECATED_PAGE */.O:
      return {
        ...state,
        [action.pathname]: action.data
      };
    default:
      return state;
  }
});
// EXTERNAL MODULE: ./reducers/entities.js + 1 modules
var entities = __webpack_require__(30567);
// EXTERNAL MODULE: ./actions/pages.js
var pages = __webpack_require__(18045);
;// CONCATENATED MODULE: ./reducers/error.js
/* eslint-disable no-use-before-define */

function error() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case pages/* FAIL_PAGE */.Jc:
      return {
        ...state,
        [action.pathname]: serializeable(action.error)
      };
    default:
      return state;
  }
}
function serializeable(value) {
  return value instanceof Error ? {
    message: value.message,
    stack: value.stack,
    status: value.status,
    url: value.url
  } : value;
}
;// CONCATENATED MODULE: ./reducers/facebookUser.js

function facebookuser(state, action) {
  switch (action.type) {
    case actionTypes/* SET_FACEBOOK_USER */.nc:
      if (action.user.logged === false) {
        return {};
      }
      return {
        ...state,
        ...action.user
      };
    default:
      return state;
  }
}
// EXTERNAL MODULE: ./actions/favorites.js
var actions_favorites = __webpack_require__(68110);
;// CONCATENATED MODULE: ./reducers/favorites.js

function favorites() {
  var _action$favorites;
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actions_favorites/* BULK_SET_FAVORITES */.KX:
      return {
        ...((_action$favorites = action.favorites) !== null && _action$favorites !== void 0 ? _action$favorites : {})
      };
    case actions_favorites/* SET_USER_FAVORITE */.Ft:
      return {
        ...state,
        [action.titleId]: {
          ...action.favorite
        }
      };
    case actions_favorites/* REMOVE_USER_FAVORITE */.zR:
      {
        const currentFavorites = {
          ...state
        };
        delete currentFavorites[action.titleId];
        return {
          ...currentFavorites
        };
      }
    default:
      return state;
  }
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.flags.js
var es_regexp_flags = __webpack_require__(25847);
// EXTERNAL MODULE: ./actions/launchDarkly.js + 1 modules
var launchDarkly = __webpack_require__(62452);
;// CONCATENATED MODULE: ./reducers/launchDarkly.js


/* harmony default export */ var reducers_launchDarkly = (function () {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    server: {},
    client: {},
    isClientSideReady: false
  };
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case launchDarkly/* SET_LAUNCH_DARKLY_SERVER_FLAGS */.f3:
      {
        return {
          ...state,
          server: {
            ...action.flags
          }
        };
      }
    case launchDarkly/* SET_LAUNCH_DARKLY_CLIENT_FLAGS */.Xh:
      {
        return {
          ...state,
          isClientSideReady: true,
          client: {
            ...action.flags
          }
        };
      }
    default:
      return state;
  }
});
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./node_modules/lodash/uniq.js
var uniq = __webpack_require__(44908);
var uniq_default = /*#__PURE__*/__webpack_require__.n(uniq);
;// CONCATENATED MODULE: ./reducers/v4/lists.js
/**
 * Reducer for the Lists Slice of the Store.
 *   '123-episodes': {items: [1, 2, 3, 4], total: 10, page: 1},
 *   '123-episodes-Season 2': {items: [3, 4], total: 2, page: 1},
 *   '123-clips': {items: [5, 6, 7], total: 100, page: 1},
 *   '123-clips-Highlight}': {items: [5, 6], total: 2, page: 1},
 */

/* eslint-disable no-use-before-define */


function entityList() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actionTypes/* STORE_VIDEO_LIST */.t7:
    case actionTypes/* STORE_GUESTS_CALENDAR */.i9:
      return insertList(state, action);
    case actionTypes/* STORE_GUEST_LIST */.bh:
      return insertSectionList(state, action);
    case actionTypes/* CLEAR_GUEST_LIST */.f:
      return clearSectionList(state, action);
    case actionTypes/* APPEND_VIDEO_LIST */.$r:
      return appendList(state, action);
    case actionTypes/* FAIL_VIDEO_LIST */.Dw:
    case actionTypes/* FAIL_GUEST_LIST */.yO:
    case actionTypes/* FAIL_GUESTS_CALENDAR */.gs:
      return failList(state, action);
    default:
      return state;
  }
}
function insertList(state, _ref) {
  let {
    listKey,
    payload,
    page = 1
  } = _ref;
  const items = state[listKey] ? state[listKey].items : [];
  const newItems = payload.data.data.map(entity => entity.id);
  return {
    ...state,
    [listKey]: {
      items: listKey.match(/-clips$/) ? uniq_default()(newItems.concat(items)) : uniq_default()(newItems.reverse().concat(items)),
      total: payload.data.meta.count,
      listKey,
      page
    }
  };
}
function insertSectionList(state, _ref2) {
  let {
    section,
    listKey,
    payload,
    page = 1,
    order = 1
  } = _ref2;
  const items = state[listKey] && state[listKey][section] ? state[listKey][section].items : [];
  const newItems = payload.data.data.map(entity => entity.id);
  return {
    ...state,
    [listKey]: {
      ...state[listKey],
      [section]: {
        items: uniq_default()(order === 1 ? items.concat(newItems) : newItems.reverse().concat(items)),
        total: payload.data.meta.count,
        listKey,
        section,
        page,
        order
      }
    }
  };
}
function clearSectionList(state, _ref3) {
  let {
    section,
    listKey
  } = _ref3;
  delete state[listKey][section];
  return {
    ...state
  };
}
function appendList(state, _ref4) {
  let {
    listKey,
    payload,
    page = 1
  } = _ref4;
  // Append must come after existing data
  if (!state[listKey] || page < state[listKey].page || payload.data.data.length < 1) {
    return state;
  }
  return {
    ...state,
    [listKey]: {
      items: uniq_default()(state[listKey].items.concat(payload.data.data.map(entity => entity.id))),
      total: payload.data.meta.count,
      listKey,
      page
    }
  };
}
function failList(state, _ref5) {
  let {
    listKey
  } = _ref5;
  // Do not override data
  if (state[listKey]) {
    return state;
  }
  return {
    ...state,
    [listKey]: {
      items: [],
      total: 0,
      page: 1,
      listKey
    }
  };
}
;// CONCATENATED MODULE: ./reducers/lists.js

/**
 * Reducer for the Lists Slice of the Store.
 *   '123-episodes': {items: [1, 2, 3, 4], total: 10, page: 1},
 *   '123-episodes-Season 2': {items: [3, 4], total: 2, page: 1},
 *   '123-clips': {items: [5, 6, 7], total: 100, page: 1},
 *   '123-clips-Highlight': {items: [5, 6], total: 2, page: 1},
 *   '123-recommendations': {items: [5, 6], total: 2, page: 1},
 *   'homeCollections': {items: [1, 2], total: 2},
 */

/* eslint-disable no-use-before-define */




function lists_entityList() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  if (action.useV4 || get_default()(action, 'payload.config.v4')) {
    return entityList(state, action);
  }
  switch (action.type) {
    case actionTypes/* FAIL_VIDEO_LIST */.Dw:
      return failVideoList(state, action);
    case actionTypes/* STORE_STATIC_LIST */.$U:
      return insertStaticList(state, action);
    case actionTypes/* STORE_ITEM_IN_STATIC_LIST */.Z5:
      return insertItemInStaticList(state, action);
    case actionTypes/* REMOVE_ITEM_IN_STATIC_LIST */.$z:
      return removeItemInStaticList(state, action);
    case account.SET_ACCOUNT_INFO:
    case account.CLEAR_ACCOUNT_INFO:
      return removeStaticList(state, 'favorites');
    case actionTypes/* CLEAR_LIST */.Bq:
      return removeStaticList(state, action.listKey);
    default:
      return state;
  }
}
function failVideoList(state, _ref) {
  let {
    listKey
  } = _ref;
  // Do not override data
  if (state[listKey]) {
    return state;
  }
  return {
    ...state,
    [listKey]: {
      items: [],
      total: 0,
      page: 1,
      listKey
    }
  };
}
function insertItemInStaticList(state, _ref2) {
  let {
    listKey,
    item
  } = _ref2;
  let items = [];
  if (!state[listKey]) {
    items = [item];
  } else if (state[listKey] && !state[listKey].items.includes(item)) {
    items = state[listKey].items.concat(item);
  } else {
    return state;
  }
  return {
    ...state,
    [listKey]: {
      listKey,
      items,
      total: items.length
    }
  };
}
function removeItemInStaticList(state, _ref3) {
  let {
    listKey,
    item
  } = _ref3;
  const items = [...state[listKey].items];
  const index = items.indexOf(item);
  items.splice(index, 1);
  return {
    ...state,
    [listKey]: {
      listKey,
      items,
      total: items.length
    }
  };
}

// Useful for arbitrary lists. Will not work with helpers like getListItems().
function insertStaticList(state, _ref4) {
  let {
    listKey,
    items
  } = _ref4;
  return {
    ...state,
    [listKey]: {
      listKey,
      items,
      total: items.length
    }
  };
}
function removeStaticList(state, listKey) {
  if (state[listKey]) {
    const newState = {
      ...state
    };
    delete newState[listKey];
    return newState;
  }
  return state;
}
// EXTERNAL MODULE: ./actions/liveGuide.js
var liveGuide = __webpack_require__(7230);
;// CONCATENATED MODULE: ./reducers/liveGuide.js

const liveGuide_initialState = {};
/* harmony default export */ var reducers_liveGuide = (function () {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : liveGuide_initialState;
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case liveGuide/* STORE_LIVE_GUIDE_ITEM */.s_:
      {
        return {
          ...state,
          [action.name]: {
            component: action.component,
            request: action.request
          }
        };
      }
    case liveGuide/* REMOVE_LIVE_GUIDE_ITEM */.ZU:
      {
        const newState = {
          ...state
        };
        delete newState[action.name];
        return newState;
      }
    default:
      return state;
  }
});
// EXTERNAL MODULE: ./actions/navigation.js + 1 modules
var navigation = __webpack_require__(4997);
;// CONCATENATED MODULE: ./reducers/navigation.js


const navigation_initialState = {
  activeOverride: '',
  isNavOpen: false,
  isNewsBarOpen: false,
  isAccessibilityNavOpen: false,
  isAccountNavOpen: false,
  isSkipLinkActivated: false,
  activeGroup: '',
  searchQuery: '',
  showMenuHeight: 0,
  previousLocation: {
    pathname: '',
    query: {},
    state: {}
  },
  previousAlgoliaObject: null,
  previousVideo: {},
  series: {},
  showNavItemFocus: -1,
  global: {},
  favoriteModal: {
    status: false
  },
  isPreLoading: true
};
/* harmony default export */ var reducers_navigation = (function () {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : navigation_initialState;
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case navigation/* NAVIGATION_TOGGLE_NAV */.c$:
      {
        return {
          ...state,
          isNavOpen: !state.isNavOpen,
          activeGroup: ''
        };
      }
    case navigation/* NAVIGATION_SKIP_LINK */.hh:
      {
        return {
          ...state,
          isSkipLinkActivated: !state.isSkipLinkActivated,
          activeGroup: ''
        };
      }
    case navigation/* NAVIGATION_TOGGLE_ACCOUNT_NAV */.gP:
      {
        return {
          ...state,
          isAccountNavOpen: !state.isAccountNavOpen,
          activeGroup: ''
        };
      }
    case navigation/* NAVIGATION_SET_ACTIVE_GROUP */.Hu:
      {
        return {
          ...state,
          activeGroup: action.activeGroup,
          isAccountNavOpen: action.activeGroup === '' ? state.isAccountNavOpen : false
        };
      }
    case navigation/* NAVIGATION_SET_NEWS_BAR_STATUS */.Ug:
      {
        return {
          ...state,
          isNewsBarOpen: action.isNewsBarOpen
        };
      }
    case navigation/* NAVIGATION_SET_SEARCH_QUERY */.AB:
      {
        return {
          ...state,
          searchQuery: action.query
        };
      }
    case navigation/* NAVIGATION_SET_PREVIOUS_LOCATION */.Dk:
      {
        return {
          ...state,
          previousLocation: action.location
        };
      }
    case navigation/* NAVIGATION_SET_PREVIOUS_ALGOLIA_OBJECT */.wY:
      {
        return {
          ...state,
          previousAlgoliaObject: {
            queryID: action.queryID,
            objectID: action.objectID,
            pathname: action.pathname
          }
        };
      }
    case navigation/* NAVIGATION_CLEAR_PREVIOUS_ALGOLIA_OBJECT */.SF:
    case account.SET_ACCOUNT_INFO:
    case account.CLEAR_ACCOUNT_INFO:
      return {
        ...state,
        previousAlgoliaObject: null
      };
    case navigation/* NAVIGATION_SET_PREVIOUS_VIDEO */.UC:
      return {
        ...state,
        previousVideo: {
          mpxGuid: action.mpxGuid,
          programmingType: action.programmingType
        }
      };
    case navigation/* NAVIGATION_SHOW_FOCUS */.jq:
      return {
        ...state,
        showNavItemFocus: action.navItemIndex
      };
    case navigation/* NAVIGATION_SET_LIVE_CALLOUT_STATUS */.dn:
      return {
        ...state,
        liveCallouts: {
          isNotificationVisible: action.isNotificationVisible,
          ...action.data
        }
      };
    case navigation/* NAVIGATION_SET_GLOBAL_NAVIGATION */.Wg:
      return {
        ...state,
        global: action.data
      };
    case navigation/* NAVIGATION_TOGGLE_FAVORITE_MODAL */.E3:
      return {
        ...state,
        favoriteModal: {
          // eslint-disable-next-line no-prototype-builtins
          status: action.hasOwnProperty('open') ? action.open : !state.favoriteModal.status,
          metadata: action.metadata || state.favoriteModal.metadata
        }
      };
    case navigation/* NAVIGATION_SET_ONBOARDING_MODAL_STATUS */.LZ:
      return {
        ...state,
        isOnboardingModalVisible: action.isOnboardingModalVisible
      };
    case navigation/* NAVIGATION_PRELOAD_STATUS */.x5:
      return {
        ...state,
        isPreLoading: action.isPreLoading
      };
    case navigation/* NAVIGATION_STORE_NAVIGATION_MENU */.MP:
      return {
        ...state,
        series: {
          ...state.series,
          [action.series]: action.data
        }
      };
    case navigation/* NAVIGATION_SET_ACTIVE_OVERRIDE */.UM:
      return {
        ...state,
        activeOverride: action.machineName
      };
    case navigation/* NAVIGATION_CLEAR_ACTIVE_OVERRIDE */.Xx:
      return {
        ...state,
        activeOverride: ''
      };
    default:
      return state;
  }
});
;// CONCATENATED MODULE: ./reducers/pages.js




// Removes any false values (e.g. null) or empty objects from an array.
const filterNullAndEmpty = array => array.filter(s => s && Object.keys(s).length !== 0);
const normalizeSections = sections => {
  const array = filterNullAndEmpty(sections);
  array.forEach(s => {
    if (s.data && s.data.items && Array.isArray(s.data.items)) {
      s.data.items = filterNullAndEmpty(s.data.items);
    }
  });
  return array;
};

// Helper to normalize a BFF payload by filtering out bogus array items.
const normalizePage = page => {
  if (page.data && page.data.sections && Array.isArray(page.data.sections)) {
    page.data.sections = normalizeSections(page.data.sections);
  }
  return page;
};
/* harmony default export */ var reducers_pages = (function () {
  var _state$action$sourceP;
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case pages/* STORE_PAGE */.Pe:
      {
        return {
          ...state,
          [action.pathname]: normalizePage(action.payload)
        };
      }
    case pages/* STORE_LAZY_PAGE */.Qh:
      {
        var _state$action$pathnam;
        const existingPage = (_state$action$pathnam = state[action.pathname]) !== null && _state$action$pathnam !== void 0 ? _state$action$pathnam : {};
        const storableVariables = {
          ...action.variables
        };
        return {
          ...state,
          [action.pathname]: {
            ...existingPage,
            base: normalizePage(action.payload),
            request: {
              base: {
                variables: storableVariables,
                source: action.source
              }
            }
          }
        };
      }
    case pages/* COPY_PAGE */.B7:
      return {
        ...state,
        [action.destinationPath]: {
          ...((_state$action$sourceP = state[action.sourcePath]) !== null && _state$action$sourceP !== void 0 ? _state$action$sourceP : {})
        }
      };
    case pages/* FAIL_PAGE */.Jc:
    case pages/* CLEAR_PAGE */.ki:
      // Clear any existing page data.
      if (state[action.pathname]) {
        const newState = {
          ...state
        };
        delete newState[action.pathname];
        return newState;
      }
      return state;
    case account.SET_ACCOUNT_INFO:
      return get_default()(action, 'shouldClearCache', true) ? {} : state;
    case account.CLEAR_ACCOUNT_INFO:
      return {};
    case pages/* UPDATE_FAVORITES_SHELF */.RL:
      {
        const newHomepageState = {
          ...state['/']
        };
        const homepageSections = get_default()(newHomepageState, ['data', 'sections'], []);
        let favoriteShelfIndex = null;
        const newSections = homepageSections.map((section, i) => {
          if (section.logicName === 'favoritesShelf') {
            favoriteShelfIndex = i;
            if (action.payload) return action.payload;
          }
          return section;
        });
        if (favoriteShelfIndex === null && action.payload) {
          newSections.splice(5, 0, action.payload);
        }
        if (!action.payload && favoriteShelfIndex) {
          newSections.splice(favoriteShelfIndex, 1);
        }
        newHomepageState.data.sections = newSections;
        return {
          ...state,
          '/': newHomepageState
        };
      }
    case pages/* STORE_SUBPAGE_RESPONSE */.ZF:
      {
        var _state$pagePath, _existingPage$request, _action$request;
        const pagePath = action.pathname;
        const existingPage = (_state$pagePath = state === null || state === void 0 ? void 0 : state[pagePath]) !== null && _state$pagePath !== void 0 ? _state$pagePath : {};
        const currentPage = {
          ...existingPage,
          [action.responseType]: action.payload,
          request: {
            ...((_existingPage$request = existingPage.request) !== null && _existingPage$request !== void 0 ? _existingPage$request : {}),
            [action.responseType]: {
              ...((_action$request = action.request) !== null && _action$request !== void 0 ? _action$request : {}),
              source: action.source
            }
          }
        };
        return {
          ...state,
          [pagePath]: currentPage
        };
      }
    case pages/* CLEAR_SUBPAGE_RESPONSE */.gf:
      {
        const pagePath = action.pathname;
        const existingPage = state === null || state === void 0 ? void 0 : state[pagePath];
        if (!existingPage) {
          // page doesn't exist (yet) so do nothing
          return state;
        }
        const currentPage = {
          ...existingPage
        };
        delete currentPage[action.subpageType];
        if (currentPage.request) {
          delete currentPage.request[action.subpageType];
        }
        return {
          ...state,
          [pagePath]: currentPage
        };
      }
    default:
      return state;
  }
});
// EXTERNAL MODULE: ./actions/playerPreferences.js
var actions_playerPreferences = __webpack_require__(1135);
// EXTERNAL MODULE: ./utils/getPlayerControlSettings.js
var getPlayerControlSettings = __webpack_require__(97221);
;// CONCATENATED MODULE: ./reducers/playerPreferences.js
/**
 * The porpuse of these reducer is to store any preference from the website
 */



// prevent this initial state from being mutated
const playerPreferences_initialState = Object.freeze({
  ...getPlayerControlSettings/* DEFAULT_PREFERENCES */.aR,
  isClientSideChecked: false
});
function playerPreferences() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : playerPreferences_initialState;
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actions_playerPreferences/* PLAYER_SET_PREFERENCES */.w:
      return {
        ...state,
        ...action.data
      };
    default:
      return state;
  }
}
// EXTERNAL MODULE: ./node_modules/lodash/cloneDeep.js
var cloneDeep = __webpack_require__(50361);
var cloneDeep_default = /*#__PURE__*/__webpack_require__.n(cloneDeep);
// EXTERNAL MODULE: ./node_modules/lodash/set.js
var set = __webpack_require__(36968);
var set_default = /*#__PURE__*/__webpack_require__.n(set);
;// CONCATENATED MODULE: ./reducers/setter.js

/**
 * Legacy Setter Reducer
 *  - Act on anything
 */



function setter() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actionTypes/* SET_VALUES */.he:
      return {
        ...state,
        ...action.values
      };
    case actionTypes/* SET_VALUE */.WE:
      return set_default()(cloneDeep_default()(state), action.key, action.value);
    default:
      return state;
  }
}
;// CONCATENATED MODULE: ./reducers/sweepstakes.js

/* harmony default export */ var sweepstakes = ((state, action) => {
  switch (action.type) {
    case actionTypes/* SWEEPSTAKES */.gT:
      return {
        ...state,
        ...action.sweepstakes
      };
    default:
      return state;
  }
});
// EXTERNAL MODULE: ./node_modules/jsonapi-relate/index.js
var jsonapi_relate = __webpack_require__(2657);
// EXTERNAL MODULE: ./utils/getPathname.js
var getPathname = __webpack_require__(50734);
;// CONCATENATED MODULE: ./reducers/v4/xref.js
/**
 * Reducer for the Cross-Reference Slice of the Store.
 *   '/the-blacklist': 123,
 *   '/classics/lipstick-jungle': 456,
 *   '/fake-show': { error: { message: 'Does not exist', status: 404 } }
 */

/* eslint-disable no-use-before-define */


function xref() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actionTypes/* STORE_VIDEO */.b2:
      return xrefVideo(state, action);
    case actionTypes/* STORE_VIDEO_LIST */.t7:
    case actionTypes/* APPEND_VIDEO_LIST */.$r:
      return xrefVideos(state, action);
    case actionTypes/* STORE_GUEST_LIST */.bh:
      return xrefGuests(state, action);
    case actionTypes/* STORE_GUEST */.Xx:
      return xrefGuests(state, action);
    case actionTypes/* STORE_SERIES */.vK:
      return xrefSeries(state, action);
    default:
      return state;
  }
}
function xrefVideo(state, _ref) {
  let {
    video,
    show
  } = _ref;
  const pathname = (0,getPathname/* default */.Z)(video.attributes.permalink);
  return {
    ...state,
    [pathname]: video.id,
    // Sometimes videos use a different Show prefix than urlAlias
    [pathname.split('/video/')[0]]: show.id
  };
}
function xrefVideos(state, _ref2) {
  let {
    payload,
    show
  } = _ref2;
  return payload.data.data.reduce((newState, video) => xrefVideo(newState, {
    payload,
    video,
    show
  }), {
    ...state
  });
}
function xrefGuests(state, _ref3) {
  let {
    payload
  } = _ref3;
  if (!payload.data.data.length) {
    return xrefGuest({
      ...state
    }, payload.data.data);
  }
  return payload.data.data.reduce((newState, guest) => {
    newState[guest.id] = guest.id;
    return newState;
  }, {
    ...state
  });
}
function xrefGuest(newState, guest) {
  newState[guest.id] = guest.id;
  return newState;
}
function xrefSeries(state, _ref4) {
  let {
    series
  } = _ref4;
  return {
    ...state,
    ["/".concat(series.attributes.seriesName, "-series")]: series.id
  };
}
;// CONCATENATED MODULE: ./reducers/xref.js
/**
 * Reducer for the Cross-Reference Slice of the Store.
 *   '/the-blacklist': 123,
 *   '/classics/lipstick-jungle': 456,
 *   '/fake-show': { error: { message: 'Does not exist', status: 404 } }
 */

/* eslint-disable no-use-before-define */





function xref_xref() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  if (action.useV4 || get_default()(action, 'payload.config.v4')) {
    return xref(state, action);
  }
  switch (action.type) {
    case actionTypes/* STORE_SHOW */.Ah:
      return xrefShow(state, action);
    case actionTypes/* STORE_VIDEO */.b2:
      return xref_xrefVideo(state, action);
    default:
      return state;
  }
}
function xrefShow(state, _ref) {
  let {
    show
  } = _ref;
  return {
    ...state,
    ["/".concat(show.attributes.urlAlias)]: show.id
  };
}
function xref_xrefVideo(state, _ref2) {
  let {
    payload,
    video
  } = _ref2;
  const pathname = (0,getPathname/* default */.Z)(video.attributes.permalink);
  const show = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, video, 'show');
  return {
    ...state,
    [pathname]: video.id,
    ["/".concat(show.attributes.urlAlias)]: show.id,
    // Sometimes videos use a different Show prefix than urlAlias
    [pathname.split('/video/')[0]]: show.id
  };
}
// EXTERNAL MODULE: ./actions/watches.js
var actions_watches = __webpack_require__(34780);
;// CONCATENATED MODULE: ./reducers/watches.js
/**
 * The purpose of this reducer is to store the latest known percentViewed for
 * video assets. This allows us to accurately render progress bars on Tiles
 * without having to refetch data for BFF pages. However, do not rely on this
 * information for the actual resuming of playback.
 */



function watches() {
  var _action$watches;
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actionTypes/* STORE_WATCH */._0:
      return {
        ...state,
        [action.watch.v4ID]: action.watch.percentViewed
      };
    case actions_watches/* BULK_SET_WATCHES */.aY:
      return {
        ...state,
        ...((_action$watches = action.watches) !== null && _action$watches !== void 0 ? _action$watches : {})
      };
    default:
      return state;
  }
}
;// CONCATENATED MODULE: ./reducers/index.js
/* eslint-disable no-use-before-define */






















function reducers_reduce() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  return (0,reduce_reducers_es/* default */.Z)({}, setter, combineReducers({
    account: reducers_account,
    adobePass: adobePass_adobePass,
    branch: branch,
    debug: debug,
    deprecated: reducers_deprecated,
    lists: lists_entityList,
    launchDarkly: reducers_launchDarkly,
    liveGuide: reducers_liveGuide,
    entities: entities/* default */.ZP,
    error: error,
    facebookUser: facebookuser,
    favorites: favorites,
    navigation: reducers_navigation,
    pages: reducers_pages,
    playerPreferences: playerPreferences,
    sweepstakes: sweepstakes,
    xref: xref_xref,
    client: reduce,
    watches: watches
  }))(state, action);
}
// EXTERNAL MODULE: ./node_modules/redux-thunk/lib/index.js
var lib = __webpack_require__(59681);
// EXTERNAL MODULE: ./webpack-alias/park-logger.js
var park_logger = __webpack_require__(67788);
var park_logger_default = /*#__PURE__*/__webpack_require__.n(park_logger);
;// CONCATENATED MODULE: ./middleware/log.js
/**
 * Logs our sad events
 */

/* eslint-disable default-case */



const log = () => next => action => {
  switch (action.type) {
    case pages/* FAIL_PAGE */.Jc:
      park_logger_default().error(action.type, action.error instanceof Error ? action.error.stack : action.error);
      break;
    case actionTypes/* FAIL_VIDEO_LIST */.Dw:
      park_logger_default().warn(action.type, action.error instanceof Error ? action.error.stack : action.error);
      break;
    default:
      // logger.log(action.type);
      break;
  }
  try {
    return next(action);
  } catch (err) {
    return err;
  }
};
/* harmony default export */ var middleware_log = (log);
// EXTERNAL MODULE: ./node_modules/redux-catch/index.js
var redux_catch = __webpack_require__(64056);
var redux_catch_default = /*#__PURE__*/__webpack_require__.n(redux_catch);
;// CONCATENATED MODULE: ./middleware/error.js




/**
 * logs errors as state is updated and listeners are notified.
 * Relies on `react-router-redux` third party module
 *
 * @param {Error} error the error object that was caught
 * @param {function} getState get the store state
 * @param {object} lastAction the action that threw error
 * @param {dispatch} dispatch the dispatch function of the store
 *
 * @returns {void}
 */
function logErrors(error, getState, lastAction, dispatch) {
  park_logger_default().error('[Reducer Fail]', error.stack);
  const state = getState();
  const {
    navigation: {
      previousLocation: {
        pathname
      }
    }
  } = state;
  dispatch((0,pages/* failPage */.qX)(pathname, error));
}
const errorMiddleware = redux_catch_default()(logErrors);

;// CONCATENATED MODULE: ./middleware/index.js




function middleware() {
  return (0,redux/* applyMiddleware */.md)(lib/* default */.Z, errorMiddleware, middleware_log);
}
;// CONCATENATED MODULE: ./lib/patterns/createStore.js






/* harmony default export */ var createStore = (function () {
  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const composeEnhancers = typeof window === 'object' && "production" !== 'production' &&
  // Enable redux devtools https://github.com/zalmoxisus/redux-devtools-extension
  /* eslint-disable no-underscore-dangle */
  0 ? 0 : redux/* compose */.qC;
  /* eslint-enable no-underscore-dangle */

  const store = (0,redux/* createStore */.MT)(reducers_reduce, initialState, composeEnhancers(middleware()));

  // Simple Action Creators
  store.set = (key, value) => store.dispatch(isPlainObject_default()(key) ? {
    type: actionTypes/* SET_VALUES */.he,
    values: key
  } : {
    type: actionTypes/* SET_VALUE */.WE,
    key,
    value
  });
  store.get = key => get_default()(store.getState(), key, null);
  return store;
});
;// CONCATENATED MODULE: ./lib/patterns/browserRender.js





/* harmony default export */ var browserRender = (routes => {
  const store = createStore({
    ...window.PRELOAD
  });
  (0,es/* match */.EQ)({
    routes,
    history: es/* browserHistory */.mW
  }, (error, location, renderProps) => {
    // Kick off React.
    (0,react_dom.hydrate)( /*#__PURE__*/react.createElement(react_redux_es/* Provider */.zt, {
      store: store
    }, /*#__PURE__*/react.createElement(es/* Router */.F0, renderProps)), document.getElementById('app'));
  });

  // Hack to keep React happy on inital render
  store.set('server', null);

  // Provide hacky/convenient Store access to the page
  window.TheStore = store;
});
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(94184);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./node_modules/cookies-js/dist/cookies.js
var cookies = __webpack_require__(27360);
var cookies_default = /*#__PURE__*/__webpack_require__.n(cookies);
// EXTERNAL MODULE: ./node_modules/lodash/pick.js
var pick = __webpack_require__(78718);
var pick_default = /*#__PURE__*/__webpack_require__.n(pick);
// EXTERNAL MODULE: ./node_modules/lodash/throttle.js
var throttle = __webpack_require__(23493);
var throttle_default = /*#__PURE__*/__webpack_require__.n(throttle);
// EXTERNAL MODULE: ./node_modules/react-tooltip/dist/index.es.js
var index_es = __webpack_require__(4726);
// EXTERNAL MODULE: ./lib/nbc-api.js
var nbc_api = __webpack_require__(7590);
// EXTERNAL MODULE: ./lib/park-api.js
var park_api = __webpack_require__(66956);
// EXTERNAL MODULE: ./lib/dayjs.js
var dayjs = __webpack_require__(57979);
// EXTERNAL MODULE: ./lib/patterns/connectContainer.js
var connectContainer = __webpack_require__(20738);
// EXTERNAL MODULE: ./lib/AdobePassAccessEnabler.js
var AdobePassAccessEnabler = __webpack_require__(16381);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./lib/analytics/mParticle_constants.js
var mParticle_constants = __webpack_require__(26566);
// EXTERNAL MODULE: ./lib/analytics/adobeIdentity.js
var adobeIdentity = __webpack_require__(35877);
// EXTERNAL MODULE: ./node_modules/axios/lib/axios.js + 48 modules
var axios = __webpack_require__(238);
// EXTERNAL MODULE: ./node_modules/firebase/app/dist/esm/index.esm.js
var index_esm = __webpack_require__(83977);
// EXTERNAL MODULE: ./node_modules/firebase/messaging/dist/esm/index.esm.js + 4 modules
var esm_index_esm = __webpack_require__(47745);
;// CONCATENATED MODULE: ./service-workers/firebase-messaging.constants.js
/* harmony default export */ var firebase_messaging_constants = ({
  PUSH_RECEIVED: 'push-received',
  NOTIFICATION_CLICKED: 'notification-clicked',
  FCM_INITIALIZED: 'fcm-initialized',
  WEB_PUSH_ClICK: 'webPushClick',
  NOTIFICATION_CLICK_MESSAGE: 'NOTIFICATION_CLICK_MESSAGE',
  FIREBASE_MESSAGING_SW: 'firebase-messaging-sw'
});
;// CONCATENATED MODULE: ./lib/iterable.js
/**
 * This file creates a wrapper for the Iterable API.
 *
 * Iterable is used with Firebase for push notification messaging.
 *
 * @see https://support.iterable.com/hc/en-us/articles/115004760086-Web-Push-Overview-#configuring-firebase
 */








const {
  NOTIFICATION_CLICKED,
  NOTIFICATION_CLICK_MESSAGE
} = firebase_messaging_constants;
const BASE_URL = config/* default */.Z.get('iterable.baseUrl');
const API_KEY = config/* default */.Z.get('iterable.apiKey');
const Iterable = {};
const hasFireBaseCredentials = function () {
  let firebaseConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  let firebaseVapidKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  return firebaseConfig !== null && firebaseVapidKey !== null;
};
const handleIterableClickTracking = _ref => {
  let {
    campaignId,
    messageId,
    templateId
  } = _ref;
  return Iterable.trackWebPushClick({
    messageId,
    campaignId: parseInt(campaignId, 10),
    templateId: parseInt(templateId, 10),
    createdAt: Date.now()
  });
};
const handleOnMessageFromSW = async event => {
  try {
    const {
      data: {
        messageType,
        isFirebaseMessaging,
        data
      }
    } = event;
    if (messageType === NOTIFICATION_CLICKED && isFirebaseMessaging) {
      await handleIterableClickTracking(data);
      const {
        click_action
      } = data;
      if (click_action && window.location.href !== click_action) {
        window.location.href = click_action;
      }
    }
  } catch (err) {
    park_logger_default().warn(err);
  }
};
const initializeEventHandlers = () => {
  navigator.serviceWorker.addEventListener('message', event => handleOnMessageFromSW(event));
};
const mPWebOptIn = webPushOptIn => mParticle/* default */.ZP.trackEvent({
  type: 'UserPreference',
  name: 'webPushOptIn',
  attributes: {
    webPushOptIn
  }
});
const USER_PUSH_PERMISSION = 'User Push Permission';
const trackWebOptIn = (webPushOptIn, permission) => {
  const attrValue = webPushOptIn ? 'True' : 'False';
  if (permission === 'default') {
    mParticle/* default */.ZP.setUserAttributes({
      [USER_PUSH_PERMISSION]: attrValue
    });
    return mPWebOptIn(webPushOptIn);
  }
  return mParticle/* default */.ZP.getUserAttribute(USER_PUSH_PERMISSION).then(mpPushPermission => {
    if (mpPushPermission !== attrValue) {
      mParticle/* default */.ZP.setUserAttributes({
        [USER_PUSH_PERMISSION]: attrValue
      });
      mPWebOptIn(webPushOptIn);
    }
  });
};

// Retrieve the Firebase browser token and send it to Iterable.
// @see https://firebase.google.com/docs/cloud-messaging/js/client
const getFireBaseToken = async _ref2 => {
  let {
    messaging,
    vapidKey,
    email,
    notificationPermission: permission,
    userId
  } = _ref2;
  try {
    const browserToken = await (0,esm_index_esm/* getToken */.LP)(messaging, {
      vapidKey
    });
    if (browserToken) {
      trackWebOptIn(true, permission);
      await Iterable.registerBrowserToken({
        browserToken,
        email,
        userId
      });
    }
    return browserToken;
  } catch (err) {
    trackWebOptIn(false, permission);
    if (permission !== 'granted') {
      return {
        error: 'FIREBASE_PERMISSION_DENIED_BY_USER',
        message: 'FIREBASE: Notification permission was not granted and blocked by user'
      };
    }
    return {
      error: 'FIREBASE_GENERIC_ERROR',
      message: "FIREBASE: ".concat(err)
    };
  }
};
const initializeFirebaseApp = async userId => {
  try {
    const isSupportedBrowser = await (0,esm_index_esm/* isSupported */.Gb)();
    const firebaseConfig = config/* default */.Z.get('firebase.config');
    const firebaseVapidKey = config/* default */.Z.get('firebase.vapidKey');
    const isFireFox = navigator.userAgent.indexOf('Firefox') > -1;
    if (isSupportedBrowser && !isFireFox &&
    // not supporting firefox as of 6/21/22
    hasFireBaseCredentials(firebaseConfig, firebaseVapidKey)) {
      const app = (0,index_esm/* initializeApp */.ZF)(firebaseConfig);
      const messaging = (0,esm_index_esm/* getMessaging */.KL)(app);
      const email = Iterable.generatePlaceholderEmail(userId);
      const notificationPermission = window.Notification.permission;
      const fbTokenResponse = await getFireBaseToken({
        messaging,
        vapidKey: firebaseVapidKey,
        email,
        notificationPermission,
        userId
      });
      if (fbTokenResponse !== null && fbTokenResponse !== void 0 && fbTokenResponse.error) {
        throw fbTokenResponse;
      }
      messaging.swRegistration.active.postMessage({
        messageType: NOTIFICATION_CLICK_MESSAGE
      });
    }
  } catch (err) {
    park_logger_default().warn(err);
  }
};
Iterable.initialize = async userId => {
  try {
    if ('serviceWorker' in navigator) {
      initializeEventHandlers();
      await initializeFirebaseApp(userId);
    }
  } catch (err) {
    park_logger_default().warn(err);
  }
};

/**
 * Generates a unique placeholder email address from a user ID.
 *
 * @param {string} userId
 *   The user's ID.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 *
 * @see https://support.iterable.com/hc/en-us/articles/208499956
 */
Iterable.generatePlaceholderEmail = userId => // Creates a consistent, but anonymous placeholder email address per user.
"".concat(userId, "@placeholder.email");

/**
 * Registers a browser token for web push.
 *
 * @param {object} data
 *   The data to be sent to Iterable. Typically includes the browserToken and
 *   the user's email address.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 *
 * @see https://api.iterable.com/api/docs#users_registerBrowserToken
 */
Iterable.registerBrowserToken = async data => {
  const url = "".concat(BASE_URL, "/api/users/registerBrowserToken");
  return (0,axios/* default */.Z)({
    method: 'post',
    url,
    data,
    headers: {
      'api-key': API_KEY
    }
  }).catch(err => park_logger_default().warn(err));
};

/**
 * Tracks a Web Push click.
 *
 * @param {object} attributes
 *   The data to be sent to Iterable.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 *
 * @see https://api.iterable.com/api/docs#events_trackWebPushClick
 */
Iterable.trackWebPushClick = async attributes => mParticle/* default */.ZP.trackEvent({
  type: 'Navigation',
  name: 'webPushClick',
  attributes
});
/* harmony default export */ var iterable = (Iterable);
// EXTERNAL MODULE: ./lib/primetime.js
var primetime = __webpack_require__(89880);
// EXTERNAL MODULE: ./utils/getEntity.js
var getEntity = __webpack_require__(79434);
// EXTERNAL MODULE: ./utils/getPlatform.js
var getPlatform = __webpack_require__(14336);
;// CONCATENATED MODULE: ./utils/getAdBlockState.js
/**
 * Check for existence of Ad Block. It relies on the actual load of script «ads.js»,
 * which contains the variable canRunAds. If the var is present in the window object
 * we can safely assume ad blocker is not enabled.
 *
 * @return {boolean}
 *   True or false for presence of an ad blocker.
 */
/* harmony default export */ var getAdBlockState = (() => {
  if (!window) {
    return false;
  }
  return !window.canRunAds;
});
// EXTERNAL MODULE: ./utils/getAdobeTagging.js
var getAdobeTagging = __webpack_require__(17627);
// EXTERNAL MODULE: ./utils/getScalableSalesPath.js
var getScalableSalesPath = __webpack_require__(78278);
// EXTERNAL MODULE: ./utils/hasLocalStorage.js
var hasLocalStorage = __webpack_require__(395);
// EXTERNAL MODULE: ./utils/isOldIE.js
var isOldIE = __webpack_require__(45434);
;// CONCATENATED MODULE: ./utils/getAuthNExpiration.js



/**
 * Get authentication token expiration time from
 * AdobePassAccessEnabler.
 *
 * @example
 * getAuthNExpiration()
 * // '2019-03-22T18:21:31.000Z'
 *
 * @return {string} the formatted ISO date.
 */

/* harmony default export */ var getAuthNExpiration = (() => AdobePassAccessEnabler/* default */.Z.getMetadata('TTL_AUTHN').then(expiration => Promise.resolve(new Date(expiration).toISOString())).catch(err => {
  park_logger_default().error('getAuthNExpiration', err);
  return Promise.resolve('None');
}));
// EXTERNAL MODULE: ./utils/getAllowedBrands.js
var getAllowedBrands = __webpack_require__(95087);
// EXTERNAL MODULE: ./utils/getShowPath.js
var getShowPath = __webpack_require__(98090);
// EXTERNAL MODULE: ./utils/getTranslatedString.js + 2 modules
var getTranslatedString = __webpack_require__(33786);
// EXTERNAL MODULE: ./utils/getCssVariable.js
var getCssVariable = __webpack_require__(74051);
// EXTERNAL MODULE: ./utils/getErrorAttributes.js
var getErrorAttributes = __webpack_require__(93152);
// EXTERNAL MODULE: ./utils/onboardingFlow.js
var onboardingFlow = __webpack_require__(42037);
// EXTERNAL MODULE: ./utils/isClientSide.js
var isClientSide = __webpack_require__(15343);
// EXTERNAL MODULE: ./utils/getClickActionAttributes.js
var getClickActionAttributes = __webpack_require__(20393);
// EXTERNAL MODULE: ./utils/checkIsPersonalizationEnabled.js
var checkIsPersonalizationEnabled = __webpack_require__(64108);
;// CONCATENATED MODULE: ./utils/extractPageName.js
/**
 *
 * @param {string} displayName Display name used to described react components
 * @returns {string} Page name
 */
const extractPageName = function () {
  let displayName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  // This regex will a match a group that exists within
  // parenthesis but do not contain any parenthesis within the group
  const PAGE_NAME_REGEX = /\(([^()]+)\)/;
  const pageNameMatches = PAGE_NAME_REGEX.exec(displayName);
  return (pageNameMatches === null || pageNameMatches === void 0 ? void 0 : pageNameMatches.length) > 1 ? pageNameMatches[1] : displayName;
};
/* harmony default export */ var utils_extractPageName = (extractPageName);
// EXTERNAL MODULE: ./components/BasicLoadingPage/BasicLoadingPage.js
var BasicLoadingPage = __webpack_require__(85078);
// EXTERNAL MODULE: ./components/BasicFailurePage/BasicFailurePage.js
var BasicFailurePage = __webpack_require__(36298);
// EXTERNAL MODULE: ./node_modules/url-parse/index.js
var url_parse = __webpack_require__(84564);
var url_parse_default = /*#__PURE__*/__webpack_require__.n(url_parse);
;// CONCATENATED MODULE: ./components/Navigation/NavigationLink.js
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




class NavigationLink extends react.Component {
  // Returns the default, focused, or selected logo for a given item.
  getLogo(variant) {
    const {
      logos
    } = this.props;
    if (!logos[variant] ||
    // There's no need to implement a selected and focused logo that are
    // identical to the default logo.
    variant !== 'default' && logos[variant] === logos.default) {
      return null;
    }
    return logos[variant];
  }

  // Renders a default, focused, or selected logo for a given item.
  renderLogo(variant) {
    const {
      title
    } = this.props;
    const logo = this.getLogo(variant);
    if (!logo) {
      return /*#__PURE__*/react.createElement(react.Fragment, null);
    }
    return /*#__PURE__*/react.createElement("img", {
      src: logo,
      alt: title,
      className: classnames_default()('navigation__item__logo', "navigation__item__logo--".concat(variant)),
      "aria-hidden": "true"
    });
  }
  render() {
    const {
      additionalProps,
      ariaLabel,
      children,
      destination,
      hideTitle,
      isActiveOverride,
      isInternalPage,
      logos,
      onClick,
      onlyActiveOnIndex,
      title,
      to
    } = this.props;

    // The Link component isn't intended for use with absolute URLs.
    if (!isInternalPage) {
      return /*#__PURE__*/react.createElement("a", {
        "aria-label": ariaLabel,
        className: classnames_default()('navigation__item__link', {
          'navigation__item__link--has-logo': this.getLogo('default'),
          'navigation__item__link--has-focused-logo': this.getLogo('focused'),
          'navigation__item__link--has-selected-logo': this.getLogo('selected'),
          'navigation__item__link--active': isActiveOverride
        }),
        href: destination,
        onClick: e => onClick(e)
      }, /*#__PURE__*/react.createElement("span", {
        className: classnames_default()('navigation__item__title', {
          'element-invisible': this.getLogo('default') || hideTitle
        }),
        title: title
      }, title), logos.default && /*#__PURE__*/react.createElement("span", {
        className: "navigation__item__logos"
      }, this.renderLogo('default'), this.renderLogo('focused'), this.renderLogo('selected')));
    }
    return /*#__PURE__*/react.createElement(es/* Link */.rU, _extends({
      activeClassName: "navigation__item__link--active",
      "aria-label": ariaLabel,
      className: classnames_default()('navigation__item__link', {
        'navigation__item__link--has-logo': this.getLogo('default'),
        'navigation__item__link--has-focused-logo': this.getLogo('focused'),
        'navigation__item__link--has-selected-logo': this.getLogo('selected'),
        'navigation__item__link--active': isActiveOverride
      }),
      onClick: e => onClick(e),
      onlyActiveOnIndex: onlyActiveOnIndex,
      to: to
    }, additionalProps), /*#__PURE__*/react.createElement("span", {
      className: classnames_default()('navigation__item__title', {
        'element-invisible': this.getLogo('default') || hideTitle
      }),
      title: title
    }, title), logos.default && /*#__PURE__*/react.createElement("span", {
      className: "navigation__item__logos"
    }, this.renderLogo('default'), this.renderLogo('focused'), this.renderLogo('selected')), children);
  }
}
_defineProperty(NavigationLink, "propTypes", {
  additionalProps: prop_types_default().shape({}),
  ariaLabel: (prop_types_default()).string,
  children: (prop_types_default()).node,
  logos: prop_types_default().shape({
    default: (prop_types_default()).string,
    focused: (prop_types_default()).string,
    selected: (prop_types_default()).string
  }),
  isInternalPage: (prop_types_default()).bool,
  onClick: (prop_types_default()).func.isRequired,
  onlyActiveOnIndex: (prop_types_default()).bool,
  title: (prop_types_default()).string.isRequired,
  to: prop_types_default().shape({}),
  hideTitle: (prop_types_default()).bool
});
/* harmony default export */ var Navigation_NavigationLink = (NavigationLink);
// EXTERNAL MODULE: ./components/Spinner/Spinner.js
var Spinner = __webpack_require__(19868);
// EXTERNAL MODULE: ./components/TargetedLink/TargetedLink.js
var TargetedLink = __webpack_require__(483);
// EXTERNAL MODULE: ./applications/responsive/VideoPageV2/videoPage.constants.js
var videoPage_constants = __webpack_require__(95963);
;// CONCATENATED MODULE: ./components/IdentityHeader/IdentityHeader.js
function IdentityHeader_extends() { return IdentityHeader_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, IdentityHeader_extends.apply(null, arguments); }
function IdentityHeader_defineProperty(e, r, t) { return (r = IdentityHeader_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function IdentityHeader_toPropertyKey(t) { var i = IdentityHeader_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function IdentityHeader_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }













const WATCH_PATH = /^\/watch\//;
const PERMALINK_BASE = config/* default */.Z.get('permalinkBase');
const identityLinks = {
  account: config/* default */.Z.get('identity.accountLink'),
  emailPreferences: config/* default */.Z.get('identity.emailPreferencesLink')
};
class IdentityHeader extends react.Component {
  constructor(props) {
    var _this;
    super(props);
    _this = this;
    IdentityHeader_defineProperty(this, "toggleNbc", () => this.setState(prevState => ({
      isNbcActive: !prevState.isNbcActive
    })));
    IdentityHeader_defineProperty(this, "toggleProvider", () => this.setState(prevState => ({
      isProviderActive: !prevState.isProviderActive
    })));
    IdentityHeader_defineProperty(this, "onSignOut", event => {
      event.preventDefault();
      this.trackEvent(event);
      this.props.signout({
        mvpd: this.props.mvpd,
        signInType: this.props.signInType,
        manual: true
      }).then(() => {
        var _mvpd$mvpd_id, _mvpd$mvpd_id$toLower;
        const {
          mvpd,
          tempPassExpiration
        } = this.props.adobePass || {};
        // Track identity sign out confirmation
        adobeIdentity/* default */.Z.trackIdentitySignOut();
        if (mvpd !== null && mvpd !== void 0 && (_mvpd$mvpd_id = mvpd.mvpd_id) !== null && _mvpd$mvpd_id !== void 0 && (_mvpd$mvpd_id$toLower = _mvpd$mvpd_id.toLowerCase()) !== null && _mvpd$mvpd_id$toLower !== void 0 && _mvpd$mvpd_id$toLower.includes(videoPage_constants/* TEMP_PASS */.G8.toLowerCase()) && tempPassExpiration) {
          AdobePassAccessEnabler/* default */.Z.logout();
        }

        // We need to redirect users to the Sign In Page when on the Vendor Login due to the
        // Vendor Login needing to sign in users inside of componentDidMount
        if (this.props.pageComponent === 'Connect(VendorLoginPage)') {
          window.location.href = "".concat(PERMALINK_BASE, "/sign-in/");
        } else {
          window.location.reload();
        }
      });
    });
    IdentityHeader_defineProperty(this, "trackEvent", function (event) {
      let customShelfTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Profile Dropdown';
      _this.props.onTrackEvent && _this.props.onTrackEvent({
        'Item Clicked Name': get_default()(event, ['currentTarget', 'innerText'], 'Profile Dropdown'),
        'Custom Shelf Title': customShelfTitle
      });
    });
    IdentityHeader_defineProperty(this, "onUnlink", event => {
      this.trackEvent(event);
      this.props.mvpdLogout && this.props.mvpdLogout(event);
    });
    IdentityHeader_defineProperty(this, "onChangeProvider", event => {
      const {
        pathname: actualPath,
        search,
        query
      } = this.props.location;
      const isGenericWatchPath = WATCH_PATH.test(actualPath) && !!(query !== null && query !== void 0 && query.pid);
      const pathname = isGenericWatchPath ? "".concat(actualPath).concat(search) : actualPath;
      this.trackEvent(event, 'Global Nav');
      this.props.router.push({
        pathname: '/mvpd-picker/change',
        state: {
          redirectPath: pathname,
          referrer: pathname
        }
      });
      this.props.mvpdLogout && this.props.mvpdLogout(event);
    });
    IdentityHeader_defineProperty(this, "onClickCustomizeExperience", event => {
      this.trackEvent(event, 'Global Nav');
    });
    IdentityHeader_defineProperty(this, "getIdentityLink", (key, label) => /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, IdentityHeader_extends({
      className: "identity__account",
      href: identityLinks[key],
      target: "_self",
      onClick: this.trackEvent
    }, !this.props.isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), label));
    IdentityHeader_defineProperty(this, "renderCustomizeExperience", () => /*#__PURE__*/react.createElement("li", {
      className: "identity-header__item"
    }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, {
      className: "identity-header__customize",
      href: "/onboarding/categories",
      onClick: this.onClickCustomizeExperience,
      type: "button"
    }, "Customize Experience")));
    this.state = {
      isNbcActive: true,
      isProviderActive: true,
      isLocalStorageEnabled: (0,hasLocalStorage/* default */.Z)()
    };
  }
  render() {
    const {
      isProviderActive,
      isLocalStorageEnabled,
      isNbcActive
    } = this.state;
    const {
      adobePass,
      mvpdLogout,
      username
    } = this.props;
    return /*#__PURE__*/react.createElement("div", {
      className: "identity-header"
    }, /*#__PURE__*/react.createElement("ul", {
      className: "identity-header__list"
    }, /*#__PURE__*/react.createElement("li", {
      className: classnames_default()('identity-header__item', {
        'identity-header__item--active': isProviderActive
      })
    }, /*#__PURE__*/react.createElement("span", {
      className: "identity-header__title",
      onClick: this.toggleProvider
    }, "TV Provider"), adobePass.isAuthenticated ? /*#__PURE__*/react.createElement("ul", {
      className: "identity-header__options"
    }, get_default()(adobePass, ['mvpd', 'mvpd_url']) && /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, IdentityHeader_extends({
      className: "mvpd__url",
      href: adobePass.mvpd.mvpd_url,
      onClick: this.trackEvent
    }, !this.props.isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), "Visit Site")), mvpdLogout && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement("button", IdentityHeader_extends({
      className: "mvpd__signout",
      onClick: this.onUnlink,
      type: "button"
    }, !this.props.isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), "Unlink")), isLocalStorageEnabled && /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement("button", IdentityHeader_extends({
      onClick: this.onChangeProvider,
      type: "button"
    }, !this.props.isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), "Change Provider")))) : /*#__PURE__*/react.createElement("ul", {
      className: "identity-header__options"
    }, /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement(es/* Link */.rU, IdentityHeader_extends({
      to: "/mvpd-picker",
      onClick: this.trackEvent
    }, !this.props.isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), "Link Your Provider")))), /*#__PURE__*/react.createElement("li", {
      className: classnames_default()('identity-header__item', {
        'identity-header__item--active': isNbcActive
      })
    }, /*#__PURE__*/react.createElement("span", {
      className: "identity-header__title",
      onClick: this.toggleNbc
    }, "NBCUniversal Profile"), username ? /*#__PURE__*/react.createElement("ul", {
      className: "identity-header__options"
    }, /*#__PURE__*/react.createElement("li", null, this.getIdentityLink('account', 'Manage')), /*#__PURE__*/react.createElement("li", null, this.getIdentityLink('emailPreferences', 'Email Preferences')), this.renderCustomizeExperience(), /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement("button", IdentityHeader_extends({
      type: "button",
      className: "identity__signout button--link",
      onClick: this.onSignOut,
      href: "#"
    }, !this.props.isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), "Sign Out"))) : /*#__PURE__*/react.createElement("ul", {
      className: "identity-header__options"
    }, this.renderCustomizeExperience(), /*#__PURE__*/react.createElement("li", null, /*#__PURE__*/react.createElement(es/* Link */.rU, IdentityHeader_extends({
      className: "identity__signin",
      onClick: this.trackEvent,
      to: {
        pathname: '/sign-in',
        state: {
          authState: false
        }
      }
    }, !this.props.isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), "Sign In"))))));
  }
}
IdentityHeader.propTypes = {
  adobePass: prop_types_default().shape({
    isAuthenticated: (prop_types_default()).bool,
    mvpd: prop_types_default().shape({
      mvpd_url: (prop_types_default()).string // eslint-disable-line camelcase
    })
  }).isRequired,
  location: prop_types_default().shape({
    query: (prop_types_default()).object,
    pathname: (prop_types_default()).string
  }),
  mvpdLogout: (prop_types_default()).func,
  username: (prop_types_default()).string,
  mvpd: (prop_types_default()).string.isRequired,
  signInType: (prop_types_default()).string.isRequired,
  signout: (prop_types_default()).func.isRequired,
  router: prop_types_default().shape({
    push: (prop_types_default()).func.isRequired
  }),
  onTrackEvent: (prop_types_default()).func,
  pageComponent: (prop_types_default()).string
};
const mapStateToProps = state => ({
  mvpd: state.adobePass.isAuthenticated ? state.adobePass.mvpd && state.adobePass.mvpd.title ? state.adobePass.mvpd.title : 'Unknown' : 'Unauthenticated',
  signInType: state.account.vendorId ? 'Vendor' : 'Email',
  isNavOpenOrDesktop: (state.client.userAgent.isMobile || state.client.userAgent.isTablet) && state.navigation.isNavOpen || !(state.client.userAgent.isMobile || state.client.userAgent.isTablet)
});
/* harmony default export */ var IdentityHeader_IdentityHeader = ((0,react_redux_es/* connect */.$j)(mapStateToProps, {
  ...account
})((0,es/* withRouter */.EN)(IdentityHeader)));
// EXTERNAL MODULE: ./components/BrandLogo/BrandLogo.js
var BrandLogo = __webpack_require__(82020);
// EXTERNAL MODULE: ./utils/getContentClickAttributes.js
var getContentClickAttributes = __webpack_require__(75715);
;// CONCATENATED MODULE: ./components/Navigation/Navigation.js
function Navigation_extends() { return Navigation_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, Navigation_extends.apply(null, arguments); }
function Navigation_defineProperty(e, r, t) { return (r = Navigation_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function Navigation_toPropertyKey(t) { var i = Navigation_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function Navigation_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




















const FILTERABLE_PAGES = {
  shows: /^\/shows\/[a-z0-9-_]+\/?(\/[a-z0-9-_]+\/?)?/i,
  movies: /^\/movies\/[a-z0-9-_]+\/?/i
};
const IDENTITY_ENABLED = config/* default */.Z.get('identity.enabled');
const LIVE_ENABLED = config/* default */.Z.get('LivePage.enabled');
const app = config/* default */.Z.get('app');
class Navigation extends react.Component {
  constructor(props) {
    super(props);
    Navigation_defineProperty(this, "onDesktopBreakpointChange", event => {
      this.setState({
        isDesktop: event.matches
      });
    });
    Navigation_defineProperty(this, "onTvProviderClick", (event, itemClickedName) => {
      if (this.props.isTempPassMvpd) {
        AdobePassAccessEnabler/* default */.Z.logout();
      }
      this.onNavClick(event, itemClickedName);
    });
    Navigation_defineProperty(this, "onNavClick", (event, itemClickedName) => {
      const name = itemClickedName || get_default()(event, ['target', 'textContent'], 'Global Nav');
      this.trackEvent({
        'Item Clicked Name': name
      });
    });
    Navigation_defineProperty(this, "onPeacockClick", (event, itemClickedName) => {
      this.onNavClick(event, itemClickedName);
      if (!this.props.isPeacockPreviewEnabled) {
        event.stopPropagation();
        event.preventDefault();
        this.props.onPeacockClick();
      }
    });
    Navigation_defineProperty(this, "onProfileFocus", event => !this.props.navigation.isAccountNavOpen && this.props.onToggleAccountNav(event));
    Navigation_defineProperty(this, "onProfileBlur", event => !this.identityHeader.current.contains(event.relatedTarget) && this.props.navigation.isAccountNavOpen && this.props.onToggleAccountNav(event));
    Navigation_defineProperty(this, "onLogoClick", () => this.trackEvent({
      'Item Clicked Name': 'NBC Logo'
    }));
    Navigation_defineProperty(this, "toggleNav", () => {
      this.props.onToggleNav();
    });
    // Prevents :focus style from sticking when closing the Account group.
    Navigation_defineProperty(this, "onMouseUpProfile", () => this.profileIcon.current.blur());
    Navigation_defineProperty(this, "onSearchClick", (event, itemClickedName) => {
      const name = itemClickedName || get_default()(event, ['target', 'textContent'], 'SEARCH');
      this.trackEvent({
        'Item Clicked Name': name
      });
    });
    Navigation_defineProperty(this, "onLiveClick", (event, itemClickedName) => {
      const {
        pathname
      } = this.props.location;
      // Don't navigate when the user is already on the live page
      // This will prevent the React Router PID state from being lost for SLEs
      // and will prevent unnecessary NBC affiliate stream requests that the page
      // defaults to for linear streams before the LocalStorage brand values are read.
      const isNavigationBlocked = pathname === '/live';
      const name = itemClickedName || get_default()(event, ['target', 'textContent'], 'Global Nav');
      this.onNavClick(event, name);
      if (isNavigationBlocked) {
        event.preventDefault();
      }
    });
    Navigation_defineProperty(this, "trackSkipLink", event => this.trackEvent({
      'Item Clicked Name': get_default()(event, ['currentTarget', 'name'], 'Skip Link'),
      'Custom Shelf Title': 'Global Nav Skip Link'
    }));
    Navigation_defineProperty(this, "focusElement", el => {
      if (!el) return false;
      el.setAttribute('tabIndex', '-1');
      el.addEventListener('blur', () => {
        el.removeAttribute('tabIndex');
      });
      return el.focus({
        preventScroll: true
      });
    });
    Navigation_defineProperty(this, "onAccessibilityClick", e => {
      const {
        isLandingPage,
        isShowPage,
        isSimpleLayout,
        navigation,
        onSkipLink,
        onToggleNav
      } = this.props;
      e.preventDefault();
      this.trackSkipLink(e);
      const h1 = document.querySelector('h1');
      const leftArrow = document.querySelector('button.slideshow__arrow--left');
      const dlsCta = document.querySelector('.slideshow__cta');
      const showPageSeeMore = document.querySelector('.slideshow__expand-text');
      const isOnboardingPage = document.querySelector('.onboarding-page');
      if (navigation.isNavOpen) {
        onToggleNav();
      }
      let focusMe = h1;
      // Only for Home Page and Show Home Page
      if ((isLandingPage || isShowPage) && !isSimpleLayout) {
        if (leftArrow) {
          focusMe = leftArrow;
        } else if (showPageSeeMore) {
          focusMe = showPageSeeMore;
        } else if (dlsCta) {
          focusMe = dlsCta;
        } else {
          focusMe = h1;
        }
      }
      // Other pages that have an h1
      else if (h1 && !isSimpleLayout) {
        focusMe = h1;
      }
      // Special case only for episodes page
      else if (this.props.isEpisodesPage) {
        const dropdown = document.querySelector('.episodes-page__sections section .filter-select > button');
        if (dropdown) {
          focusMe = dropdown;
        } else {
          const tile = document.querySelector('.episodes-page__sections section a.tile');
          focusMe = tile;
        }
      } else if (isSimpleLayout && isShowPage) {
        const element = document.querySelector('.credit-details-page__back-link') || document.querySelector('.credit-landing-page section a.tile') || document.querySelector('h2');
        focusMe = element;
      } else if (isOnboardingPage) {
        const elementOnboarding = document.querySelector('.onboarding-page__sections section button') || document.querySelector('.onboarding-confirmation__button--back');
        focusMe = elementOnboarding;
      }
      // Rest of the pages
      else {
        onSkipLink();
        focusMe = typeof e.currentTarget.hash === 'string' ? document.querySelector(e.currentTarget.hash) : e.currentTarget.hash;
      }
      this.focusElement(focusMe);
    });
    Navigation_defineProperty(this, "trackEvent", attributes => {
      var _this$props$analytics, _this$props$analytics2;
      return mParticle/* default */.ZP.trackEvent({
        type: mParticle_constants.NAVIGATION,
        name: mParticle_constants.CLICK_ACTION,
        attributes: {
          ...(0,getClickActionAttributes/* default */.Z)({
            [mParticle_constants.CUSTOM_SHELF_TITLE]: 'Global Nav',
            [mParticle_constants.SHOW]: this.props.seriesShortTitle,
            [mParticle_constants.SEASON]: this.props.seasonNumber,
            [mParticle_constants.BRAND]: (_this$props$analytics = this.props.analytics) === null || _this$props$analytics === void 0 ? void 0 : (_this$props$analytics2 = _this$props$analytics.brand) === null || _this$props$analytics2 === void 0 ? void 0 : _this$props$analytics2.title
          }),
          ...attributes
        }
      });
    });
    Navigation_defineProperty(this, "trackContentEvent", attributes => {
      var _this$props$analytics3, _this$props$analytics4;
      return mParticle/* default */.ZP.trackEvent({
        type: mParticle_constants.USER_CONTENT,
        name: mParticle_constants.CONTENT_CLICK,
        attributes: (0,getContentClickAttributes/* default */.Z)({
          [mParticle_constants.BRAND]: (_this$props$analytics3 = this.props.analytics) === null || _this$props$analytics3 === void 0 ? void 0 : (_this$props$analytics4 = _this$props$analytics3.brand) === null || _this$props$analytics4 === void 0 ? void 0 : _this$props$analytics4.title,
          [mParticle_constants.SHOW]: this.props.seriesShortTitle,
          ...attributes
        })
      });
    });
    Navigation_defineProperty(this, "getMobileSearchButton", globalItems => {
      if (!globalItems) {
        return null;
      }
      const searchItem = globalItems.find(item => item.data.machineName === 'search');
      const {
        pageComponent
      } = this.props;
      const {
        ariaLabel,
        destination,
        destinationType,
        title
      } = searchItem.data;
      const to = {
        pathname: url_parse_default()(destination).pathname
      };
      const additionalProps = {
        className: classnames_default()('navigation__search', 'navigation__search--mobile', {
          'navigation__search--active': pageComponent === 'Connect(withRouter(SearchPage))'
        })
      };
      return /*#__PURE__*/react.createElement(Navigation_NavigationLink, {
        additionalProps: additionalProps,
        ariaLabel: ariaLabel,
        destination: destination,
        hideTitle: true,
        logos: {},
        isInternalPage: destinationType === 'internalPage',
        onClick: this.onSearchClick,
        title: title,
        to: to
      }, /*#__PURE__*/react.createElement("div", {
        className: "navigation__search--mobile-icon"
      }));
    });
    Navigation_defineProperty(this, "renderFocusTrap", onFocus => {
      // do not use focus traps on the nav menu if we are in a desktop breakpoint
      // or if the nav menu is closed in mobile breakpoint
      const isFocusTrapActive = !this.state.isDesktop && this.props.isNavOpen;
      if (!isFocusTrapActive) {
        return null;
      }
      return /*#__PURE__*/react.createElement("div", {
        className: "navigation__item__focus-trap-catcher"
        // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
        ,
        tabIndex: 0,
        onFocus: onFocus,
        "aria-hidden": true
      });
    });
    Navigation_defineProperty(this, "onFocusTrapFront", () => {
      var _lastItem$focus;
      // we hit the focus trap catcher at the front of the nav menu
      // this means we need to loop the focus to the last item in the nav list
      const navItems = this.navListRef.current.querySelectorAll('a, button');
      const navLength = navItems.length;
      const lastItem = navLength ? navItems[navLength - 1] : null;
      lastItem === null || lastItem === void 0 ? void 0 : (_lastItem$focus = lastItem.focus) === null || _lastItem$focus === void 0 ? void 0 : _lastItem$focus.call(lastItem);
    });
    Navigation_defineProperty(this, "onFocusTrapBack", () => {
      var _this$navToggleButton, _this$navToggleButton2;
      // we hit the focus trap catcher at the back of the nav menu
      // this means we need to loop the focus back around to the toggle button
      (_this$navToggleButton = this.navToggleButtonRef.current) === null || _this$navToggleButton === void 0 ? void 0 : (_this$navToggleButton2 = _this$navToggleButton.focus) === null || _this$navToggleButton2 === void 0 ? void 0 : _this$navToggleButton2.call(_this$navToggleButton);
    });
    Navigation_defineProperty(this, "onMobileNavKeydown", e => {
      var _this$navToggleButton3, _this$navToggleButton4;
      if (this.state.isDesktop || (e === null || e === void 0 ? void 0 : e.key) !== 'Escape') {
        return;
      }
      if (!this.props.isNavOpen) {
        return;
      }

      // close the expanded mobile nav and move focus back to the menu button
      e.preventDefault();
      this.toggleNav();
      (_this$navToggleButton3 = this.navToggleButtonRef.current) === null || _this$navToggleButton3 === void 0 ? void 0 : (_this$navToggleButton4 = _this$navToggleButton3.focus) === null || _this$navToggleButton4 === void 0 ? void 0 : _this$navToggleButton4.call(_this$navToggleButton3);
    });
    // When user comes from a the gated channel flow to an identity page
    // and exit flow by Linking TV Provider, set the redirect path to the
    // gated channel url the user was on before NBCRESP-18910
    Navigation_defineProperty(this, "getProviderLinkRedirectState", () => {
      const {
        location
      } = this.props;
      const {
        pathname,
        state
      } = location;
      const isGatedChannelReferrer = (state === null || state === void 0 ? void 0 : state.referringOverlayType) === videoPage_constants/* GATED_CHANNEL */.J5;
      const isIdentityPage = /^\/sign-in|sign-up/.test(pathname.toLowerCase());
      if (isGatedChannelReferrer && isIdentityPage) {
        return {
          redirectPath: state.redirectPath,
          redirectSearch: state.redirectSearch,
          referringOverlayType: state.referringOverlayType,
          redirectToSuccessFirst: true
        };
      }
      return {
        redirectPath: pathname,
        redirectToSuccessFirst: true
      };
    });
    this.state = {
      isDesktop: false
    };
    this.profileIcon = /*#__PURE__*/react.createRef();
    this.identityHeader = /*#__PURE__*/react.createRef();
    this.navToggleButtonRef = /*#__PURE__*/react.createRef();
    this.navListRef = /*#__PURE__*/react.createRef();
    this.desktopMatcher = null;
    this.prevFocusedElement = null;
    this.currentFocusedElement = null;
  }
  componentDidMount() {
    const desktopBreakpoint = (0,getCssVariable/* default */.Z)('desktopMid');
    this.desktopMatcher = window.matchMedia("(width >= ".concat(desktopBreakpoint, "px)"));
    this.setState({
      isDesktop: this.desktopMatcher.matches
    });
    this.desktopMatcher.addEventListener('change', this.onDesktopBreakpointChange);
    document.addEventListener('keydown', this.onMobileNavKeydown);
  }
  componentWillUnmount() {
    if (this.desktopMatcher) {
      this.desktopMatcher.removeEventListener('change', this.onDesktopBreakpointChange);
    }
    document.removeEventListener('keydown', this.onMobileNavKeydown);
  }
  UNSAFE_componentWillUpdate(nextProps) {
    // Close open navigation items when switching paths.
    if (this.props.location.pathname !== nextProps.location.pathname) {
      if (this.props.navigation.isNavOpen) {
        this.props.onToggleNav();
      }
      if (this.props.navigation.activeGroup !== '') {
        this.props.onToggleNavGroup(this.props.navigation.activeGroup);
      }
      if (this.props.navigation.isAccountNavOpen) {
        this.props.onToggleAccountNav();
      }
    }
  }
  render() {
    const {
      adobePass: {
        isAuthenticated,
        isAuthenticationChecked,
        mvpd,
        tempPassExpiration
      },
      location: {
        pathname
      },
      navigation,
      language,
      isShowPage,
      pageComponent,
      onToggleAccountNav,
      isNavOpen,
      spinner,
      username,
      mvpdLogout,
      isShowHeader,
      isVideoPage,
      isPreLoading
    } = this.props;
    const mvpdLogo = isAuthenticated && mvpd && mvpd.mvpd_logo_2x;
    const globalItems = get_default()(navigation, ['global', 'data', 'items']);
    const isTempPassActive = isAuthenticated && tempPassExpiration;
    const isLinkToProviderVisible = isAuthenticationChecked && !isAuthenticated || isTempPassActive;
    const isNavOpenOrDesktop = this.state.isDesktop || !this.state.isDesktop && isNavOpen;
    return /*#__PURE__*/react.createElement("nav", {
      role: "navigation",
      className: classnames_default()('navigation', {
        'navigation--sticky': !isVideoPage,
        'navigation--expanded': isNavOpen,
        'navigation--show-page': isShowPage,
        'navigation--mvpd': mvpdLogo,
        'navigation--mvpd-identity': IDENTITY_ENABLED && mvpdLogo
      })
    }, !isPreLoading && /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('navigation__inner', {
        'navigation__inner--show-page': isShowPage
      })
    }, /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('navigation__logo-wrapper', {
        'navigation__logo-wrapper--show-page': isShowPage
      })
    }, /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('navigation__item navigation__item--accessibility', {
        'navigation__item--hidden': !navigation.isAccessibilityNavOpen
      })
    }, /*#__PURE__*/react.createElement("a", {
      href: "#main-content",
      className: "navigation__accessibility-button",
      onClick: this.onAccessibilityClick
    }, /*#__PURE__*/react.createElement("span", null, (0,getTranslatedString/* default */.Z)(language, 'navigation.skipToContent')))), /*#__PURE__*/react.createElement(es/* IndexLink */.C_, {
      onClick: this.onLogoClick,
      className: "navigation__logo navigation__logo--".concat(app.appName),
      to: "/"
    }, app.name), /*#__PURE__*/react.createElement("div", {
      className: "navigation__mobile--wrapper"
    }, this.getMobileSearchButton(globalItems), this.renderFocusTrap(this.onFocusTrapFront), /*#__PURE__*/react.createElement("button", {
      type: "button",
      className: "navigation__hamburger",
      "aria-label": "Toggle main navigation",
      onClick: this.toggleNav,
      ref: this.navToggleButtonRef
    }, /*#__PURE__*/react.createElement("div", {
      className: "navigation__hamburger--focus"
    }), IDENTITY_ENABLED && mvpdLogo && /*#__PURE__*/react.createElement("div", {
      className: "navigation__mvpd"
    }, /*#__PURE__*/react.createElement("div", {
      className: "navigation__mvpd__logo"
    }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
      url: mvpd.mvpd_color_2x,
      brandTitle: mvpd.title,
      align: "center"
    }))), /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('navigation__hamburger--icon', {
        'navigation__hamburger--close-icon': isNavOpen
      })
    })))), /*#__PURE__*/react.createElement("ul", {
      className: classnames_default()("navigation__list navigation__list--".concat(app.appName), {
        'navigation__list--show-page': isShowHeader,
        'navigation__list--collapsed': !isNavOpenOrDesktop
      }),
      ref: this.navListRef
    }, /*#__PURE__*/react.createElement("li", Navigation_extends({
      className: "navigation__item navigation__item--nbc-label"
    }, !isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), /*#__PURE__*/react.createElement("span", {
      className: "navigation__item__title"
    }, app.name)), globalItems && globalItems.map(item => {
      const {
        ariaLabel,
        defaultLogo,
        destination,
        destinationType,
        focusedLogo,
        machineName,
        selectedLogo
      } = item.data;
      if (machineName === 'live' && !LIVE_ENABLED || machineName === 'shop' && this.props.isCoppaCompliant) {
        return /*#__PURE__*/react.createElement(react.Fragment, null);
      }
      const additionalProps = {};
      const to = {
        pathname: url_parse_default()(destination).pathname
      };
      let onClick = this.onNavClick;
      if (machineName === 'app') {
        to.query = {
          brand: app.navigation.app
        };
      } else if (machineName === 'home') {
        to.pathname = '/';
      } else if (machineName === 'live') {
        onClick = this.onLiveClick;
      } else if (machineName.includes('peacock')) {
        onClick = this.onPeacockClick;
        if (machineName === 'peacock') {
          additionalProps.rel = 'noopener noreferrer';
          additionalProps.target = '_blank';
        }
      } else if (machineName === 'search') {
        onClick = this.onSearchClick;
      }
      if (!isNavOpenOrDesktop) {
        additionalProps.tabIndex = '-1';
      }
      // some pages have additional filters that update the URL path
      // check if this is one of those pages and if we are currently on
      // a child path
      const pagePattern = FILTERABLE_PAGES[machineName];
      const isActiveOverride = pagePattern && pagePattern.test(pathname) || this.props.activeOverride === machineName;
      if (!isNavOpenOrDesktop) {
        additionalProps.tabIndex = '-1';
      }
      return /*#__PURE__*/react.createElement("li", {
        key: "navigation-item-".concat(machineName),
        className: classnames_default()('navigation__item', "navigation__item--".concat(machineName))
      }, /*#__PURE__*/react.createElement(Navigation_NavigationLink, {
        additionalProps: additionalProps,
        ariaLabel: ariaLabel,
        destination: destination,
        logos: {
          default: defaultLogo,
          focused: focusedLogo,
          selected: selectedLogo
        },
        isInternalPage: destinationType === 'internalPage',
        isActiveOverride: isActiveOverride,
        onClick: e => onClick(e, item.analytics.itemClickedName),
        onlyActiveOnIndex: machineName === 'home',
        title: item.data.title,
        to: to
      }));
    }), !IDENTITY_ENABLED && mvpdLogo && /*#__PURE__*/react.createElement("li", {
      className: "navigation__mvpd"
    }, /*#__PURE__*/react.createElement("ul", null, /*#__PURE__*/react.createElement("li", {
      className: "navigation__mvpd__logo"
    }, /*#__PURE__*/react.createElement("a", Navigation_extends({
      className: "navigation__item__link",
      href: mvpd.mvpd_url,
      rel: "noreferrer noopener",
      target: "_blank",
      onClick: onToggleAccountNav
    }, !isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), /*#__PURE__*/react.createElement("div", {
      className: "navigation__mvpd__logo"
    }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
      url: mvpd.mvpd_color_2x,
      brandTitle: mvpd.title,
      align: "center"
    })))))), /*#__PURE__*/react.createElement("div", {
      className: "navigation__identity--block"
    }, isLinkToProviderVisible && /*#__PURE__*/react.createElement("li", {
      className: classnames_default()('navigation__item navigation__item--mvpd', {
        'navigation__item navigation__item--mvpd--logged-in': !!this.props.username
      })
    }, /*#__PURE__*/react.createElement(es/* Link */.rU, Navigation_extends({
      className: "navigation__item__link--button-wrapper",
      onClick: this.onTvProviderClick,
      to: {
        pathname: '/mvpd-picker',
        state: this.getProviderLinkRedirectState()
      }
    }, !isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), /*#__PURE__*/react.createElement("span", {
      className: classnames_default()('navigation__item__link--button navigation__item__link--mvpd', {
        'navigation__item__link--mvpd--logged-in': this.props.username
      })
    }, /*#__PURE__*/react.createElement("span", null, "Link TV Provider")))), IDENTITY_ENABLED && /*#__PURE__*/react.createElement("li", {
      className: classnames_default()('navigation__item', 'navigation__item--identity', {
        'navigation__item--sign-up': isAuthenticationChecked && !isAuthenticated && !this.props.username || isTempPassActive,
        'navigation__item--account': isAuthenticationChecked && isAuthenticated || this.props.username
      })
    }, !isAuthenticationChecked ? /*#__PURE__*/react.createElement("div", {
      className: "navigation__item__spinner"
    }, /*#__PURE__*/react.createElement(Spinner/* default */.Z, spinner)) : !isAuthenticated && !username || isTempPassActive ? /*#__PURE__*/react.createElement(es/* Link */.rU, Navigation_extends({
      onClick: this.onNavClick,
      className: "navigation__item__link--button-wrapper",
      to: {
        pathname: '/sign-up',
        state: {
          redirectPath: pathname
        }
      }
    }, !isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), /*#__PURE__*/react.createElement("span", {
      className: "navigation__item__link--button navigation__item__link--sign-up"
    }, /*#__PURE__*/react.createElement("span", null, "Sign Up"))) : /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
      className: "navigation__item__account"
    }, /*#__PURE__*/react.createElement("button", Navigation_extends({
      type: "button",
      className: "navigation__item__link navigation__item__link--account",
      onFocus: this.onProfileFocus,
      onBlur: this.onProfileBlur,
      onMouseUp: this.onMouseUpProfile,
      ref: this.profileIcon
    }, !isNavOpenOrDesktop ? {
      tabIndex: -1
    } : {}), isAuthenticated && mvpd && mvpd.mvpd_logo_2x && /*#__PURE__*/react.createElement("div", {
      className: "navigation__mvpd__logo"
    }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
      url: mvpd.mvpd_color_2x,
      brandTitle: mvpd.title,
      align: "center"
    })), /*#__PURE__*/react.createElement("i", null))), /*#__PURE__*/react.createElement("div", {
      ref: this.identityHeader,
      onBlur: this.onProfileBlur,
      className: classnames_default()('navigation__item__identity-header', {
        'navigation__item__identity-header--hidden': !navigation.isAccountNavOpen
      })
    }, /*#__PURE__*/react.createElement(IdentityHeader_IdentityHeader, {
      adobePass: this.props.adobePass,
      mvpdLogout: mvpdLogout,
      username: username,
      onTrackEvent: this.trackEvent,
      pageComponent: pageComponent
    }))))), this.renderFocusTrap(this.onFocusTrapBack))));
  }
}
Navigation_defineProperty(Navigation, "propTypes", {
  router: prop_types_default().shape({
    replace: (prop_types_default()).func.isRequired
  }).isRequired,
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string
  }),
  previousPath: (prop_types_default()).string,
  onToggleNav: (prop_types_default()).func.isRequired,
  onSkipLink: (prop_types_default()).func.isRequired,
  onToggleAccountNav: (prop_types_default()).func.isRequired,
  onToggleNavGroup: (prop_types_default()).func.isRequired,
  adobePass: prop_types_default().shape({
    isAuthenticated: (prop_types_default()).bool,
    isAuthenticationChecked: (prop_types_default()).bool,
    mvpd: prop_types_default().shape({
      mvpd_logo_2x: (prop_types_default()).string,
      // eslint-disable-line camelcase
      mvpd_color_2x: (prop_types_default()).string,
      // eslint-disable-line camelcase
      title: (prop_types_default()).string,
      mvpd_url: (prop_types_default()).string // eslint-disable-line camelcase
    })
  }).isRequired,
  pageComponent: (prop_types_default()).string,
  isShowPage: (prop_types_default()).bool,
  navigation: prop_types_default().shape({
    isNavOpen: (prop_types_default()).bool.isRequired,
    isAccessibilityNavOpen: (prop_types_default()).bool.isRequired,
    isAccountNavOpen: (prop_types_default()).bool.isRequired,
    activeGroup: (prop_types_default()).string.isRequired
  }).isRequired,
  username: (prop_types_default()).string,
  mvpdLogout: (prop_types_default()).func,
  spinner: prop_types_default().shape({
    size: prop_types_default().oneOf([null, 'small', 'large']),
    top: (prop_types_default()).string,
    theme: prop_types_default().oneOf([null, 'dark', 'light'])
  }),
  isCoppaCompliant: (prop_types_default()).bool,
  seriesShortTitle: (prop_types_default()).string,
  seasonNumber: (prop_types_default()).string,
  analytics: prop_types_default().shape({
    brand: prop_types_default().shape({
      title: (prop_types_default()).string
    })
  }),
  language: (prop_types_default()).string,
  onPeacockClick: (prop_types_default()).func.isRequired,
  isPeacockPreview: (prop_types_default()).bool
});
Navigation_defineProperty(Navigation, "defaultProps", {
  spinner: {
    size: 'small',
    top: '19px',
    theme: 'light'
  },
  language: 'en'
});
/* harmony default export */ var Navigation_Navigation = ((0,react_redux_es/* connect */.$j)((state, ownProps) => {
  var _state$adobePass$mvpd, _state$adobePass$mvpd2, _state$adobePass$mvpd3, _navigation;
  const pageComponents = ['Connect(ShowPage)', 'Connect(EpisodesPage)', 'Connect(PhotoLandingPage)', 'Connect(PhotoDetailsPage)', 'Connect(CreditLandingPage)', 'Connect(CreditDetailsPage)', 'Connect(GuestPage)', 'Connect(ScalableSalesPage)'];
  const pageSimpleLayout = ['Connect(CreditLandingPage)', 'Connect(CreditDetailsPage)'];
  const isShowHeader = pageComponents.includes(ownProps.pageComponent);
  const isSimpleLayout = pageSimpleLayout.includes(ownProps.pageComponent);
  const userAgentData = state.client.userAgent;
  const ldClientData = state.launchDarkly.client;
  const isTempPassMvpd = state.adobePass.isAuthenticated && ((_state$adobePass$mvpd = state.adobePass.mvpd) === null || _state$adobePass$mvpd === void 0 ? void 0 : (_state$adobePass$mvpd2 = _state$adobePass$mvpd.mvpd_id) === null || _state$adobePass$mvpd2 === void 0 ? void 0 : (_state$adobePass$mvpd3 = _state$adobePass$mvpd2.toLowerCase()) === null || _state$adobePass$mvpd3 === void 0 ? void 0 : _state$adobePass$mvpd3.includes(videoPage_constants/* TEMP_PASS */.G8.toLowerCase()));
  return {
    activeOverride: state.navigation.activeOverride,
    language: state.client.language,
    username: state.account.email,
    navigation: ownProps.navigation || state.navigation,
    isMobile: userAgentData.isMobile,
    isTablet: userAgentData.isTablet,
    isNavOpen: (_navigation = (ownProps || state).navigation) === null || _navigation === void 0 ? void 0 : _navigation.isNavOpen,
    isPeacockPreviewEnabled: ldClientData.isPeacockPreviewEnabled || false,
    isHomePage: ownProps.pageComponent === 'Connect(HomePage)',
    isLandingPage: ownProps.pageComponent === 'Connect(HomePage)' || ownProps.pageComponent === 'Connect(SportsPage)',
    isVideoPage: ownProps.pageComponent === 'Connect(VideoPage)',
    isPreLoading: state.navigation.isPreLoading,
    isShowHeader,
    isSimpleLayout,
    isTempPassMvpd
  };
})(Navigation));
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__(57267);
// EXTERNAL MODULE: ./components/SocialIcons/SocialIcons.js
var SocialIcons = __webpack_require__(92156);
// EXTERNAL MODULE: ./components/WithHelpDeskLinks/WithHelpDeskLinks.js + 1 modules
var WithHelpDeskLinks = __webpack_require__(39077);
;// CONCATENATED MODULE: ./utils/isLinkCoppaCompliant.js
/**
 * Check whether a link is non-COPPA compliant
 * https://nbcdigital.atlassian.net/browse/NBCRESP-2269
 *
 * @param  {boolean} isShowCoppaCompliant
 *   The show attribute that indicates a coppa compliant flag
 * @param  {objetc} link
 *   The link object containing the menu information
 * @return {boolean}
 *   True if link should be hidden to the user.
 */
function isLinkCoppaCompliant(isShowCoppaCompliant, link) {
  if (isShowCoppaCompliant) {
    return link.isCoppaCompliant;
  }
  return false;
}
;// CONCATENATED MODULE: ./components/Quicklinks/Quicklinks.js





const QuickLinks = props => /*#__PURE__*/react.createElement("div", {
  className: "quick-links"
}, /*#__PURE__*/react.createElement("h2", {
  className: "quick-links__title"
}, props.title), /*#__PURE__*/react.createElement("ul", {
  className: "quick-links__list"
}, props.links.map((link, index) => !isLinkCoppaCompliant(props.isShowCoppaCompliant, link) && /*#__PURE__*/react.createElement("li", {
  key: index
}, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, {
  href: link.title === 'FAQ' ? props.helpDeskLinks.faq : link.title === 'Contact Us' ? props.helpDeskLinks.support : link.href,
  target: link.href && link.href.indexOf('help.nbc.com') >= 0 || link.title === 'FAQ' || link.title === 'Contact Us' ? '_blank' : '',
  onClick: props.onClick
}, link.title)))));
QuickLinks.propTypes = {
  title: (prop_types_default()).string.isRequired,
  links: prop_types_default().arrayOf(prop_types_default().shape({
    href: (prop_types_default()).string,
    title: (prop_types_default()).string
  })).isRequired,
  isShowCoppaCompliant: (prop_types_default()).bool,
  helpDeskLinks: prop_types_default().shape({
    faq: (prop_types_default()).string,
    support: (prop_types_default()).string
  }),
  onClick: (prop_types_default()).func
};
QuickLinks.defaultProps = {
  isShowCoppaCompliant: false
};
/* harmony default export */ var Quicklinks = ((0,WithHelpDeskLinks/* default */.Z)(QuickLinks));
// EXTERNAL MODULE: ./utils/getPrivacyUrl.js
var getPrivacyUrl = __webpack_require__(33495);
;// CONCATENATED MODULE: ./components/CorporateLinks/CorporateLinks.js







const getUrl = (href, language, brand) => {
  const brandIntake = get_default()(brand, 'brandIntake', '');
  if (href.indexOf('www.nbcuniversal.com/privacy/california-consumer-privacy-act') > 0) {
    return (0,getPrivacyUrl/* getCANoticelUrl */.h4)(language, brandIntake);
  }
  // Note: May need this for the privacy editorial link in the future
  if (href.indexOf('www.nbcuniversal.com/privacy/notrtoo') > 0) {
    return (0,getPrivacyUrl/* getNotSellUrl */.fJ)(language, brandIntake);
  }
  if (href.indexOf('www.nbcuniversal.com/privacy?') > 0 || href === 'https://www.nbcuniversal.com/privacy') {
    return (0,getPrivacyUrl/* default */.ZP)(language, brandIntake);
  }
  return href;
};
const CorporateLinks = _ref => {
  var _country$toLowerCase;
  let {
    links,
    isShowCoppaCompliant,
    language,
    brand,
    onClick,
    oneTrustLoaded,
    country
  } = _ref;
  const isPendingOneTrust = (0,react.useRef)(true);
  const fallbackOneTrust = url => () => {
    if (!isPendingOneTrust) {
      // OneTrust has loaded, don't do anything
      return;
    }

    // use previous behavior of following through the link
    window.location = url;
  };
  (0,react.useEffect)(() => {
    isPendingOneTrust.current = !oneTrustLoaded;
  }, [oneTrustLoaded]);
  const btnClass = classnames_default()({
    'onetrust-button': true,
    'ot-sdk-show-settings': true,
    'onetrust-button--ccpa': (country === null || country === void 0 ? void 0 : (_country$toLowerCase = country.toLowerCase) === null || _country$toLowerCase === void 0 ? void 0 : _country$toLowerCase.call(country)) === 'us'
  });
  return /*#__PURE__*/react.createElement("div", {
    className: "corporate-links"
  }, /*#__PURE__*/react.createElement("ul", {
    className: "corporate-links__list"
  }, links && links.map((link, index) => {
    const linkUrl = getUrl(link.href, language, brand);
    const isDoNotSell = link.title.toLowerCase() === 'do not sell my personal information' || link.title.toLowerCase() === 'your privacy choices' || linkUrl.toLowerCase().includes('/privacy/notrtoo');
    return !isLinkCoppaCompliant(isShowCoppaCompliant, link) && /*#__PURE__*/react.createElement("li", {
      key: index
    }, isDoNotSell ? /*#__PURE__*/react.createElement("button", {
      id: "ot-sdk-btn",
      "aria-haspopup": "true",
      "aria-label": link.title,
      className: btnClass,
      type: "button",
      onClick: fallbackOneTrust(linkUrl)
    }, link.title) : /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, {
      href: linkUrl,
      target: get_default()(link, 'attributes.target', ''),
      onClick: onClick
    }, link.title));
  })));
};
CorporateLinks.propTypes = {
  links: prop_types_default().arrayOf(prop_types_default().shape({
    href: (prop_types_default()).string,
    title: (prop_types_default()).string,
    attributes: prop_types_default().shape({})
  })).isRequired,
  isShowCoppaCompliant: (prop_types_default()).bool,
  language: (prop_types_default()).string,
  brand: (prop_types_default()).object,
  onClick: (prop_types_default()).func,
  oneTrustLoaded: (prop_types_default()).bool,
  country: (prop_types_default()).string
};
CorporateLinks.defaultProps = {
  isShowCoppaCompliant: false
};
/* harmony default export */ var CorporateLinks_CorporateLinks = (CorporateLinks);
;// CONCATENATED MODULE: ./components/Footer/FooterBase.js

const FooterBase = () => /*#__PURE__*/react.createElement("div", {
  className: "footer__base"
}, /*#__PURE__*/react.createElement("ul", {
  className: "footer__base__list"
}, /*#__PURE__*/react.createElement("li", null, "A Division of ", /*#__PURE__*/react.createElement("strong", null, "NBCUniversal")), /*#__PURE__*/react.createElement("li", null, "\xA9", new Date().getFullYear(), " NBCUniversal Media, LLC")));
/* harmony default export */ var Footer_FooterBase = (FooterBase);
;// CONCATENATED MODULE: ./components/Footer/FooterSimple.js




const FooterSimple = props => {
  const isEmpty = props.links.length === 0;
  return /*#__PURE__*/react.createElement("div", {
    className: "footer-simple"
  }, /*#__PURE__*/react.createElement("div", {
    className: classnames_default()({
      footerempty: isEmpty
    })
  }, !isEmpty && /*#__PURE__*/react.createElement("ul", {
    className: "footer__links__list"
  }, props.links.map(link => /*#__PURE__*/react.createElement("li", {
    key: link.title
  }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, {
    className: "footer__links__list__item",
    href: link.url
  }, link.title))))));
};
FooterSimple.propTypes = {
  links: prop_types_default().arrayOf(prop_types_default().shape({
    title: (prop_types_default()).string,
    url: (prop_types_default()).string
  }))
};
/* harmony default export */ var Footer_FooterSimple = (FooterSimple);
// EXTERNAL MODULE: ./lib/analytics/comScore.js
var comScore = __webpack_require__(34284);
// EXTERNAL MODULE: ./utils/isTargetedLink.js
var isTargetedLink = __webpack_require__(84022);
// EXTERNAL MODULE: ./utils/recordPageView.js + 2 modules
var recordPageView = __webpack_require__(59409);
// EXTERNAL MODULE: ./utils/getOptStatus.js
var getOptStatus = __webpack_require__(33159);
// EXTERNAL MODULE: ./node_modules/@datadog/browser-rum/esm/entries/main.js + 177 modules
var main = __webpack_require__(97032);
;// CONCATENATED MODULE: ./lib/datadog.js



const getDataDogTrackingConsent = () => (0,getOptStatus/* getOptValue */.I6)() === '1YNN' ? 'granted' : 'not-granted';
const setDataDogTrackingConsent = () => {
  main/* datadogRum */.v.setTrackingConsent(getDataDogTrackingConsent());
};
const init = () => {
  // Because this is a POC, will be leaving these keys in this file.
  main/* datadogRum */.v.init({
    applicationId: config/* default */.Z.datadog.applicationId,
    clientToken: config/* default */.Z.datadog.clientToken,
    site: 'datadoghq.com',
    service: config/* default */.Z.datadog.service,
    // Specify a version number to identify the deployed version of your application in Datadog
    // version: '1.0.0',
    sampleRate: 100,
    premiumSampleRate: 100,
    trackInteractions: true,
    defaultPrivacyLevel: 'mask-user-input',
    trackingConsent: getDataDogTrackingConsent()
  });
  main/* datadogRum */.v.startSessionReplayRecording();
};
/* harmony default export */ var datadog = ({
  init,
  setDataDogTrackingConsent
});
;// CONCATENATED MODULE: ./components/Footer/Footer.js
function Footer_extends() { return Footer_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, Footer_extends.apply(null, arguments); }

function Footer_defineProperty(e, r, t) { return (r = Footer_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function Footer_toPropertyKey(t) { var i = Footer_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function Footer_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




















const MENU_QUICK_LINKS = config/* default */.Z.get('app.menuQuickLinks');
const MENU_QUICK_MAX = config/* default */.Z.get('app.menuQuickLinksMax');
const MENU_CORPORATE_LINKS = config/* default */.Z.get('app.menuCorporateLinks');
const ONE_TRUST_COOKIE_URL = config/* default */.Z.get('onetrust.cookieUrl');
class Footer extends react.PureComponent {
  constructor(props) {
    super(props);
    Footer_defineProperty(this, "oneTrustLoadedCallback", () => {
      this.setState({
        oneTrustLoaded: true
      });
      setTimeout(() => comScore/* default */.Z.updateOptOutStatus(), 200);
      window.OptanonWrapper = this.optAnonWrapperHandler;
    });
    Footer_defineProperty(this, "optAnonWrapperHandler", () => {
      var _window, _window$OneTrust;
      if (this.isTrackingConsentEmpty) {
        datadog.setDataDogTrackingConsent();
      }
      (_window = window) === null || _window === void 0 ? void 0 : (_window$OneTrust = _window.OneTrust) === null || _window$OneTrust === void 0 ? void 0 : _window$OneTrust.OnConsentChanged(this.onClickPrefCenter); // eslint-disable-line new-cap
    });
    Footer_defineProperty(this, "loadOneTrust", () => {
      // Will move this script to scripts file once Bionic is fully released because it sets a privacy cookie
      // that should not be set until we fully release.
      const existingScript = document.getElementById('privacyCookie');
      if (!existingScript) {
        const OTTag = document.createElement('script');
        OTTag.setAttribute('src', ONE_TRUST_COOKIE_URL);
        OTTag.setAttribute('id', 'privacyCookie');
        OTTag.setAttribute('type', 'text/javascript');
        OTTag.setAttribute('charset', 'UTF-8');

        // Add custom attributes
        OTTag.setAttribute('ccpa-opt-out-ids', 'USP');
        OTTag.setAttribute('ccpa-opt-out-geo', 'US');
        OTTag.setAttribute('ccpa-opt-out-lspa', 'false');
        document.body.appendChild(OTTag);
        OTTag.onload = () => {
          this.oneTrustLoadedCallback();
        };
      }
      if (existingScript) this.oneTrustLoadedCallback();
    });
    // Updates only when needed the mvpd link in QuickLinks Component
    Footer_defineProperty(this, "getQuickLinks", (mvpdAuth, quickLinksObject) => {
      let links = quickLinksObject.links;
      const providerLinked = quickLinksObject.links.filter(link => link.href.includes('provider-linked'));
      if (mvpdAuth && mvpdAuth.title || providerLinked.length > 0 && !mvpdAuth) {
        links = links.map(link => {
          const isMvpdAuth = mvpdAuth && link.href.includes('mvpd');
          if (isMvpdAuth || link.href.includes('provider-linked')) {
            const host = link.href;
            const path = isMvpdAuth ? 'provider-linked' : 'mvpd-picker';
            link.href = host.replace(host.split('/').pop(), path);
          }
          return link;
        });
      }
      return links;
    });
    Footer_defineProperty(this, "trackEvent", event => {
      const textContent = get_default()(event, ['currentTarget', 'textContent']) || '';
      const itemName = textContent.length > 0 ? textContent : get_default()(event, ['currentTarget', 'title']);
      const pathname = get_default()(event, ['currentTarget', 'href']);
      pathname.indexOf('www.nbcuniversal.com/privacy') > 0 && mParticle/* default */.ZP.trackEvent({
        type: mParticle_constants.NAVIGATION,
        name: mParticle_constants.CLICK_ACTION,
        attributes: (0,getClickActionAttributes/* default */.Z)({
          [mParticle_constants.ITEM_CLICKED_NAME]: itemName === 'Privacy' ? 'Privacy Policy' : itemName,
          [mParticle_constants.CUSTOM_SHELF_TITLE]: 'Global Footer',
          [mParticle_constants.BRAND]: pathname.indexOf('/shows/') === -1 ? get_default()(this.props.brand, 'brandDisplayTitle', 'None') : 'None'
        })
      });
      (0,isTargetedLink/* default */.Z)(pathname) && mParticle/* default */.ZP.trackEvent({
        name: 'Exit',
        type: 'Navigation',
        attributes: {
          'Destination URL': pathname,
          'Destination Type': get_default()(event, ['currentTarget', 'hostname']),
          'Notification Title': itemName,
          'Item Clicked Name': itemName,
          'Custom Shelf Title': 'Global Footer',
          'Content Position': 'None',
          'Custom Shelf Position': 'None'
        }
      });
    });
    Footer_defineProperty(this, "onClickDoNotSell", () => {
      (0,recordPageView/* recordMpPageView */.G0)({
        'Page Name': 'OneTrust Modal',
        'Page Type': 'OneTrust Modal',
        'Registration Referrer': 'None',
        'Registration Source': this.props.platform || 'None',
        'Sweepstakes Name': 'None',
        Brand: get_default()(this.props.brand, 'brandDisplayTitle', 'None')
      });
      this.restoreScroll();
    });
    Footer_defineProperty(this, "restoreScroll", () => {
      const pos = window.scrollY;
      const modalContainer = document.getElementById('onetrust-pc-sdk');
      this.interval = setInterval(() => {
        if (modalContainer && modalContainer.style.visibility !== 'hidden') {
          clearInterval(this.interval);
          document.body.style.overflow = '';
          window.scrollTo(0, pos);
        }
      }, 10);
    });
    Footer_defineProperty(this, "onClickPrefCenter", () => {
      const currentOptStatus = (0,getOptStatus/* getOptValue */.I6)();
      if (this.state.lastPreferenceChoice !== currentOptStatus) {
        datadog.setDataDogTrackingConsent();
        comScore/* default */.Z.updateOptOutStatus().then(() => {
          this.setState({
            lastPreferenceChoice: currentOptStatus
          });
          const pathname = get_default()(this.props, ['location', 'pathname']);
          mParticle/* default */.ZP.trackEvent({
            type: mParticle_constants.NAVIGATION,
            name: mParticle_constants.CLICK_ACTION,
            attributes: (0,getClickActionAttributes/* default */.Z)({
              [mParticle_constants.ITEM_CLICKED_NAME]: 'Allow Sale of My Personal Information',
              [mParticle_constants.BRAND]: pathname && pathname.indexOf('/shows/') === -1 ? get_default()(this.props.brand, 'brandDisplayTitle', 'None') : 'None',
              [mParticle_constants.TOGGLE]: (0,getOptStatus/* default */.ZP)() === 0 ? 'Off' : 'On'
            })
          });
        });
      }
    });
    this.state = {
      links: props.quickLinks.links,
      oneTrustLoaded: false,
      lastPreferenceChoice: null
    };
    this.createdListener = false;
  }
  componentDidMount() {
    this.setState({
      lastPreferenceChoice: (0,getOptStatus/* getOptValue */.I6)()
    });
    this.isTrackingConsentEmpty = !(0,getOptStatus/* getOptValue */.I6)();
  }
  componentDidUpdate(prevProps) {
    if (prevProps.mvpdAuth !== this.props.mvpdAuth) {
      this.setState({
        links: this.getQuickLinks(this.props.mvpdAuth, this.props.quickLinks)
      });
    }
    if (!this.state.oneTrustLoaded) {
      // Need to dynamically load OneTrust script based on Bionic Flag
      this.loadOneTrust();
    }
    if (this.state.oneTrustLoaded && !this.createdListener) {
      this.createdListener = true;
      const doNotSellBtn = document.getElementById('ot-sdk-btn');
      doNotSellBtn && doNotSellBtn.addEventListener('click', this.onClickDoNotSell);
    }
  }
  componentWillUnmount() {
    if (this.createdListener) {
      const doNotSellBtn = document.getElementById('ot-sdk-btn');
      doNotSellBtn && doNotSellBtn.removeEventListener('click', this.onClickDoNotSell);
    }
    this.interval && clearInterval(this.interval);
  }
  render() {
    const footerLinks = get_default()(this.props, 'attributes.footerLinks', []);
    const className = this.props.className;
    return /*#__PURE__*/react.createElement("footer", {
      className: classnames_default()('footer', {
        [className]: className
      }),
      role: "contentinfo",
      ref: this.props.footerRef
    }, /*#__PURE__*/react.createElement("div", {
      className: "footer__container"
    }, /*#__PURE__*/react.createElement("div", {
      className: "footer__logo"
    }, /*#__PURE__*/react.createElement(es/* Link */.rU, {
      className: "footer__logo__link footer__logo__link--".concat(config/* default */.Z.get('app.appName')),
      to: "/"
    }, config/* default */.Z.get('app.name'))), /*#__PURE__*/react.createElement("section", {
      className: "footer__top"
    }, footerLinks.length ? /*#__PURE__*/react.createElement(Footer_FooterSimple, {
      links: footerLinks
    }) : /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {
      className: "footer__left"
    }, /*#__PURE__*/react.createElement(SocialIcons/* default */.Z, null)), /*#__PURE__*/react.createElement("div", {
      className: "footer__right"
    }, /*#__PURE__*/react.createElement(Quicklinks, {
      title: this.props.quickLinks.title,
      links: this.state.links,
      isShowCoppaCompliant: this.props.isCoppaCompliant,
      onClick: this.trackEvent
    })))), !footerLinks.length && /*#__PURE__*/react.createElement("div", {
      className: "footer__legal"
    }, /*#__PURE__*/react.createElement(CorporateLinks_CorporateLinks, Footer_extends({}, this.props.corporateLinks, {
      isShowCoppaCompliant: this.props.isCoppaCompliant,
      language: this.props.language,
      brand: this.props.brand,
      onClick: this.trackEvent,
      oneTrustLoaded: this.state.oneTrustLoaded,
      country: this.props.country
    })))), /*#__PURE__*/react.createElement(Footer_FooterBase, null));
  }
}
Footer.propTypes = {
  quickLinks: prop_types_default().shape({
    title: (prop_types_default()).string,
    links: (prop_types_default()).array
  }).isRequired,
  mvpdAuth: (prop_types_default()).object,
  attributes: prop_types_default().shape({
    footerLinks: (prop_types_default()).array
  }),
  corporateLinks: prop_types_default().shape({
    title: (prop_types_default()).string,
    links: (prop_types_default()).array
  }).isRequired,
  isCoppaCompliant: (prop_types_default()).bool,
  className: (prop_types_default()).string,
  language: (prop_types_default()).string,
  brand: (prop_types_default()).object,
  pathname: (prop_types_default()).string,
  footerRef: (prop_types_default()).object,
  country: (prop_types_default()).string
};
Footer.queries = {
  quickLinks: () => (0,park_api/* default */.ZP)("menus/".concat(MENU_QUICK_LINKS), {}).then(response => !response.data.data.attributes ? {
    title: '',
    links: []
  } : {
    title: response.data.data.attributes.title,
    links: response.data.data.attributes.items.slice(0, MENU_QUICK_MAX).map(item => ({
      href: item.href,
      title: item.title,
      isCoppaCompliant: get_default()(item.attributes, 'data-not-coppa-compliant', 0)
    }))
  }),
  corporateLinks: () => (0,park_api/* default */.ZP)("menus/".concat(MENU_CORPORATE_LINKS), {}).then(response => !response.data.data.attributes ? {
    title: '',
    links: []
  } : {
    title: response.data.data.attributes.title,
    links: response.data.data.attributes.items.map(item => ({
      href: item.href,
      title: item.title,
      isCoppaCompliant: get_default()(item.attributes, 'data-not-coppa-compliant', 0)
    }))
  })
};
;// CONCATENATED MODULE: ./components/NotificationBar/NotificationBar.js


const NotificationBar = props => /*#__PURE__*/react.createElement("section", {
  className: "notification-bar notification-bar--sticky"
}, /*#__PURE__*/react.createElement("div", {
  className: "notification-bar__background",
  style: props.style
}, /*#__PURE__*/react.createElement("div", {
  className: "notification-bar__inner"
}, /*#__PURE__*/react.createElement("i", {
  className: "notification-bar__icon notification-bar__icon--".concat(props.iconClass)
}), /*#__PURE__*/react.createElement("div", {
  className: "notification-bar--info"
}, props.children), /*#__PURE__*/react.createElement("span", {
  className: "notification-bar--close",
  onClick: props.onClose,
  "aria-label": "Close"
}))));
NotificationBar.propTypes = {
  children: (prop_types_default()).node,
  style: (prop_types_default()).object,
  iconClass: (prop_types_default()).string,
  onClose: (prop_types_default()).func
};
NotificationBar.defaultProps = {
  style: {},
  iconClass: 'exclamation'
};
/* harmony default export */ var NotificationBar_NotificationBar = (NotificationBar);
;// CONCATENATED MODULE: ./components/MvpdShelf/MvpdShelf.js



const MvpdShelf = props => /*#__PURE__*/react.createElement("div", {
  style: {
    top: MvpdShelf.setOffset()
  },
  className: classnames_default()('mvpd-shelf', {
    'mvpd-shelf--active': props.navigation.isAccountNavOpen
  }),
  onClick: e => e.stopPropagation(),
  role: "presentation"
}, /*#__PURE__*/react.createElement("div", {
  className: "mvpd-shelf-inner"
}, /*#__PURE__*/react.createElement("span", {
  className: "mvpd__visit-site"
}, /*#__PURE__*/react.createElement("a", {
  className: "navigation__mvpd-link",
  href: props.adobePass.mvpd.mvpd_url,
  rel: "noreferrer noopener",
  target: "_blank"
}, /*#__PURE__*/react.createElement("span", null, "Visit Site"))), /*#__PURE__*/react.createElement("span", {
  className: "mvpd__signout"
}, /*#__PURE__*/react.createElement("a", {
  className: "navigation__mvpd-link",
  onClick: props.logout,
  role: "presentation"
}, /*#__PURE__*/react.createElement("span", null, "Sign Out")))));
MvpdShelf.setOffset = () => {
  const offsetElement = document.getElementsByClassName('responsive-app__header') || {};
  return offsetElement[0] ? offsetElement[0].offsetTop + 50 : 50;
};
MvpdShelf.propTypes = {
  adobePass: (prop_types_default()).object.isRequired,
  navigation: prop_types_default().shape({
    isAccountNavOpen: (prop_types_default()).bool.isRequired
  }),
  logout: (prop_types_default()).func.isRequired
};
/* harmony default export */ var MvpdShelf_MvpdShelf = (MvpdShelf);
// EXTERNAL MODULE: ./components/Modal/Modal.js
var Modal = __webpack_require__(85322);
;// CONCATENATED MODULE: ./components/OldIEModal/OldIEModal.js



const OldIEModal = _ref => {
  let {
    onClose
  } = _ref;
  return /*#__PURE__*/react.createElement(Modal/* default */.Z, {
    className: "oldie-modal",
    header: "This Browser Is Not Supported.",
    closeModal: onClose,
    isCloseVisible: true
  }, /*#__PURE__*/react.createElement("div", {
    className: "oldie-modal__description"
  }, /*#__PURE__*/react.createElement("p", null, "Some features may not work as expected. For the best experience, try", ' ', /*#__PURE__*/react.createElement("a", {
    href: "https://www.google.com/chrome",
    rel: "noreferrer noopener",
    target: "_blank"
  }, "Chrome"), ",", ' ', /*#__PURE__*/react.createElement("a", {
    href: "https://www.mozilla.org/en-US/firefox/new",
    rel: "noreferrer noopener",
    target: "_blank"
  }, "Firefox"), ' ', "or", ' ', /*#__PURE__*/react.createElement("a", {
    href: "https://www.microsoft.com/en-us/windows/microsoft-edge",
    rel: "noreferrer noopener",
    target: "_blank"
  }, "Microsoft Edge"), ".")));
};
OldIEModal.propTypes = {
  onClose: (prop_types_default()).func.isRequired
};
/* harmony default export */ var OldIEModal_OldIEModal = (OldIEModal);
// EXTERNAL MODULE: ./components/Button/Button.js + 1 modules
var Button = __webpack_require__(12394);
;// CONCATENATED MODULE: ./components/PeacockModal/PeacockModal.js




const PeacockModal = _ref => {
  let {
    onClick,
    onClose
  } = _ref;
  return /*#__PURE__*/react.createElement(Modal/* default */.Z, {
    className: "peacock-modal",
    header: "You are leaving NBC.com.",
    closeModal: onClose,
    isCloseVisible: true
  }, /*#__PURE__*/react.createElement("div", {
    className: "peacock-modal__description"
  }, /*#__PURE__*/react.createElement("p", null, "Peacock is the new streaming service from NBCUniversal."), /*#__PURE__*/react.createElement(Button/* default */.Z, {
    text: "GO TO PEACOCK",
    onClick: onClick,
    className: "peacock-modal__button",
    modifier: "filled"
  }), /*#__PURE__*/react.createElement("a", {
    href: "",
    className: "peacock-modal__footer",
    onClick: onClose
  }, "Stay on NBC.com")));
};
PeacockModal.propTypes = {
  onClick: (prop_types_default()).func.isRequired,
  onClose: (prop_types_default()).func.isRequired
};
/* harmony default export */ var PeacockModal_PeacockModal = (PeacockModal);
// EXTERNAL MODULE: ./node_modules/react-modal/lib/index.js
var react_modal_lib = __webpack_require__(83253);
var lib_default = /*#__PURE__*/__webpack_require__.n(react_modal_lib);
// EXTERNAL MODULE: ./components/Image/Image.js
var Image = __webpack_require__(61737);
// EXTERNAL MODULE: ./utils/formatRelativePath.js
var formatRelativePath = __webpack_require__(68455);
// EXTERNAL MODULE: ./utils/scrollToElement.js
var scrollToElement = __webpack_require__(75499);
// EXTERNAL MODULE: ./utils/getBranchLiveLink.js
var getBranchLiveLink = __webpack_require__(56364);
// EXTERNAL MODULE: ./utils/getSmartTileProps.js
var getSmartTileProps = __webpack_require__(56600);
// EXTERNAL MODULE: ./utils/programmingTypes.js
var programmingTypes = __webpack_require__(20057);
;// CONCATENATED MODULE: ./components/LiveCalloutNotification/LiveCalloutNotification.js

function LiveCalloutNotification_defineProperty(e, r, t) { return (r = LiveCalloutNotification_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function LiveCalloutNotification_toPropertyKey(t) { var i = LiveCalloutNotification_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function LiveCalloutNotification_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




















const AKAMAI_POLICY = config/* default */.Z.get('akamai.policy');
const APP_NAME = config/* default */.Z.get('app.appName');
const OK_TEXT = 'OK';
class LiveCalloutNotification extends react.Component {
  constructor() {
    super(...arguments);
    LiveCalloutNotification_defineProperty(this, "state", {
      remainingDays: '00',
      remainingHours: '00',
      remainingMinutes: '00'
    });
    LiveCalloutNotification_defineProperty(this, "scrollTop", 0);
    LiveCalloutNotification_defineProperty(this, "trackClickAction", clickName => {
      var _this$props$analytics;
      return this.trackEvent({
        type: mParticle_constants.NAVIGATION,
        name: mParticle_constants.CLICK_ACTION,
        attributes: (0,getClickActionAttributes/* default */.Z)({
          [mParticle_constants.ITEM_CLICKED_NAME]: clickName,
          [mParticle_constants.CUSTOM_SHELF_TITLE]: (_this$props$analytics = this.props.analytics) === null || _this$props$analytics === void 0 ? void 0 : _this$props$analytics.shelfTitle
        })
      });
    });
    LiveCalloutNotification_defineProperty(this, "trackContentClick", clickName => {
      var _this$props$analytics2, _this$props$analytics3, _this$props$analytics4, _this$props$analytics5;
      const contentClickAttrs = (0,getContentClickAttributes/* default */.Z)({
        [mParticle_constants.ITEM_CLICKED_LEAGUE]: (_this$props$analytics2 = this.props.analytics) === null || _this$props$analytics2 === void 0 ? void 0 : _this$props$analytics2.league,
        [mParticle_constants.ITEM_CLICKED_SPORT]: (_this$props$analytics3 = this.props.analytics) === null || _this$props$analytics3 === void 0 ? void 0 : _this$props$analytics3.sport,
        [mParticle_constants.ITEM_CLICKED_NAME]: clickName,
        [mParticle_constants.CUSTOM_SHELF_POSITION]: this.props.analytics.shelfIndex,
        [mParticle_constants.CUSTOM_SHELF_TITLE]: this.props.analytics.shelfTitle,
        [mParticle_constants.CONTENT_POSITION]: this.props.analytics.itemIndex,
        [mParticle_constants.ITEM_CLICKED_TYPE]: (_this$props$analytics4 = this.props.analytics) === null || _this$props$analytics4 === void 0 ? void 0 : _this$props$analytics4.programType,
        [mParticle_constants.SHELF_MACHINE_NAME]: this.props.machineName,
        [mParticle_constants.SPONSOR]: (_this$props$analytics5 = this.props.analytics) === null || _this$props$analytics5 === void 0 ? void 0 : _this$props$analytics5.sponsorName
      });
      const smartTileAttrs = (0,getSmartTileProps/* default */.Z)(this.props);
      this.trackEvent({
        type: mParticle_constants.USER_CONTENT,
        name: mParticle_constants.CONTENT_CLICK,
        attributes: {
          ...contentClickAttrs,
          ...smartTileAttrs
        }
      });
    });
    LiveCalloutNotification_defineProperty(this, "trackEvent", _ref => {
      let {
        type,
        name,
        attributes = {}
      } = _ref;
      return mParticle/* default */.ZP.trackEvent({
        type,
        name,
        attributes
      });
    });
    LiveCalloutNotification_defineProperty(this, "isSingleLiveEvent", () => (0,programmingTypes/* isSingleLiveEventType */.RZ)(this.props.contentType));
    LiveCalloutNotification_defineProperty(this, "isSingleLiveStreamAvailable", () => {
      const {
        customerPlayableDate
      } = this.props;
      return this.isSingleLiveEvent() && customerPlayableDate && (0,dayjs/* default */.Z)().isSameOrAfter((0,dayjs/* default */.Z)(customerPlayableDate));
    });
    LiveCalloutNotification_defineProperty(this, "getCtaButtonText", () => {
      const {
        language,
        ctaText,
        isMobileWithApp
      } = this.props;
      const mobileText = (0,getTranslatedString/* default */.Z)(language, 'liveCallouts.watchOnApp', {
        brand: APP_NAME
      });
      return isMobileWithApp ? mobileText.toUpperCase() : ctaText;
    });
    LiveCalloutNotification_defineProperty(this, "getCloseButtonText", () => {
      const {
        dismissText
      } = this.props;
      const isSingleLiveEvent = this.isSingleLiveEvent();
      const isSingleLiveStreamAvailable = this.isSingleLiveStreamAvailable();
      const buttonText = isSingleLiveStreamAvailable || !isSingleLiveEvent ? dismissText : OK_TEXT;
      return buttonText;
    });
    LiveCalloutNotification_defineProperty(this, "onClick", () => {
      const {
        isMobileWithApp
      } = this.props;
      this.trackContentClick(this.getCtaButtonText());
      if (isMobileWithApp) {
        this.redirectToLive();
        return true;
      }
      if (this.isSingleLiveEvent()) {
        this.redirectToUpcoming();
        return true;
      }
      this.redirectToLive();
      return true;
    });
    LiveCalloutNotification_defineProperty(this, "onClose", () => {
      this.trackClickAction(this.getCloseButtonText());
      this.closeModal();
    });
    LiveCalloutNotification_defineProperty(this, "onExit", () => {
      this.trackClickAction('Close');
      this.closeModal();
    });
    LiveCalloutNotification_defineProperty(this, "getBackground", () => this.props.backgroundImage ? "".concat(this.props.backgroundImage).concat(this.props.backgroundImage.indexOf('?') > -1 ? '&' : '?', "impolicy=").concat(AKAMAI_POLICY, "&imwidth=640") : '');
    LiveCalloutNotification_defineProperty(this, "clearInterval", () => this.timer && clearInterval(this.timer));
    LiveCalloutNotification_defineProperty(this, "getRemainingTime", startTime => {
      const now = (0,dayjs/* default */.Z)();
      const programStartTime = dayjs/* default */.Z.utc(startTime).local();
      let diffMinutes = programStartTime.diff(now, 'minutes');
      const remainingDays = Math.floor(diffMinutes / (60 * 24));
      diffMinutes -= remainingDays * 24 * 60;
      const remainingHours = Math.floor(diffMinutes / 60);
      diffMinutes -= remainingHours * 60;
      const remainingMinutes = Math.floor(diffMinutes);
      return {
        remainingDays,
        remainingHours,
        remainingMinutes,
        totalRemainingSeconds: programStartTime.diff(now, 'seconds')
      };
    });
    LiveCalloutNotification_defineProperty(this, "updateCountdownTimer", () => {
      const {
        startTime,
        lastMinuteModalLifespan
      } = this.props;
      const {
        remainingDays,
        remainingHours,
        remainingMinutes,
        totalRemainingSeconds
      } = this.getRemainingTime(startTime);
      if (totalRemainingSeconds <= 60 - lastMinuteModalLifespan) {
        this.isSingleLiveEvent() ? this.redirectToUpcoming() : this.redirectToLive();
        return;
      }
      const days = "0".concat(remainingDays).substr(-2);
      const hours = "0".concat(remainingHours).substr(-2);
      const minutes = "0".concat(remainingMinutes).substr(-2);
      this.setState(prev => {
        const remainingData = {};
        if (prev.remainingDays !== days) {
          remainingData.remainingDays = days;
        }
        if (prev.remainingHours !== hours) {
          remainingData.remainingHours = hours;
        }
        if (prev.remainingMinutes !== minutes) {
          remainingData.remainingMinutes = minutes;
        }
        return remainingData;
      }, () => {
        if (!this.timer) {
          this.timer = setInterval(this.updateCountdownTimer, 1000);
        }
      });
    });
    LiveCalloutNotification_defineProperty(this, "redirectToLive", () => {
      const {
        router,
        streamAccessName,
        machineName,
        isMobile
      } = this.props;
      const {
        pid
      } = this.props;
      this.clearInterval();
      this.closeModal();
      if (isMobile) {
        window.location.href = (0,getBranchLiveLink/* default */.Z)();
      } else {
        router.push({
          pathname: '/live',
          query: {
            brand: machineName,
            callsign: streamAccessName
          },
          state: {
            pid
          }
        });
      }
    });
    LiveCalloutNotification_defineProperty(this, "redirectToUpcoming", () => {
      // TO DO: Once the upcoming page is created, redirect to relative path
      this.props.router.push({
        pathname: (0,formatRelativePath/* default */.Z)(this.props.relativePath) || '/'
      });
    });
    LiveCalloutNotification_defineProperty(this, "closeModal", () => {
      this.context.store.dispatch((0,navigation/* setLiveCalloutStatus */.J)(false, {}));
    });
    LiveCalloutNotification_defineProperty(this, "renderCountdownHeader", () => {
      const {
        countdownDayLabel,
        countdownHourLabel,
        countdownMinLabel
      } = this.props;
      const {
        remainingDays,
        remainingHours,
        remainingMinutes
      } = this.state;
      return /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__counter-wrapper"
      }, /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__counter-box"
      }, /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__title"
      }, remainingDays), /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__subtitle"
      }, countdownDayLabel)), /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__tick"
      }, ":"), /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__counter-box"
      }, /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__title"
      }, remainingHours), /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__subtitle"
      }, countdownHourLabel)), /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__tick"
      }, ":"), /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__counter-box"
      }, /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__title"
      }, remainingMinutes), /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__subtitle"
      }, countdownMinLabel)));
    });
    LiveCalloutNotification_defineProperty(this, "renderButtons", () => {
      const isSingleLiveEvent = this.isSingleLiveEvent();
      const isSingleLiveStreamAvailable = this.isSingleLiveStreamAvailable();
      const isSecondButtonVisible = !isSingleLiveEvent || isSingleLiveStreamAvailable;
      const ctaButtonText = this.getCtaButtonText();
      const closeButtonText = this.getCloseButtonText();
      return /*#__PURE__*/react.createElement("div", {
        className: "live-callout-notification__cta-wrapper"
      }, isSecondButtonVisible && /*#__PURE__*/react.createElement(Button/* default */.Z, {
        className: "live-callout-notification__button",
        text: ctaButtonText,
        onClick: this.onClick,
        modifier: "filled"
      }), /*#__PURE__*/react.createElement(Button/* default */.Z, {
        className: "live-callout-notification__button",
        text: closeButtonText,
        onClick: this.onClose,
        modifier: isSecondButtonVisible ? 'hollow' : 'filled'
      }));
    });
  }
  componentDidMount() {
    const {
      analytics = {},
      isMobile
    } = this.props;
    this.updateCountdownTimer();
    let modalName = analytics.modalName;
    if (this.isSingleLiveEvent()) {
      if (this.isSingleLiveStreamAvailable()) {
        modalName = this.getCtaButtonText();
      } else {
        modalName = OK_TEXT;
      }
    }
    mParticle/* default */.ZP.trackEvent({
      type: mParticle_constants.NAVIGATION,
      name: mParticle_constants.MODAL_LOAD,
      attributes: {
        [mParticle_constants.MODAL_NAME]: modalName,
        [mParticle_constants.MODAL_TYPE]: analytics.modalType
      }
    });
    setTimeout(() => {
      const ctaButton = document.querySelector('.live-callout-notification__cta-wrapper > button');
      ctaButton && ctaButton.focus();
    });
    this.scrollTop = (0,scrollToElement/* getMobileScroll */.JN)(isMobile);
  }
  componentWillUnmount() {
    this.clearInterval();
    (0,scrollToElement/* setMobileScroll */.Qf)(this.props.isMobile, this.scrollTop);
  }
  render() {
    const {
      description,
      isNotificationVisible,
      title
    } = this.props;
    return /*#__PURE__*/react.createElement((lib_default()), {
      isOpen: true,
      onRequestClose: this.onClose,
      className: classnames_default()('live-callout-notification', {
        'live-callout-notification--is-visible': isNotificationVisible
      }),
      overlayClassName: classnames_default()('live-callout-notification__overlay', {
        'live-callout-notification__overlay--is-visible': isNotificationVisible
      }),
      ariaHideApp: false,
      shouldCloseOnOverlayClick: false
    }, /*#__PURE__*/react.createElement("div", {
      className: "live-callout-notification__container"
    }, /*#__PURE__*/react.createElement("div", {
      className: "live-callout-notification__background"
    }, /*#__PURE__*/react.createElement(Image/* default */.Z, {
      alt: "",
      srcSet: {
        path: this.getBackground()
      },
      srcSetConfig: {
        minWidth: 320,
        maxWidth: 768
      }
    }), /*#__PURE__*/react.createElement("div", {
      className: "live-callout-notification__scrim"
    })), /*#__PURE__*/react.createElement("div", {
      className: "live-callout-notification__inner"
    }, this.renderCountdownHeader(), title && /*#__PURE__*/react.createElement("div", {
      className: "live-callout-notification__title"
    }, title), /*#__PURE__*/react.createElement("div", {
      className: "live-callout-notification__message"
    }, description), this.renderButtons())), /*#__PURE__*/react.createElement("button", {
      className: "live-callout-notification__exit",
      onClick: this.onExit,
      type: "button",
      "aria-label": (0,getTranslatedString/* default */.Z)(this.props.language, 'general.close')
    }, /*#__PURE__*/react.createElement("span", null)));
  }
}
LiveCalloutNotification_defineProperty(LiveCalloutNotification, "contextTypes", {
  store: prop_types_default().shape({
    dispatch: (prop_types_default()).func.isRequired
  })
});
LiveCalloutNotification.propTypes = {
  isNotificationVisible: (prop_types_default()).bool.isRequired,
  isMobile: (prop_types_default()).bool,
  isMobileWithApp: (prop_types_default()).bool,
  router: prop_types_default().shape({
    push: (prop_types_default()).func.isRequired
  }).isRequired,
  backgroundImage: (prop_types_default()).string,
  ctaText: (prop_types_default()).string,
  dismissText: (prop_types_default()).string,
  contentType: (prop_types_default()).string,
  countdownDayLabel: (prop_types_default()).string,
  countdownHourLabel: (prop_types_default()).string,
  countdownMinLabel: (prop_types_default()).string,
  customerPlayableDate: (prop_types_default()).string,
  description: (prop_types_default()).string,
  streamAccessName: (prop_types_default()).string,
  machineName: (prop_types_default()).string,
  startTime: (prop_types_default()).string,
  lastMinuteModalLifespan: (prop_types_default()).number,
  title: (prop_types_default()).string,
  language: (prop_types_default()).string,
  relativePath: (prop_types_default()).string,
  analytics: prop_types_default().shape({
    modalName: (prop_types_default()).string,
    modalType: (prop_types_default()).string,
    shelfIndex: (prop_types_default()).number,
    shelfTitle: (prop_types_default()).string,
    itemIndex: (prop_types_default()).number,
    league: (prop_types_default()).string,
    sport: (prop_types_default()).string,
    programType: (prop_types_default()).string,
    sponsorName: (prop_types_default()).string
  }),
  pid: (prop_types_default()).string
};
/* harmony default export */ var LiveCalloutNotification_LiveCalloutNotification = ((0,es/* withRouter */.EN)(LiveCalloutNotification));
;// CONCATENATED MODULE: ./components/OnboardingModal/OnboardingModal.js

function OnboardingModal_defineProperty(e, r, t) { return (r = OnboardingModal_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function OnboardingModal_toPropertyKey(t) { var i = OnboardingModal_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function OnboardingModal_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }













class OnboardingModal extends react.Component {
  constructor() {
    super(...arguments);
    OnboardingModal_defineProperty(this, "scrollTop", 0);
    OnboardingModal_defineProperty(this, "onClick", () => {
      const {
        router,
        onClose,
        language
      } = this.props;
      this.trackClickAction((0,getTranslatedString/* default */.Z)(language, 'onboardingModal.buttonMain'));
      onClose();
      router.push({
        pathname: '/onboarding/categories'
      });
    });
    OnboardingModal_defineProperty(this, "onClose", event => {
      const {
        onClose,
        language
      } = this.props;
      const textContent = get_default()(event, ['currentTarget', 'textContent']) || '';
      this.trackClickAction(textContent.length > 0 ? (0,getTranslatedString/* default */.Z)(language, 'onboardingModal.buttonCancel') : (0,getTranslatedString/* default */.Z)(language, 'onboardingModal.close'));
      onClose();
    });
    OnboardingModal_defineProperty(this, "trackClickAction", clickName => mParticle/* default */.ZP.trackEvent({
      type: mParticle_constants.NAVIGATION,
      name: mParticle_constants.CLICK_ACTION,
      attributes: {
        [mParticle_constants.PAGE_NAME]: 'Onboarding Modal',
        [mParticle_constants.PAGE_TYPE]: 'Onboarding',
        ...(0,getClickActionAttributes/* default */.Z)({
          [mParticle_constants.ITEM_CLICKED_NAME]: clickName
        })
      }
    }));
    OnboardingModal_defineProperty(this, "renderButtons", () => /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__cta-wrapper"
    }, /*#__PURE__*/react.createElement("span", null, "\xA0"), /*#__PURE__*/react.createElement(Button/* default */.Z, {
      className: "onboarding-modal__button",
      text: (0,getTranslatedString/* default */.Z)(this.props.language, 'onboardingModal.buttonMain'),
      onClick: this.onClick,
      modifier: "filled"
    }), /*#__PURE__*/react.createElement(Button/* default */.Z, {
      className: "onboarding-modal__button",
      text: (0,getTranslatedString/* default */.Z)(this.props.language, 'onboardingModal.buttonCancel'),
      onClick: this.onClose,
      modifier: "hollow"
    })));
    OnboardingModal_defineProperty(this, "renderBrowser", () => /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__browser onboarding-modal__browser--fade-out"
    }, /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__browser-top"
    }, /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__browser-cicle"
    }), /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__browser-cicle"
    }), /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__browser-cicle"
    })), /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__browser-bottom"
    })));
  }
  componentDidMount() {
    const {
      isMobile
    } = this.props;
    setTimeout(() => {
      const ctaButton = document.querySelector('.live-callout-notification__cta-wrapper > button');
      ctaButton && ctaButton.focus();
    });
    this.scrollTop = (0,scrollToElement/* getMobileScroll */.JN)(isMobile);
    mParticle/* default */.ZP.trackEvent({
      type: mParticle_constants.NAVIGATION,
      name: mParticle_constants.MODAL_LOAD,
      attributes: {
        'Modal Name': 'Onboarding Modal',
        'Modal Type': 'Onboarding'
      }
    });
    cookies_default().set('onboardingModalStarted', true);
  }
  componentWillUnmount() {
    (0,scrollToElement/* setMobileScroll */.Qf)(this.props.isMobile, this.scrollTop);
  }
  render() {
    const {
      language,
      isModalVisible
    } = this.props;
    return /*#__PURE__*/react.createElement((lib_default()), {
      isOpen: true,
      onRequestClose: this.props.onClose,
      className: classnames_default()('onboarding-modal', {
        'onboarding-modal--is-visible': isModalVisible
      }),
      overlayClassName: classnames_default()('onboarding-modal__overlay', {
        'onboarding-modal__overlay--is-visible': isModalVisible
      }),
      ariaHideApp: false,
      shouldCloseOnOverlayClick: false
    }, /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__container"
    }, /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__wrapper"
    }, /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__header"
    }, this.renderBrowser(), /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__pointer"
    })), /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__star"
    }, /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__star onboarding-modal__star-large"
    }), /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__star onboarding-modal__star-medium"
    }))), /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__inner"
    }, /*#__PURE__*/react.createElement("div", {
      className: "onboarding-modal__description",
      "aria-hidden": "true"
    }, (0,getTranslatedString/* default */.Z)(language, 'onboardingModal.mainText')), this.renderButtons())), /*#__PURE__*/react.createElement("button", {
      className: "onboarding-modal__exit",
      onClick: this.onClose,
      type: "button",
      "aria-label": (0,getTranslatedString/* default */.Z)(language, 'onboardingModal.close')
    }, /*#__PURE__*/react.createElement("span", null)));
  }
}
OnboardingModal_defineProperty(OnboardingModal, "contextTypes", {
  store: prop_types_default().shape({
    dispatch: (prop_types_default()).func.isRequired
  })
});
OnboardingModal.propTypes = {
  isModalVisible: (prop_types_default()).bool.isRequired,
  isMobile: (prop_types_default()).bool,
  onClose: (prop_types_default()).func.isRequired,
  language: (prop_types_default()).string,
  router: prop_types_default().shape({
    push: (prop_types_default()).func.isRequired
  }).isRequired
};
/* harmony default export */ var OnboardingModal_OnboardingModal = ((0,es/* withRouter */.EN)(OnboardingModal));
// EXTERNAL MODULE: ./node_modules/@iterable/web-sdk/index.js
var web_sdk = __webpack_require__(11766);
// EXTERNAL MODULE: ./components/IterableInBrowser/getJwt.js
var getJwt = __webpack_require__(25663);
;// CONCATENATED MODULE: ./components/IterableInBrowser/IterableInBrowser.js








const ITERABLE_SDK_KEY = config/* default */.Z.get('iterable.sdk.apiKey');
const ITERABLE_PACKAGE_DOMAIN = config/* default */.Z.get('iterable.sdk.packageDomain');
const USE_EMAIL = config/* default */.Z.get('iterable.sdk.idField') === 'email';
const REQUESTED_MESSAGES = 20;
const PAGE_VIEW_TIMEOUT = 10000; // 10 seconds

const jwtGenerator = _ref => {
  let {
    userID,
    email
  } = _ref;
  return (0,getJwt/* default */.Z)(userID, email);
};
const IterableInBrowser = _ref2 => {
  let {
    isMobile = false,
    userId,
    email,
    onError,
    onMessages,
    onStart
  } = _ref2;
  const currentUserId = (0,react.useRef)();
  const currentEmail = (0,react.useRef)();
  const iterableCallbacks = (0,react.useRef)();
  const pageViewTimer = (0,react.useRef)();
  const [isIterableReady, setIterableReady] = (0,react.useState)(false);
  const [isPageViewReceived, setPageViewReceived] = (0,react.useState)(false);
  const initializeSDK = async () => {
    const {
      setEmail,
      setUserID
    } = await (0,web_sdk.initialize)(ITERABLE_SDK_KEY, jwtGenerator);
    iterableCallbacks.current = {
      setEmail,
      setUserID
    };
    setIterableReady(true);
  };
  const getMessages = async () => {
    var _iterableCallbacks$cu;
    const {
      setEmail,
      setUserID
    } = (_iterableCallbacks$cu = iterableCallbacks.current) !== null && _iterableCallbacks$cu !== void 0 ? _iterableCallbacks$cu : {};
    if (!setEmail || !setUserID) {
      throw new Error('Iterable is not initialized!');
    }
    const deviceType = isMobile ? 'mobile' : 'desktop';
    const packageName = "".concat(deviceType, ".").concat(ITERABLE_PACKAGE_DOMAIN);
    const {
      request,
      triggerDisplayMessages
    } = (0,web_sdk.getInAppMessages)({
      count: REQUESTED_MESSAGES,
      packageName,
      closeButton: {
        color: '#ffffff'
      }
    }, {
      display: 'deferred'
    });
    try {
      var _response$data$inAppM, _response$data;
      if (onStart) {
        onStart();
      }
      if (USE_EMAIL) {
        await setEmail(currentEmail.current);
      } else {
        await setUserID(currentUserId.current);
      }

      // retain a reference to the user ID at this point in time - since the user ID could change by the time Iterable responds
      const requestedUser = currentUserId.current;
      if (USE_EMAIL) {
        await (0,web_sdk.updateUser)({
          dataFields: {
            userId: requestedUser
          },
          preferUserId: true
        });
      }
      const response = await request();
      if (requestedUser !== currentUserId.current) {
        // this is a stale request for a previous user ID
        // the user has logged in/out since the request started, so we should discard this data
        return;
      }
      const allMessages = (_response$data$inAppM = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.inAppMessages) !== null && _response$data$inAppM !== void 0 ? _response$data$inAppM : [];
      const messages = (0,web_sdk.sortInAppMessages)((0,web_sdk.filterHiddenInAppMessages)(allMessages));
      const modal = (messages === null || messages === void 0 ? void 0 : messages.length) > 0 ? messages[0] : null;
      if (onMessages) {
        const callbackMessages = modal ? [modal] : [];
        onMessages(requestedUser, callbackMessages, triggerDisplayMessages);
      }
    } catch (err) {
      park_logger_default().error(err);
      if (onError) {
        onError(err);
      }
    }
  };
  const handlePageView = () => {
    if (pageViewTimer.current) {
      // clear any timeouts in flight to prevent a double trigger
      clearTimeout(pageViewTimer.current);
      pageViewTimer.current = null;
    }
    setPageViewReceived(true);
  };
  (0,react.useEffect)(() => {
    initializeSDK();

    // defer loading Iterable in-app messages until the first mParticle page view has occurred and been uploaded
    document.addEventListener(mParticle_constants.GENERETIC_PAGE_VIEW, handlePageView);
    // if the mParticle events never fire, attempt to load Iterable anyway after a set amount of time
    pageViewTimer.current = setTimeout(handlePageView, PAGE_VIEW_TIMEOUT);
    return () => {
      document.removeEventListener(mParticle_constants.GENERETIC_PAGE_VIEW, handlePageView);
      pageViewTimer.current && clearTimeout(pageViewTimer.current);
    };
  }, []);
  (0,react.useEffect)(() => {
    // check that the user ID is set and that it is at not -1, 0, or 1
    if (typeof userId === 'undefined' || Math.abs(parseInt(userId, 10)) <= 1 || isIterableReady !== true || isPageViewReceived !== true) {
      return;
    }
    if (currentUserId.current !== userId || currentEmail.current !== email) {
      currentUserId.current = userId;
      currentEmail.current = email;
      if (!email) {
        currentEmail.current = "".concat(userId, "@placeholder.email");
      }
      getMessages();
    }
  }, [userId, email, isIterableReady, isPageViewReceived]);
  return null;
};
IterableInBrowser.propTypes = {
  isMobile: (prop_types_default()).bool,
  userId: (prop_types_default()).string,
  onError: (prop_types_default()).func,
  onMessages: (prop_types_default()).func,
  onStart: (prop_types_default()).func
};
/* harmony default export */ var IterableInBrowser_IterableInBrowser = (IterableInBrowser);
// EXTERNAL MODULE: ./lib/identity.js + 1 modules
var identity = __webpack_require__(62899);
// EXTERNAL MODULE: ./utils/hasSessionStorage.js
var hasSessionStorage = __webpack_require__(47475);
;// CONCATENATED MODULE: ./components/VideoPlayerV2/utils/getPreferencesFromStorage.js




const getPreferencesFromStorage = () => {
  try {
    var _sessionStorage;
    const stringPreferences = (0,isClientSide/* default */.Z)() && (0,hasSessionStorage/* default */.Z)() && ((_sessionStorage = sessionStorage) === null || _sessionStorage === void 0 ? void 0 : _sessionStorage.getItem(getPlayerControlSettings/* STORAGE_KEYS */.I.configuration));
    if (!stringPreferences) {
      return null;
    }
    return JSON.parse(stringPreferences);
  } catch (err) {
    park_logger_default().error(err);
    return null;
  }
};
/* harmony default export */ var utils_getPreferencesFromStorage = (getPreferencesFromStorage);
// EXTERNAL MODULE: ./lib/friendship.js + 29 modules
var friendship = __webpack_require__(67641);
// EXTERNAL MODULE: ./utils/isDayZeroUser.js
var isDayZeroUser = __webpack_require__(36849);
;// CONCATENATED MODULE: ./lib/userInteractions-api.js








const ONEAPP_FLAG = config/* default */.Z.get('API.friendship.oneApp');
const LAUNCHDARKLY_FLAG = config/* default */.Z.get('API.friendship.launchDarkly');
const APP = config/* default */.Z.get('API.friendship.appName');
const USER_INTERACTIONS_QUERY_NAME = 'userInteractions';
const USER_FAVORITES_QUERY_NAME = 'userFavorites';
const EXCLUSIVE_TYPES = {
  FAVORITES: 'favorites',
  WATCHES: 'watches'
};
function getUserInteractionVariables() {
  let isPersonalizationEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  return mParticle/* default */.ZP.getId().then(mpId => {
    const variables = {
      userId: isPersonalizationEnabled ? mpId : '0',
      device: 'web',
      platform: 'web',
      language: 'en',
      oneApp: ONEAPP_FLAG,
      ld: LAUNCHDARKLY_FLAG,
      app: APP,
      isDayZero: (0,isDayZeroUser/* isDayZero */.XM)(),
      appVersion: (0,friendship/* getAppVersion */.Sf)(true)
    };
    if (mpId && cookies_default().get('onboardingUser') === mpId) {
      // if there is an onboarding user cookie that matches the current mParticle ID, assume the user
      // selected favorites in the onboarding flow
      variables.isDayZero = false;
    }
    return variables;
  });
}
async function fetchUserInteractions(isPersonalizationEnabled) {
  let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : USER_INTERACTIONS_QUERY_NAME;
  const variables = await getUserInteractionVariables(isPersonalizationEnabled);
  return (0,friendship/* gql */.Ps)({
    query,
    variables
  });
}
function parseWatches() {
  let userWatches = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return userWatches.reduce((parsed, watch) => {
    const videoId = watch === null || watch === void 0 ? void 0 : watch.videoId;
    if (videoId) {
      var _watch$percentViewed;
      parsed[videoId] = (_watch$percentViewed = watch === null || watch === void 0 ? void 0 : watch.percentViewed) !== null && _watch$percentViewed !== void 0 ? _watch$percentViewed : 0;
    }
    return parsed;
  }, {});
}
function parseFavorites() {
  let userFavorites = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return userFavorites.reduce((parsed, favorite) => {
    const titleId = favorite === null || favorite === void 0 ? void 0 : favorite.titleId;
    if (titleId && favorite !== null && favorite !== void 0 && favorite.id) {
      parsed[titleId] = {
        favoriteId: favorite.id,
        title: favorite === null || favorite === void 0 ? void 0 : favorite.title
      };
    }
    return parsed;
  }, {});
}
async function loadUserInteractions(dispatch, isPersonalizationEnabled, exclusiveType) {
  var _data$data;
  let query = USER_INTERACTIONS_QUERY_NAME;
  let isWatchesIncluded = true;
  let isFavoritesIncluded = true;
  if (exclusiveType === EXCLUSIVE_TYPES.FAVORITES) {
    query = USER_FAVORITES_QUERY_NAME;
    isWatchesIncluded = false;
  } else if (exclusiveType === EXCLUSIVE_TYPES.WATCHES) {
    isFavoritesIncluded = false;
  }
  const {
    data
  } = await fetchUserInteractions(isPersonalizationEnabled, query);
  const {
    userWatches,
    userFavorites
  } = (_data$data = data === null || data === void 0 ? void 0 : data.data) !== null && _data$data !== void 0 ? _data$data : {};
  if (isWatchesIncluded) {
    const watches = parseWatches(userWatches !== null && userWatches !== void 0 ? userWatches : []);
    dispatch((0,actions_watches/* bulkSetWatches */.h3)(watches));
  }
  if (isFavoritesIncluded) {
    const favorites = parseFavorites(userFavorites !== null && userFavorites !== void 0 ? userFavorites : []);
    dispatch((0,actions_favorites/* bulkSetFavorites */.Fo)(favorites));
  }
  dispatch((0,client/* setLastUserInteractionsChange */.ML)());
  return {
    data
  };
}
// EXTERNAL MODULE: ./lib/patterns/pllContainer/pllLoadSteps.js
var pllLoadSteps = __webpack_require__(87096);
;// CONCATENATED MODULE: ./components/UserInteractionsSync/UserInteractionsSync.js








// SYNC_FREQUENCY is arbitrary; it is the frequency that we should try to sync
// the userInteractions. This has not been defined by F2, but should not be less than
// the MIN_SYNC_WINDOW.
const SYNC_FREQUENCY = 5 * 60 * 1000; // 5 minutes

// MIN_SYNC_WINDOW is less arbitrary, since it is minimum amount of time we need
// to wait after a watch/favorites change has been POSTed to Park before refetching F2.
// F2 needs time to sync from Park, probably should never be less than 30 sec
const MIN_SYNC_WINDOW = 60 * 1000; // 1 minute

/*
 * Periodically refectch userInteractions (favorites, watches) to ensure
 * the local Redux store does not deviate too far from what is stored on F2/Park.
 */
const UserInteractionsSync = _ref => {
  let {
    dispatch,
    isPersonalizationEnabled
  } = _ref;
  const [nextUpdate, setNextUpdate] = (0,react.useState)(0);
  const timerRef = (0,react.useRef)();
  (0,react.useEffect)(() => () => timerRef.current && clearTimeout(timerRef.current), []);
  if (!(0,isClientSide/* default */.Z)()) {
    return null;
  }
  const scheduleSync = duration => {
    // cancel any existing scheduled syncs
    timerRef.current && clearTimeout(timerRef.current);
    timerRef.current = setTimeout(() => {
      // load the latest watches and favorites
      loadUserInteractions(dispatch, isPersonalizationEnabled);
      // schedule the next update for 5 minutes from now
      scheduleSync(SYNC_FREQUENCY);
    }, duration);
    setNextUpdate(Date.now() + duration);
  };
  if (nextUpdate === 0) {
    scheduleSync(SYNC_FREQUENCY);
    return null;
  }
  const remainingTime = nextUpdate - Date.now();
  if (remainingTime < MIN_SYNC_WINDOW) {
    // We must wait at least 1 minute after any user interactions change before refetching from F2.
    // This is to ensure that there is enough time for changes to propagate from Park API to F2.
    // If a user interaction happens with less than 1 minute to the next resync, cancel it and reschedule
    // for a minute from now.
    scheduleSync(MIN_SYNC_WINDOW);
  }
  return null;
};
UserInteractionsSync.propTypes = {
  dispatch: (prop_types_default()).func,
  isPersonalizationEnabled: (prop_types_default()).bool
};
/* harmony default export */ var UserInteractionsSync_UserInteractionsSync = ((0,react_redux_es/* connect */.$j)(state => {
  var _state$client$lastUse, _state$client;
  return {
    isPersonalizationEnabled: (0,checkIsPersonalizationEnabled/* default */.Z)(state),
    // we won't read the lastUserInteractionsChange prop but by passing it through as a prop,
    // it will trigger a re-render (and run the remainingTime check) whenever a userInteraction changes
    lastUserInteractionsChange: (_state$client$lastUse = state === null || state === void 0 ? void 0 : (_state$client = state.client) === null || _state$client === void 0 ? void 0 : _state$client.lastUserInteractionsChange) !== null && _state$client$lastUse !== void 0 ? _state$client$lastUse : 0
  };
})(UserInteractionsSync));
;// CONCATENATED MODULE: ./applications/responsive/ResponsiveApp/ResponsiveApp.js
function ResponsiveApp_extends() { return ResponsiveApp_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, ResponsiveApp_extends.apply(null, arguments); }

function ResponsiveApp_defineProperty(e, r, t) { return (r = ResponsiveApp_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function ResponsiveApp_toPropertyKey(t) { var i = ResponsiveApp_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function ResponsiveApp_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable camelcase */




































































const ResponsiveApp_IDENTITY_ENABLED = config/* default */.Z.get('identity.enabled');
const MVPD_BRAND = config/* default */.Z.get('adobePass.requestorId');
const MVPD_INSTANCE = config/* default */.Z.get('adobePass.instance');
const MVPD_DEFAULT_PLATFORM = config/* default */.Z.get('API.nbc.mvpdDefaultPlatform');
const BRANDS = config/* default */.Z.get('brands');
const COOKIE_DOMAIN = config/* default */.Z.get('app.cookieDomain');
const PEACOCK_URL = config/* default */.Z.get('peacock.url');
const ResponsiveApp_APP = config/* default */.Z.get('app');
const ResponsiveApp_LAUNCHDARKLY_FLAG = config/* default */.Z.get('API.friendship.launchDarkly');
const SERVER_FEATURE_FLAGS_QUERY_NAME = 'serverFeatureFlags';
class ResponsiveApp extends react.Component {
  constructor(_props) {
    var _this;
    super(_props);
    _this = this;
    ResponsiveApp_defineProperty(this, "setupBranchListeners", () => {
      window.branch.addListener('didShowJourney', (event, data) => this.trackBranchJourney(event, data));
      window.branch.addListener('didClickJourneyCTA', (event, data) => this.trackBranchJourney(event, data));
      window.branch.addListener('didClickJourneyClose', (event, data) => this.trackBranchJourney(event, data));
    });
    ResponsiveApp_defineProperty(this, "trackBranchJourney", (event, data) => {
      var _this$props$analytics, _this$props$analytics2;
      switch (event) {
        case 'didShowJourney':
          this.context.store.dispatch({
            type: actionTypes/* STORE_BRANCH */.s4,
            branch: data
          });
          mParticle/* default */.ZP.trackEvent({
            name: 'Branch Journey',
            type: 'Navigation',
            attributes: {
              Show: this.props.seriesShortTitle || 'None',
              Season: this.props.seasonNumber || 'None',
              Brand: get_default()(this.props.analytics, 'brand.title', 'None')
            }
          });
          break;
        case 'didClickJourneyCTA':
        case 'didClickJourneyClose':
          mParticle/* default */.ZP.trackEvent({
            name: mParticle_constants.CLICK_ACTION,
            type: mParticle_constants.NAVIGATION,
            attributes: (0,getClickActionAttributes/* default */.Z)({
              [mParticle_constants.ITEM_CLICKED_NAME]: event === 'didClickJourneyCTA' ? 'Watch' : 'Close',
              [mParticle_constants.CUSTOM_SHELF_TITLE]: 'Branch Journey',
              [mParticle_constants.BRAND]: (_this$props$analytics = this.props.analytics) === null || _this$props$analytics === void 0 ? void 0 : (_this$props$analytics2 = _this$props$analytics.brand) === null || _this$props$analytics2 === void 0 ? void 0 : _this$props$analytics2.title
            })
          });
          break;
        default:
      }
    });
    ResponsiveApp_defineProperty(this, "initOlyConcierge", () => {
      const isConciergePage = ['/', '/paris2024'].includes(this.props.location.pathname);
      const shouldInjectConcierge = this.props.isConciergeEnabled && isConciergePage && !this.state.isConciergeInjected && (0,isClientSide/* default */.Z)();
      if (shouldInjectConcierge) {
        this.injectOlyConciergeScript();
      }
      this.setState({
        isOlyConciergeVisible: isConciergePage
      });
    });
    ResponsiveApp_defineProperty(this, "injectOlyConciergeScript", () => {
      const script = document.createElement('script');
      script.src = config/* default */.Z.get('API.concierge.scriptUrl');
      script.async = true;
      document.body.appendChild(script);
      this.setState({
        isConciergeInjected: true
      });
    });
    ResponsiveApp_defineProperty(this, "isNewsHidden", () => {
      const newsId = get_default()(this.props, 'breakingNews.news.id');
      return newsId && (0,hasLocalStorage/* default */.Z)() ? (localStorage.getItem('hideNews') || '').match(newsId) : document.cookie.match("hideNews=".concat(newsId));
    });
    // Helper function to determine if video pathname or playlist video changed.
    // Playlist videos have the same URL such as /playlist/betest-collection-of-playlist-videos-feb10
    // so we need to check if the search query changed to determine when a user changed between videos.
    ResponsiveApp_defineProperty(this, "hasPathChanged", props => this.props.location.pathname !== props.location.pathname || get_default()(this.props.location, 'search') !== get_default()(props.location, 'search'));
    ResponsiveApp_defineProperty(this, "setGeolocation", _ref => {
      let {
        adobeMvpdId,
        isMVPDLogout
      } = _ref;
      if (isMVPDLogout) {
        this.context.store.dispatch((0,client/* fetchGeoLocation */.ng)({
          brand: 'nbc'
        }));
        return;
      }
      Promise.all([this.context.store.dispatch((0,client/* fetchGeoLocation */.ng)({
        brand: 'nbc',
        adobeMvpdId
      })), this.context.store.dispatch((0,client/* fetchGeoLocation */.ng)({
        brand: 'telemundo'
      })), this.context.store.dispatch((0,client/* fetchGeoLocation */.ng)({
        brand: 'usa'
      }))]).then(() => {
        var _this$context$store$g, _updatedState$client$, _updatedState$client, _updatedState$client$2, _updatedState$client$3;
        const updatedState = (_this$context$store$g = this.context.store.getState()) !== null && _this$context$store$g !== void 0 ? _this$context$store$g : {};
        const usaChannel = (_updatedState$client$ = updatedState === null || updatedState === void 0 ? void 0 : (_updatedState$client = updatedState.client) === null || _updatedState$client === void 0 ? void 0 : (_updatedState$client$2 = _updatedState$client.geo) === null || _updatedState$client$2 === void 0 ? void 0 : (_updatedState$client$3 = _updatedState$client$2.usa) === null || _updatedState$client$3 === void 0 ? void 0 : _updatedState$client$3.channel) !== null && _updatedState$client$ !== void 0 ? _updatedState$client$ : '';
        const nationalBroadcastType = usaChannel.includes('west') ? 'westCoast' : 'eastCoast';
        this.context.store.dispatch((0,client/* setNationalBroadcastType */.oW)(nationalBroadcastType));
        this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* GEO */.gW));
      });
    });
    ResponsiveApp_defineProperty(this, "fetchGlobalNav", () => mParticle/* default */.ZP.getId().then(userId => {
      this.context.store.dispatch((0,navigation/* fetchGlobalNavigation */.L_)(userId));
    }));
    ResponsiveApp_defineProperty(this, "setVideoHistory", () => {
      const state = this.context.store.getState();
      if (state.video) {
        this.context.store.dispatch((0,client/* setNextVideo */.Ei)(state.video.showName, state.video.seasonNumber));
      } else {
        this.context.store.dispatch((0,client/* clearNextVideo */.I3)());
      }
    });
    ResponsiveApp_defineProperty(this, "isLivePage", () => get_default()(this.props.children, 'type.displayName') === 'Connect(LivePage)');
    /**
     * Returns temp pass authentication checked status.
     *
     * @param {boolean} isTempPassMvpd Flag to check if mvpd is temp pass
     * @param {boolean} isAuthenticated Flag to check if user is authenticated
     *
     * @returns {boolean} isTempPassAuthenticationChecked
     */
    ResponsiveApp_defineProperty(this, "getTempPassAuthnCheckedStatus", _ref2 => {
      let {
        isTempPassMvpd,
        isAuthenticated
      } = _ref2;
      // Always return temp pass is checked if mvpd is not temp pass.
      let isTempPassAuthenticationChecked = !isTempPassMvpd;
      if (isTempPassMvpd && !isAuthenticated) {
        // We bypass first time AdobePass authentication check for temp pass
        // made on load and return temp pass is not checked (false)
        // because data is not correct in one case.
        // After that, we request authorization in the video page,
        // causing "onAuthenticationStatus" callback gets called
        // a second time with reliable data.
        // Example: AdobePass will return false for
        // a previously expired temp pass even if it was reset.
        isTempPassAuthenticationChecked = !this.isAdobeAuthFirstTime;
      }
      return isTempPassAuthenticationChecked;
    });
    ResponsiveApp_defineProperty(this, "setupAccessEnabler", () => {
      AdobePassAccessEnabler/* default */.Z.setup({
        entitlementLoaded: () => {},
        onAuthenticationError: authnError => this.context.store.dispatch((0,adobePass/* adobePassAuthnFailure */.LL)({
          authnError
        })),
        onAuthenticationStatus: async (isAuthenticated, mvpd_id) => {
          var _mvpd_id$toLowerCase;
          const isTempPassMvpd = mvpd_id === null || mvpd_id === void 0 ? void 0 : (_mvpd_id$toLowerCase = mvpd_id.toLowerCase()) === null || _mvpd_id$toLowerCase === void 0 ? void 0 : _mvpd_id$toLowerCase.includes(videoPage_constants/* TEMP_PASS */.G8.toLowerCase());
          const isTempPassAuthenticated = isTempPassMvpd && isAuthenticated;
          const isTempPassAuthenticationChecked = this.getTempPassAuthnCheckedStatus({
            isTempPassMvpd,
            isAuthenticated
          });
          if (isTempPassAuthenticated) {
            var _this$props$launchDar, _this$props$launchDar2;
            const TTL_AUTHN = await AdobePassAccessEnabler/* default */.Z.getMetadata('TTL_AUTHN');
            mParticle/* default */.ZP.setUserAttributes({
              [mParticle_constants.USER_MVPD]: mvpd_id || mParticle_constants.NONE,
              [mParticle_constants.USER_REGISTRATION_REFERRER]: 'TempPass',
              ["".concat(ResponsiveApp_APP.name.toLowerCase(), " Feature Flags")]: "tempPass::".concat((_this$props$launchDar = this.props.launchDarkly.client) === null || _this$props$launchDar === void 0 ? void 0 : (_this$props$launchDar2 = _this$props$launchDar.tempPass) === null || _this$props$launchDar2 === void 0 ? void 0 : _this$props$launchDar2.bucket) || 0
            });
            return this.context.store.dispatch((0,adobePass/* adobePassAuthnStatus */.IL)({
              isAuthenticated,
              isTempPassAuthenticated,
              mvpd: {
                mvpd: mvpd_id
              },
              tempPassExpiration: TTL_AUTHN,
              isTempPassAuthenticationChecked: true,
              tempPassName: mvpd_id
            }));
          }
          if (isAuthenticated) {
            (0,nbc_api/* default */.Z)('localized-mvpd/entitlements', {
              mvpd: mvpd_id,
              platform: MVPD_DEFAULT_PLATFORM,
              brand: MVPD_BRAND,
              instance: MVPD_INSTANCE
            }).then(response => {
              const mvpd = get_default()(response, ['data', 'mvpdWhitelist', '0']);
              if (mvpd) {
                // Check "preflight" authorization for the following brand resources.
                AdobePassAccessEnabler/* default */.Z.checkPreauthorizedResources(config/* default */.Z.get('adobePass.brandsToRequest'));
                AdobePassAccessEnabler/* default */.Z.getMetadata(['upstreamUserID', 'hba_status', 'maxRating', 'language']).then(_ref3 => {
                  let [upstreamUserID, hbaStatus, maxRating, language] = _ref3;
                  const maxRatingValue = maxRating ? "".concat(maxRating.MPAA, " ").concat(maxRating.VCHIP) : 'None';
                  mParticle/* default */.ZP.setUserAttributes({
                    'Adobe Upstream ID': upstreamUserID || 'None',
                    'Adobe HBA Status': hbaStatus || 'None',
                    'Adobe Max Rating': maxRatingValue,
                    'Adobe Language Preference': language || 'None'
                  });
                  this.context.store.dispatch((0,adobePass/* adobePassSetMetadata */._r)({
                    upstreamUserID,
                    hbaStatus,
                    maxRating: maxRatingValue,
                    language
                  }));
                });
                // Explicity check for false as we do not want to proceed when null.
                // This is to ensure the event is not tracked for initial page loads.
                if (this.props.adobePass.isAuthenticated === false) {
                  const entityAnalytics = get_default()(this.props.location, 'state.entityAnalytics', {});
                  const referrer = this.isLivePage() ? 'Live Stream' : entityAnalytics['Video ID'] ? 'VOD Asset' : get_default()(this.props.location, 'state.referrer', 'MVPD Login');
                  mParticle/* default */.ZP.setUserAttributes({
                    'User MVPD': mvpd.mvpd,
                    'User MVPD Referrer': referrer
                  });
                  getAuthNExpiration().then(expires => {
                    mParticle/* default */.ZP.trackEvent({
                      type: mParticle_constants.USER_PREFERENCE,
                      name: mParticle_constants.AUTHENTICATION_SUCCESS,
                      attributes: {
                        [mParticle_constants.PAGE_NAME]: 'MVPD Picker',
                        [mParticle_constants.PAGE_TYPE]: 'Auth Funnel',
                        [mParticle_constants.REGISTRATION_REFERRER]: referrer,
                        [mParticle_constants.MVPD_EXPIRATION_DATE]: expires || mParticle_constants.NONE,
                        [mParticle_constants.VIDEO_ID]: this.props.params.videoId || mParticle_constants.NONE,
                        [mParticle_constants.AUTH_SSO]: mParticle_constants.NONE,
                        [mParticle_constants.GEO_ZIP]: this.props.client.geo.geoZip || mParticle_constants.NONE,
                        ...entityAnalytics
                      }
                    });
                  });
                }
                this.context.store.dispatch((0,adobePass/* adobePassAuthnStatus */.IL)({
                  isAuthenticated,
                  mvpd,
                  errorMappings: get_default()(response, ['data', 'globalSettings', 'adobePassErrorMappings'])
                }));
              }
            });
          } else {
            const {
              isAuthenticated: userIsAuthenticated
            } = this.props.adobePass;
            // Check props to ensure user did not sign in while logout method was running.
            if (!userIsAuthenticated) {
              // Resets user MVPD after user has signed out.
              mParticle/* default */.ZP.setUserAttributes({
                'User MVPD': isTempPassMvpd ? mvpd_id : 'Unauthenticated',
                'User MVPD Referrer': 'None',
                'User Allowed Brands': 'None',
                'User Not Allowed Brands': 'None',
                'Adobe Upstream ID': 'None',
                'Adobe HBA Status': 'None',
                'Adobe Max Rating': 'None',
                'Adobe Language Preference': 'None'
              });
              this.context.store.dispatch((0,adobePass/* adobePassAuthnStatus */.IL)({
                isAuthenticated,
                isTempPassAuthenticated,
                isTempPassAuthenticationChecked,
                mvpd: null,
                ...(isTempPassMvpd && {
                  tempPassName: mvpd_id
                })
              }));
            }
          }
          this.isAdobeAuthFirstTime = false;
          return null;
        },
        onLogout: () => {
          this.context.store.dispatch((0,adobePass/* adobePassAuthnLogout */.UG)());
          this.setGeolocation({
            isMVPDLogout: true
          });
        },
        onLogin: (providerId, redirect) => {
          const provider = this.props.adobePass.mvpds && this.props.adobePass.mvpds[providerId];
          AdobePassAccessEnabler/* default */.Z.checkPopupAndLogin(provider, redirect);
        },
        onSetConfig: mvpdConfig => {
          const mvpds = mvpdConfig.reduce((configItem, mvpd) => {
            configItem[mvpd.id] = {
              ...mvpd
            };
            return configItem;
          }, {});
          this.context.store.dispatch((0,adobePass/* adobePassSetConfig */.x0)({
            mvpds
          }));
        },
        onCreateIFrame: () => !this.isLivePage() ? this.context.store.dispatch((0,adobePass/* adobePassIframeCreate */.MB)()) : null,
        onDestroyIFrame: () => !this.isLivePage() ? this.context.store.dispatch((0,adobePass/* adobePassIframeDestroy */.MM)()) : null,
        onPreauthorizedResources: resources => {
          const brands = (0,getAllowedBrands/* default */.Z)(resources);
          mParticle/* default */.ZP.setUserAttributes({
            'User Allowed Brands': brands.allowedBrands || 'None',
            'User Not Allowed Brands': brands.notAllowedBrands || 'None'
          });
          this.context.store.dispatch((0,adobePass/* adobePassSetBrands */.F9)(resources));
        }
      });
    });
    ResponsiveApp_defineProperty(this, "onMainClick", () => {
      // Close open navigation items when clicking anywhere within <main />.
      if (this.props.navigation.isAccountNavOpen) {
        this.onToggleAccountNav();
      }
      if (this.props.navigation.activeGroup !== '') {
        this.context.store.dispatch((0,navigation/* setActiveNavGroup */.sq)());
      }
    });
    ResponsiveApp_defineProperty(this, "onResize", () => {
      // Hide expand menu on large viewports.
      const desktop = (0,getCssVariable/* default */.Z)('desktop');
      if (this.props.navigation.isNavOpen && window.innerWidth > desktop) {
        this.onToggleNav();
      }
      this.setState({
        resizeState: window.innerWidth >= desktop ? 'desktop' : 'mobile'
      });
    });
    ResponsiveApp_defineProperty(this, "onToggleNav", () => {
      this.context.store.dispatch((0,navigation/* toggleNav */.mi)());
    });
    ResponsiveApp_defineProperty(this, "onSkipLink", () => this.context.store.dispatch((0,navigation/* skipLinkActivated */.jH)()));
    ResponsiveApp_defineProperty(this, "onToggleAccountNav", function () {
      let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      if (event) {
        event.stopPropagation();
        event.preventDefault();
      }
      _this.context.store.dispatch((0,navigation/* toggleAccountNav */.r)());
    });
    ResponsiveApp_defineProperty(this, "onToggleNavGroup", group => {
      const activeGroup = this.props.navigation.activeGroup === group ? '' : group;
      this.context.store.dispatch((0,navigation/* setActiveNavGroup */.sq)(activeGroup));
    });
    ResponsiveApp_defineProperty(this, "mvpdLogout", event => {
      event.preventDefault();
      primetime/* default */.Z.destroy();
      AdobePassAccessEnabler/* default */.Z.logout();
    });
    ResponsiveApp_defineProperty(this, "isContentIniFrame", () => get_default()(this.props, 'location.query.parentUrl', '') !== '');
    ResponsiveApp_defineProperty(this, "trackNewsBarClick", () => {
      var _this$props$analytics3, _this$props$analytics4;
      mParticle/* default */.ZP.trackEvent({
        name: mParticle_constants.CLICK_ACTION,
        type: mParticle_constants.NAVIGATION,
        attributes: (0,getClickActionAttributes/* default */.Z)({
          [mParticle_constants.ITEM_CLICKED_NAME]: get_default()(this.props, ['breakingNews', 'news', 'attributes', 'link', 'title']).slice(0, 60),
          [mParticle_constants.CUSTOM_SHELF_TITLE]: 'Breaking News Bar',
          [mParticle_constants.BRAND]: (_this$props$analytics3 = this.props.analytics) === null || _this$props$analytics3 === void 0 ? void 0 : (_this$props$analytics4 = _this$props$analytics3.brand) === null || _this$props$analytics4 === void 0 ? void 0 : _this$props$analytics4.title
        })
      });
    });
    ResponsiveApp_defineProperty(this, "onCloseNews", () => {
      const id = get_default()(this.props, 'breakingNews.news.id');
      id && ((0,hasLocalStorage/* default */.Z)() ? localStorage.setItem('hideNews', id) : cookies_default().set('hideNews', id, {
        domain: location.hostname,
        // eslint-disable-line no-restricted-globals
        expires: 7 * 24 * 3600 // 7 days
      }));
      this.trackNewsBarClick();
      this.context.store.dispatch((0,navigation/* setNewsBarStatus */.BJ)(false));
    });
    ResponsiveApp_defineProperty(this, "onCloseOldIEModal", () => {
      this.setState({
        isOldIEModalVisible: false
      });
    });
    ResponsiveApp_defineProperty(this, "onClosePeacockModal", event => {
      this.setState({
        isPeacockModalVisible: false
      });
      event.stopPropagation();
      event.preventDefault();
      mParticle/* default */.ZP.trackEvent({
        name: 'Exit',
        type: 'Navigation',
        attributes: {
          Show: this.props.seriesShortTitle || 'None',
          Season: this.props.seasonNumber || 'None',
          'Destination URL': PEACOCK_URL,
          'Destination Type': 'Peacock',
          'Notification Title': 'Go To Peacock',
          'Custom Shelf Title': 'Global Nav',
          'Content Position': 'None',
          'Custom Shelf Position': 'None'
        }
      });
    });
    ResponsiveApp_defineProperty(this, "onClickPeacockModal", event => {
      var _this$props$analytics5, _this$props$analytics6;
      typeof window !== 'undefined' && window.open(PEACOCK_URL, '_blank');
      mParticle/* default */.ZP.trackEvent({
        name: mParticle_constants.CLICK_ACTION,
        type: mParticle_constants.NAVIGATION,
        attributes: (0,getClickActionAttributes/* default */.Z)({
          [mParticle_constants.BRAND]: (_this$props$analytics5 = this.props.analytics) === null || _this$props$analytics5 === void 0 ? void 0 : (_this$props$analytics6 = _this$props$analytics5.brand) === null || _this$props$analytics6 === void 0 ? void 0 : _this$props$analytics6.title,
          [mParticle_constants.SHOW]: this.props.seriesShortTitle,
          [mParticle_constants.SEASON]: this.props.seasonNumber,
          [mParticle_constants.CUSTOM_SHELF_TITLE]: 'Global Nav',
          [mParticle_constants.ITEM_CLICKED_NAME]: 'Go To Peacock'
        })
      });
      this.onClosePeacockModal(event);
    });
    ResponsiveApp_defineProperty(this, "onPeacockNavClick", () => {
      this.setState({
        isPeacockModalVisible: true
      });

      // Remove the focus state from the Peacock link once its clicked.
      typeof document !== 'undefined' && typeof document.activeElement !== 'undefined' && document.activeElement.blur();
    });
    ResponsiveApp_defineProperty(this, "onCloseOnboardingModal", () => {
      this.context.store.dispatch((0,navigation/* setOnboardingModalStatus */.NL)(false));
    });
    ResponsiveApp_defineProperty(this, "onSkipLinkBlur", () => this.context.store.dispatch((0,navigation/* skipLinkActivated */.jH)()));
    ResponsiveApp_defineProperty(this, "getBrandIntake", brand => {
      const currentBrand = pick_default()(BRANDS, _ref4 => {
        var _brandDisplayTitle$to, _brand$toLowerCase;
        let {
          brandDisplayTitle
        } = _ref4;
        return (brandDisplayTitle === null || brandDisplayTitle === void 0 ? void 0 : (_brandDisplayTitle$to = brandDisplayTitle.toLowerCase) === null || _brandDisplayTitle$to === void 0 ? void 0 : _brandDisplayTitle$to.call(brandDisplayTitle)) === (brand === null || brand === void 0 ? void 0 : (_brand$toLowerCase = brand.toLowerCase) === null || _brand$toLowerCase === void 0 ? void 0 : _brand$toLowerCase.call(brand));
      });
      return currentBrand && Object.values(currentBrand)[0];
    });
    ResponsiveApp_defineProperty(this, "onCloseFavoriteModal", () => {
      this.context.store.dispatch((0,navigation/* toggleFavoriteModalVisibility */.vM)(null, true));
    });
    ResponsiveApp_defineProperty(this, "onClickSignUp", metadata => {
      this.props.router && this.props.router.push({
        pathname: '/sign-up',
        state: metadata || {}
      });
    });
    ResponsiveApp_defineProperty(this, "onIterableError", () => {
      // an error has occurred with Iterable (probably ad blocker), show the onboarding modal if necessary
      if (this.shouldShowOnboarding()) {
        this.initOnboardingExperience();
      }
    });
    ResponsiveApp_defineProperty(this, "onIterableStart", () => {
      // clear out any previous onboarding timers that may have started (could be due to user logging in/out)
      // we are about to refetch the Iterable data, so wait until that resolves before showing the onboarding modal
      this.clearOnboardingTimer();
    });
    ResponsiveApp_defineProperty(this, "onIterableMessages", (userId, messages, triggerModal) => {
      var _this$props$client;
      // again, clear out any lingering timers
      this.clearOnboardingTimer();
      if (userId !== ((_this$props$client = this.props.client) === null || _this$props$client === void 0 ? void 0 : _this$props$client.bffMParticleId) || this.props.isOnboardingModalVisible) {
        // Iterable resolved, but the user ID doesn't match the current user
        // this might be because the user logged in/out before the last request finished
        return;
      }
      if (messages.length) {
        triggerModal(messages);
      } else if (this.shouldShowOnboarding()) {
        // only show the onboarding if there are no messages to display
        this.initOnboardingExperience();
      }
    });
    ResponsiveApp_defineProperty(this, "shouldShowOnboarding", () => {
      const isDisplayedOnce = (0,onboardingFlow/* isOnboardingModalStarted */.cX)();
      return !isDisplayedOnce && this.props.isOnboardingExperience;
    });
    ResponsiveApp_defineProperty(this, "clearOnboardingTimer", () => {
      this.onboardingTimer && clearTimeout(this.onboardingTimer);
    });
    ResponsiveApp_defineProperty(this, "initOnboardingExperience", () => {
      var _this$props$client2;
      // if there's a timer, we need to clear it no matter what
      // we will likely set it in the next step or there's no need for the timer at all
      this.clearOnboardingTimer();
      const {
        isMobile,
        isTablet
      } = (_this$props$client2 = this.props.client) === null || _this$props$client2 === void 0 ? void 0 : _this$props$client2.userAgent;
      if (isMobile && !isTablet) return;
      if (this.shouldShowOnboarding()) {
        this.onboardingTimer = setTimeout(() => {
          // check if onboarding should be shown again because user might have navigated to a different page
          if (this.shouldShowOnboarding()) {
            this.context.store.dispatch((0,navigation/* setOnboardingModalStatus */.NL)(true));
          }
        }, this.props.timeToOnboarding);
      }
    });
    this.state = {
      isOldIEModalVisible: false,
      isPeacockModalVisible: false,
      isIdentityIframeVisible: false,
      isDatadogInitialized: false,
      isOlyConciergeVisible: false,
      isConciergeInjected: false
    };
    this.footerRef = /*#__PURE__*/react.createRef();
    this.onboardingTimer = null;
    this.onboardingTooltipTimer = null;
    this.clientLDPromise = null;
    this.isAdobeAuthFirstTime = true;
  }
  UNSAFE_componentWillMount() {
    if (typeof window !== 'undefined') {
      // Initialize user attributes for anonymous mParticle users. We do this
      // here to ensure that they are batched with initial Page Load event.
      if (!(0,identity/* hasSession */.Hk)()) {
        mParticle/* default */.ZP.setUserAttributes({
          'User Converted': 'False',
          'User Email Status': 'None',
          'User Episode Credits Left': 'None',
          'User First Visit Date': new Date().toISOString(),
          'User MVPD': get_default()(this.props, 'adobePass.mvpd.mvpd_id', 'Unauthenticated'),
          'User MVPD Referrer': get_default()(this.props, 'adobePass.mvpd.title') ? 'MVPD Login' : 'None',
          'User Profile': 'Unauthenticated',
          'User Registration Date': 'None',
          'User Sign In Type': 'None',
          'User VPPA Opt In': 'None',
          'User VPPA Opt In Date': 'None',
          'User VPPA Opt In Platform': 'None',
          'User VPPA Opt In Product': 'None',
          'User Registration Referrer': 'None',
          'User Registration Source': 'None',
          'User Show Favorited': 'None',
          'User Product': ResponsiveApp_APP.name.toLowerCase(),
          'User Platform': (0,getPlatform/* default */.Z)(),
          'User Peacock Account Tier': 'None',
          'User Peacock Registration Date': null,
          'User Peacock Sign In Type': 'None',
          'User Peacock Registration Referrer': 'None',
          'User Peacock Registration Source': 'None',
          'User Language': get_default()(this.props.client, ['language']) === 'es' ? 'Spanish' : 'English',
          'User Rec Shelf': 'None',
          'User Social Network': 'None',
          'User Cross App': 'None',
          'Adobe Upstream ID': 'None',
          'Adobe HBA Status': 'None',
          'Adobe Max Rating': 'None',
          'Adobe Language Preference': 'None'
        }, false);
        // Start listening for Adobe Access Enabler events.
        const adobeAudience = (0,getAdobeTagging/* getAudience */.KG)();
        Object.keys(adobeAudience).length && mParticle/* default */.ZP.identifyIdentity(adobeAudience);
      }

      // Start listening for Adobe Access Enabler events.
      this.setupAccessEnabler();

      // Clear any pre-existing mParticle Referrer values.
      window.sessionStorage.removeItem('mpReferrer');
      this.clearOnboardingTimer();
      this.onboardingTooltipTimer && clearTimeout(this.onboardingTooltipTimer);
    }
  }
  componentDidMount() {
    if ((0,isClientSide/* default */.Z)()) {
      mParticle/* default */.ZP.getId().then(userId => this.context.store.dispatch((0,client/* setBffMParticleId */.L8)(userId)))
      // client-side LD may not be available when mParticle is, so wait for it
      // don't mark the mParticle load step as complete yet because other calls may
      // depend on LD flags
      .then(() => this.waitForClientLD()).then(() => {
        this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* MPARTICLE_ID */.sP));
        this.registerUserInteractions();
        this.reportServerFeatureFlags();
      });
      try {
        // force a code split point here
        __webpack_require__.e(/* import() */ 6467).then(__webpack_require__.bind(__webpack_require__, 26322)).then(_ref5 => {
          let {
            initObfuscatedConfig
          } = _ref5;
          return initObfuscatedConfig(this.context.store);
        }).then(() => {
          this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* OC_CONFIG_READY */.hL));
        });
      } catch {
        // fail silently, but mark the load step as complete so the page will render
        this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* OC_CONFIG_READY */.hL));
      }
    }
    mParticle/* default */.ZP.getSession().then(sessionId => this.context.store.dispatch((0,client/* setMParticleSessionId */.pL)(sessionId)));
    if ((0,hasLocalStorage/* default */.Z)()) {
      // Track when a user first accessed the site. This is used to determine D0
      // (day zero) cohorts and subsequently the profile IDs sent to the BFF.
      if (!localStorage.getItem('firstVisitDate')) {
        localStorage.setItem('firstVisitDate', Date.now());
      }

      // Initialize Identity iframe.
      this.setState({
        isIdentityIframeVisible: true
      });

      // The mpInitialId is a legacy key which was used to determine if a user
      // was "Day Zero/D0". It is now obsolete, but is a good indicator if the
      // user visited our site before we released the prefetch app. The first
      // time these users return, they will only receive a SSR version of their
      // initial page load. We need to clear the page content to trigger a new
      // fetch from the BFF using their mParticle ID.
      if (localStorage.getItem('mpInitialId')) {
        this.context.store.dispatch((0,pages/* clearPage */.rs)(this.props.location.pathname));
        localStorage.removeItem('mpInitialId');
      }
    }

    // If player preferences are available in session storage, populate them into Redux
    const playerPreferences = utils_getPreferencesFromStorage() || {};
    this.context.store.dispatch((0,actions_playerPreferences/* setPlayerPreferences */.L)({
      ...playerPreferences,
      isClientSideChecked: true
    }));

    // If enabled, set the ad blocker status immediately.
    if (getAdBlockState()) {
      this.context.store.dispatch((0,client/* setAdBlock */.YV)(true));
    }
    if (this.props.isNewsVisible && !this.isNewsHidden()) {
      this.context.store.dispatch((0,navigation/* setNewsBarStatus */.BJ)(true));
    }
    const isPersonalizationEnabled = this.props.isPersonalizationEnabled;
    this.checkOldIE();

    // There are several ways that we can restore a users session.
    // In order of priority:
    // 1. An app opens our site in a WebView with an encoded token.
    // 2. There is an existing user session stored in localStorage.
    // 3. Our cross-domain cookie, park-fr, contains a session token.
    const data = (0,identity/* getSession */.Gg)();
    const cookie = cookies_default().get('park-fr');
    if (data && data.user) {
      adobeIdentity/* default */.Z.trackIdentityCheck(true, get_default()(data, ['user', 'signInType']));
      this.context.store.dispatch({
        type: account.SET_ACCOUNT_INFO,
        user: data.user,
        shouldClearCache: isPersonalizationEnabled
      });
    } else if (cookie) {
      (0,identity/* getUserInfo */.bG)({
        token: cookie,
        location: this.props.location
      }).then(user => {
        this.context.store.dispatch({
          type: account.SET_ACCOUNT_INFO,
          user,
          shouldClearCache: isPersonalizationEnabled
        });
      }).catch(() => {
        cookies_default().expire('park-fr', {
          domain: COOKIE_DOMAIN
        });
        cookies_default().expire('park-fr'); // Backwards compatability
        window.location.reload();
      });
    } else {
      adobeIdentity/* default */.Z.trackIdentityCheck(false, get_default()(data, ['user', 'signInType']));
      this.context.store.dispatch({
        type: account.SET_ACCOUNT_CHECKED
      });
    }
    this.setVideoHistory();
    window.addEventListener('resize', throttle_default()(this.onResize, 300));

    // For security reasons, validate user sessions and force a page refresh if
    // they expire to prevent access to sensitive data.
    (0,identity/* validateSession */.je)(this.props.location).catch(() => window.location.reload());

    // Add an listeners to Branch.io.
    if (this.props.client.userAgent.isMobile) {
      mParticle/* default */.ZP.initialize().then(() => {
        if (window.branch) this.setupBranchListeners();
      });
    }

    // language needs to be validated since prod CDN doesn't differentiate lang params
    let language = get_default()(this.props.client, ['language'], 'en');
    if ((0,isClientSide/* default */.Z)()) {
      var _this$props$location, _this$props$location$;
      const clientLanguage = ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.query) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.lang) === 'es' ? 'es' : 'en';
      // language needs updating
      if (clientLanguage !== language) {
        language = clientLanguage;
        this.props.dispatch((0,client/* setLanguage */.m0)(language));
        try {
          var _document$querySelect;
          // fix the HTML lang attribute if possible
          const htmlLang = language === 'en' ? 'en-US' : 'es';
          (_document$querySelect = document.querySelector('html')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.setAttribute('lang', htmlLang);
        } catch (_err) {
          // swallow the error
        }
      }
    }
    (0,identity/* setLanguage */.m0)(language);
    this.onResize();
    this.fetchGlobalNav();
    this.props.dispatch((0,client/* setStartTime */.qv)(Math.floor(Date.now() / 1000)));
  }
  UNSAFE_componentWillReceiveProps(nextProps) {
    // If we receive a message from TheStore telling us a Redirect is needed
    if (nextProps.redirect) {
      this.context.store.set({
        redirect: null
      });
      this.props.router.push(nextProps.redirect.path);
    }
    if (this.hasPathChanged(nextProps)) {
      this.setVideoHistory();
      this.context.store.dispatch((0,navigation/* setPreviousLocation */.Yl)(this.props.location));
    }
  }
  componentDidUpdate(prevProps) {
    var _prevProps$client, _this$props$client3, _this$props$client4, _this$props$client4$c, _this$props$client5, _this$props$client5$c, _this$props$client6, _this$props$client6$c;
    if (this.hasPathChanged(prevProps)) {
      this.checkOldIE();

      // Close livecallout modal if is opened.
      get_default()(this.props.navigation, ['liveCallouts', 'isNotificationVisible']) && this.context.store.dispatch((0,navigation/* setLiveCalloutStatus */.J)(false, {}));

      // Scroll to the top of the page unless shouldNotUpdateScroll is passed.
      if (!get_default()(this.props.location, 'state.shouldNotUpdateScroll')) {
        window.scrollTo(0, 0);
      }

      // User navigated away from search result show without playing a video.
      if (this.props.previousAlgoliaObject) {
        var _prevProps$children, _prevProps$children$t, _this$props$children, _this$props$children$;
        const prevPageName = utils_extractPageName((_prevProps$children = prevProps.children) === null || _prevProps$children === void 0 ? void 0 : (_prevProps$children$t = _prevProps$children.type) === null || _prevProps$children$t === void 0 ? void 0 : _prevProps$children$t.displayName);
        const pageName = utils_extractPageName((_this$props$children = this.props.children) === null || _this$props$children === void 0 ? void 0 : (_this$props$children$ = _this$props$children.type) === null || _this$props$children$ === void 0 ? void 0 : _this$props$children$.displayName);
        if (ResponsiveApp.showPages.includes(prevPageName) && !ResponsiveApp.showPages.includes(pageName)) {
          this.context.store.dispatch((0,navigation/* clearPreviousAlgoliaObject */.j7)());
        }
      }
    }

    // Ensure the ad block state is being checked frequently.
    if (getAdBlockState() && !this.props.client.adBlock) {
      this.context.store.dispatch((0,client/* setAdBlock */.YV)(true));
    }
    if (this.props.isDatadogEnabled && !this.state.isDatadogInitialized) {
      datadog.init();
      this.setState({
        isDatadogInitialized: true
      });
    }
    if (this.props.isIterableEnabled && !prevProps.isIterableEnabled) {
      mParticle/* default */.ZP.getId().then(userId => {
        iterable.initialize(userId);
      });
    }
    if (this.props.isOnboardingExperience && !prevProps.isOnboardingExperience && !this.props.isIterableInBrowserEnabled) {
      // onboarding modal is enabled and Iterable is disabled, manually set the onboarding timer since Iterable won't
      // trigger any callbacks
      this.initOnboardingExperience();
    }
    const isBffMParticleIdChanged = ((_prevProps$client = prevProps.client) === null || _prevProps$client === void 0 ? void 0 : _prevProps$client.bffMParticleId) !== ((_this$props$client3 = this.props.client) === null || _this$props$client3 === void 0 ? void 0 : _this$props$client3.bffMParticleId);
    // This should be triggered when a user logs in because the step is unset in the signIn event.
    const isUserJustLoggedIn = prevProps.isLoggedIn !== this.props.isLoggedIn && this.props.isLoggedIn;
    if ((isBffMParticleIdChanged || isUserJustLoggedIn) && (_this$props$client4 = this.props.client) !== null && _this$props$client4 !== void 0 && (_this$props$client4$c = _this$props$client4.completedLoadSteps) !== null && _this$props$client4$c !== void 0 && _this$props$client4$c[pllLoadSteps/* MPARTICLE_ID */.sP] && !((_this$props$client5 = this.props.client) !== null && _this$props$client5 !== void 0 && (_this$props$client5$c = _this$props$client5.completedLoadSteps) !== null && _this$props$client5$c !== void 0 && _this$props$client5$c[pllLoadSteps/* INITIAL_PERSONALIZATION */.zS])) {
      // mParticle ID changed after the initial load
      // check that we are logging in, not logging out, because page will reload on logout so we should not
      // make new API calls in that case
      this.context.store.dispatch((0,client/* unsetLoadStep */.N1)(pllLoadSteps/* INITIAL_PERSONALIZATION */.zS));
      this.context.store.dispatch((0,client/* unsetLoadStep */.N1)(pllLoadSteps/* REPORTED_SERVER_FEATURE_FLAGS */.aS));
      this.registerUserInteractions();
      this.reportServerFeatureFlags();
    }
    if (prevProps.adobePass.isAuthenticationChecked !== this.props.adobePass.isAuthenticationChecked && this.props.adobePass.isAuthenticationChecked && !((_this$props$client6 = this.props.client) !== null && _this$props$client6 !== void 0 && (_this$props$client6$c = _this$props$client6.completedLoadSteps) !== null && _this$props$client6$c !== void 0 && _this$props$client6$c[pllLoadSteps/* ADOBE_AUTH_CHECK */.Lg])) {
      var _this$props$adobePass, _this$props$adobePass2;
      this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* ADOBE_AUTH_CHECK */.Lg));
      this.setGeolocation({
        adobeMvpdId: (_this$props$adobePass = this.props.adobePass) === null || _this$props$adobePass === void 0 ? void 0 : (_this$props$adobePass2 = _this$props$adobePass.mvpd) === null || _this$props$adobePass2 === void 0 ? void 0 : _this$props$adobePass2.mvpd_id
      });
    }
    const isOlyConciergeFlagChanged = prevProps.isConciergeEnabled !== this.props.isConciergeEnabled;
    const isPathnameChanged = this.props.location.pathname !== prevProps.location.pathname;
    if (isOlyConciergeFlagChanged || isPathnameChanged) {
      this.initOlyConcierge();
    }
  }
  componentDidCatch(error, info) {
    park_logger_default().error(error);
    this.setState({
      hasGlobalError: true
    });
    const errorAttributes = (0,getErrorAttributes/* default */.Z)({
      [mParticle_constants.ERROR_TYPE]: 'Page',
      [mParticle_constants.ERROR_SYSTEM]: 'Other',
      [mParticle_constants.ERROR_STACK]: (info === null || info === void 0 ? void 0 : info.componentStack) || ''.toString().trim()
    });
    mParticle/* default */.ZP.trackEvent({
      name: mParticle_constants.ERROR,
      type: mParticle_constants.NAVIGATION,
      attributes: errorAttributes
    });
  }
  checkOldIE() {
    if (typeof window !== 'undefined') {
      if (!this.state.isOldIEModalVisible && this.props.isHeaderVisible && (0,isOldIE/* default */.Z)(window.navigator.userAgent)) {
        this.setState({
          isOldIEModalVisible: true
        });
      }
    }
  }
  registerUserInteractions() {
    if (!(0,isClientSide/* default */.Z)()) {
      return;
    }
    loadUserInteractions(this.context.store.dispatch, this.props.isPersonalizationEnabled).then(() => {
      this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* INITIAL_PERSONALIZATION */.zS));
    }).catch(err => {
      park_logger_default().error(err);
      // Fail silently, but mark the load step as complete so the page will render
      this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* INITIAL_PERSONALIZATION */.zS));
    });
  }
  async reportServerFeatureFlags() {
    if (!this.props.isSendingServerFlagsEnabled) {
      // server feature flag reporting is disabled
      return;
    }
    try {
      var _this$props$client7, _data$data, _data$data$ldStateFla, _data$data$ldStateFla2;
      const {
        data
      } = await (0,friendship/* gql */.Ps)({
        query: SERVER_FEATURE_FLAGS_QUERY_NAME,
        variables: {
          ld: ResponsiveApp_LAUNCHDARKLY_FLAG,
          userId: (_this$props$client7 = this.props.client) === null || _this$props$client7 === void 0 ? void 0 : _this$props$client7.bffMParticleId,
          appVersion: (0,friendship/* getAppVersion */.Sf)(true)
        }
      });
      const serverFeatureFlags = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$ldStateFla = _data$data.ldStateFlag) === null || _data$data$ldStateFla === void 0 ? void 0 : (_data$data$ldStateFla2 = _data$data$ldStateFla.user_properties) === null || _data$data$ldStateFla2 === void 0 ? void 0 : _data$data$ldStateFla2['Server Feature Flags'];
      mParticle/* default */.ZP.setUserAttributes({
        'Server Feature Flags': serverFeatureFlags
      });
      this.context.store.dispatch((0,client/* completeLoadStep */.wo)(pllLoadSteps/* REPORTED_SERVER_FEATURE_FLAGS */.aS));
    } catch (err) {
      park_logger_default().error(err);
    }
  }
  waitForClientLD() {
    if (this.props.isLDClientSideReady) {
      return Promise.resolve();
    }
    return new Promise(resolve => {
      let fallbackTimer;
      const unsubscribe = this.context.store.subscribe(() => {
        if (this.props.isLDClientSideReady) {
          unsubscribe();
          fallbackTimer && clearTimeout(fallbackTimer);
          resolve();
        }
      });

      // if LD doesn't resolve within 30 seconds, unblock anything waiting for this
      fallbackTimer = setTimeout(() => {
        unsubscribe();
        resolve();
      }, 30000);
    });
  }
  render() {
    var _this$props$children2, _this$props$children3, _this$props$client8, _this$props$client8$u, _this$props$client9, _this$props$account, _favoriteModal$metada;
    if (this.state.hasGlobalError) {
      return /*#__PURE__*/react.createElement(BasicFailurePage["default"], {
        location: this.props.location
      });
    }
    const {
      isHeaderVisible,
      isFooterVisible,
      favoriteModal,
      showTileFavorites,
      navigation: {
        liveCallouts = {}
      },
      client: {
        userAgent = {}
      }
    } = this.props;
    const newsColor = get_default()(this.props, 'breakingNews.news.attributes.color');
    const attributes = {
      href: get_default()(this.props, 'breakingNews.news.attributes.link.url', ''),
      onClick: this.trackNewsBarClick
    };
    get_default()(this.props, 'breakingNews.news.attributes.link.attributes.target') !== 0 && (attributes.target = '_blank');
    const footerSimple = get_default()(this.props.deprecated, "".concat((0,getScalableSalesPath/* default */.Z)(this.props.location.pathname), ".attributes"));
    const pageComponent = utils_extractPageName((_this$props$children2 = this.props.children) === null || _this$props$children2 === void 0 ? void 0 : (_this$props$children3 = _this$props$children2.type) === null || _this$props$children3 === void 0 ? void 0 : _this$props$children3.displayName);
    const isShowPage = ResponsiveApp.showPages.includes(pageComponent);
    const isEpisodesPage = pageComponent.toLowerCase() === 'episodespage';
    const isMvpdScreenPrompt = pageComponent.includes('MvpdBridgeScreenPage');
    const identityIframeUrl = ResponsiveApp_IDENTITY_ENABLED && this.state.isIdentityIframeVisible ? identity/* IFRAME_BASE_URL */.g7 : '';
    const iterableInBrowser = this.props.isIterableInBrowserEnabled && (0,isClientSide/* default */.Z)() ? /*#__PURE__*/react.createElement(IterableInBrowser_IterableInBrowser, {
      isMobile: (_this$props$client8 = this.props.client) === null || _this$props$client8 === void 0 ? void 0 : (_this$props$client8$u = _this$props$client8.userAgent) === null || _this$props$client8$u === void 0 ? void 0 : _this$props$client8$u.isMobile,
      userId: (_this$props$client9 = this.props.client) === null || _this$props$client9 === void 0 ? void 0 : _this$props$client9.bffMParticleId,
      email: (_this$props$account = this.props.account) === null || _this$props$account === void 0 ? void 0 : _this$props$account.email,
      onError: this.onIterableError,
      onStart: this.onIterableStart,
      onMessages: this.onIterableMessages
    }) : null;
    return /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('responsive-app', {
        'responsive-app--news-bar-visible': this.props.isNewsVisible && this.props.isNewsBarOpen
      })
    }, /*#__PURE__*/react.createElement(UserInteractionsSync_UserInteractionsSync, null), this.props.isNewsVisible && this.props.isNewsBarOpen && /*#__PURE__*/react.createElement(NotificationBar_NotificationBar, {
      iconClass: "play",
      style: newsColor && {
        backgroundColor: "#".concat(newsColor)
      } || {},
      onClose: this.onCloseNews
    }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, attributes, get_default()(this.props, ['breakingNews', 'news', 'attributes', 'link', 'title']).slice(0, 60))), /*#__PURE__*/react.createElement("div", {
      id: "contentAccessEnabler"
    }), isHeaderVisible && /*#__PURE__*/react.createElement("header", {
      className: classnames_default()('responsive-app__header', {
        'responsive-app__header--peacock-preview': this.props.isPeacockPreview
      })
    }, /*#__PURE__*/react.createElement(Navigation_Navigation, {
      onToggleNav: this.onToggleNav,
      onSkipLink: this.onSkipLink,
      onToggleAccountNav: this.onToggleAccountNav,
      onToggleNavGroup: this.onToggleNavGroup,
      navigation: this.props.navigation,
      pageComponent: pageComponent,
      isShowPage: isShowPage,
      isEpisodesPage: isEpisodesPage,
      location: this.props.location,
      previousPath: this.props.navigation.previousLocation.pathname,
      activeNavGroup: this.state.activeNavGroup,
      adobePass: this.props.adobePass,
      mvpdLogout: this.mvpdLogout,
      router: this.props.router,
      isCoppaCompliant: this.props.isCoppaCompliant,
      seriesShortTitle: this.props.seriesShortTitle,
      seasonNumber: this.props.seasonNumber,
      analytics: this.props.analytics,
      hostname: this.props.request.hostname,
      onPeacockClick: this.onPeacockNavClick,
      isPeacockPreview: this.props.isPeacockPreview
    }), identityIframeUrl && /*#__PURE__*/react.createElement("div", {
      className: "responsive-app__identity-iframe"
    }, /*#__PURE__*/react.createElement("iframe", {
      src: "".concat(identityIframeUrl, "/generetic/identity/"),
      id: "identity-auth-iframe",
      title: "Identity Auth Management",
      frameBorder: "0",
      height: "0",
      width: "0",
      ref: identity/* setIdentityIframe */.Sf,
      tabIndex: "-1"
    }))), !ResponsiveApp_IDENTITY_ENABLED && isHeaderVisible && this.props.adobePass.isAuthenticated && this.props.adobePass.mvpd && this.props.adobePass.mvpd.mvpd_logo_2x && /*#__PURE__*/react.createElement(MvpdShelf_MvpdShelf, {
      adobePass: this.props.adobePass,
      navigation: this.props.navigation,
      logout: this.mvpdLogout
    }), /*#__PURE__*/react.createElement("main", {
      id: "main",
      role: "main",
      onClick: this.onMainClick,
      className: classnames_default()('responsive-app__main', {
        'responsive-app__main--nav-open': this.props.navigation.isNavOpen,
        'response-app__main---showItems-none': !isShowPage,
        ["response-app__main__favorites--".concat(showTileFavorites)]: showTileFavorites !== 'default',
        'responsive-app__main--no-footer': isMvpdScreenPrompt
      })
    }, /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('screen-reader', {
        'screen-reader--active': this.props.isSkipLinkActivated
      }),
      onBlur: this.onSkipLinkBlur
    }, /*#__PURE__*/react.createElement("p", {
      tabIndex: "-1",
      id: "main-content"
    }, (0,getTranslatedString/* default */.Z)(this.props.client.language, 'general.mainContent'))), this.state.isOldIEModalVisible && /*#__PURE__*/react.createElement(OldIEModal_OldIEModal, {
      onClose: this.onCloseOldIEModal
    }), this.props.isOnboardingModalVisible && /*#__PURE__*/react.createElement(OnboardingModal_OnboardingModal, {
      language: this.props.client.language,
      isModalVisible: this.props.isOnboardingModalVisible,
      isMobile: userAgent.isMobile,
      onClose: this.onCloseOnboardingModal
    }), liveCallouts.isNotificationVisible && /*#__PURE__*/react.createElement(LiveCalloutNotification_LiveCalloutNotification, ResponsiveApp_extends({}, liveCallouts, {
      isMobile: userAgent.isMobile,
      isMobileWithApp: userAgent.isMobileWithApp,
      language: this.props.client.language
    })), this.state.isPeacockModalVisible && /*#__PURE__*/react.createElement(PeacockModal_PeacockModal, {
      onClick: this.onClickPeacockModal,
      onClose: this.onClosePeacockModal
    }), !this.state.isOldIEModalVisible && /*#__PURE__*/react.createElement("div", ResponsiveApp_extends({
      className: classnames_default()("responsive-app__wrapper responsive-app__wrapper--".concat(config/* default */.Z.get('app.appName')), {
        'responsive-app__wrapper--footer-simple': get_default()(footerSimple, 'footerLinks', []).length,
        'responsive-app__wrapper--embedded': !isFooterVisible
      })
    }, this.footerRef.current && this.state.resizeState === 'desktop' ? {
      style: {
        paddingBottom: this.footerRef.current.getBoundingClientRect().height
      }
    } : {}), this.props.children), isFooterVisible && /*#__PURE__*/react.createElement(Footer, {
      isCoppaCompliant: this.props.isCoppaCompliant,
      mvpdAuth: this.props.adobePass.mvpd,
      quickLinks: this.props.quickLinks,
      corporateLinks: this.props.corporateLinks,
      attributes: get_default()(this.props.deprecated, "".concat((0,getScalableSalesPath/* default */.Z)(this.props.location.pathname), ".attributes")),
      language: this.props.client.language,
      brand: this.getBrandIntake(get_default()(this.props, ['analytics', 'brand', 'title'], ResponsiveApp_APP.appName)),
      pathname: this.props.location.pathname,
      location: this.props.location,
      footerRef: this.footerRef,
      country: this.props.client.geo.country
    })), /*#__PURE__*/react.createElement(index_es/* default */.Z, {
      className: "generic-tooltip",
      event: "click",
      eventOff: "click",
      effect: "solid",
      delayHide: 1000,
      place: "bottom" // automatically 'left' for mobile due to right space constraint
      ,
      offset: {
        left: -65
      },
      arrowColor: "rgba(0,0,0,0)",
      scrollHide: true,
      isCapture: true,
      key: "tooltip"
    }), favoriteModal.status && /*#__PURE__*/react.createElement(Modal/* default */.Z, {
      className: "show-modal",
      closeModal: this.onCloseFavoriteModal,
      header: "Access your favorites across multiple devices with an NBCUniversal Profile.",
      key: "cta"
    }, /*#__PURE__*/react.createElement(es/* Link */.rU, {
      to: {
        pathname: '/sign-up',
        state: favoriteModal.metadata || {}
      },
      onClick: this.onCloseFavoriteModal,
      className: "button",
      style: {
        backgroundColor: (_favoriteModal$metada = favoriteModal.metadata) === null || _favoriteModal$metada === void 0 ? void 0 : _favoriteModal$metada.gradientStart
      }
    }, "SIGN UP"), /*#__PURE__*/react.createElement("p", {
      className: "show-modal__footer"
    }, "Already have an NBCUniversal Profile?", ' ', /*#__PURE__*/react.createElement(es/* Link */.rU, {
      to: {
        pathname: '/sign-in',
        state: favoriteModal.metadata || {}
      },
      onClick: this.onCloseFavoriteModal
    }, "Sign In"), ".")), iterableInBrowser, /*#__PURE__*/react.createElement("div", {
      id: "oly",
      className: classnames_default()({
        'element-hidden': !this.state.isOlyConciergeVisible
      })
    }));
  }
}
ResponsiveApp_defineProperty(ResponsiveApp, "propTypes", {
  children: (prop_types_default()).node,
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string
  }),
  router: prop_types_default().shape({
    push: (prop_types_default()).func.isRequired
  }).isRequired,
  adobePass: prop_types_default().shape({
    resource: (prop_types_default()).object,
    mvpd: (prop_types_default()).object,
    isAuthenticated: (prop_types_default()).bool,
    isAuthenticationChecked: (prop_types_default()).bool,
    mvpds: (prop_types_default()).object
  }).isRequired,
  quickLinks: prop_types_default().shape({
    title: (prop_types_default()).string,
    links: (prop_types_default()).array
  }).isRequired,
  corporateLinks: prop_types_default().shape({
    title: (prop_types_default()).string,
    links: (prop_types_default()).array
  }).isRequired,
  deprecated: (prop_types_default()).object,
  client: prop_types_default().shape({
    geo: prop_types_default().shape({
      country: (prop_types_default()).string,
      geoZip: (prop_types_default()).string
    }),
    userAgent: prop_types_default().shape({
      isMobile: (prop_types_default()).bool,
      chrome: (prop_types_default()).bool,
      safari: (prop_types_default()).bool
    }).isRequired
  }).isRequired,
  navigation: prop_types_default().shape({
    isNavOpen: (prop_types_default()).bool.isRequired,
    isAccountNavOpen: (prop_types_default()).bool.isRequired,
    activeGroup: (prop_types_default()).string.isRequired,
    previousLocation: prop_types_default().shape({
      pathname: (prop_types_default()).string
    })
  }).isRequired,
  redirect: prop_types_default().shape({
    path: (prop_types_default()).string
  })
});
ResponsiveApp_defineProperty(ResponsiveApp, "contextTypes", {
  store: prop_types_default().shape({
    set: (prop_types_default()).func.isRequired,
    dispatch: (prop_types_default()).func.isRequired
  })
});
const noLinks = {
  title: '',
  links: []
};
ResponsiveApp.getNewsToDisplay = news => {
  let data = {
    items: []
  };
  const startTime = get_default()(news, 'items.news.attributes.startTime');
  const endTime = get_default()(news, 'items.news.attributes.endTime');
  switch (get_default()(news, 'items.news.attributes.timezoneType')) {
    case 'relative':
      {
        const startTimeRelative = startTime && startTime.substr(0, 19);
        const endTimeRelative = endTime && endTime.substr(0, 19);
        const nowTimeRelative = (0,dayjs/* default */.Z)().format('YYYY-MM-DDTHH:mm:ss');
        if ((0,dayjs/* default */.Z)(nowTimeRelative).isAfter((0,dayjs/* default */.Z)(startTimeRelative)) && (0,dayjs/* default */.Z)(endTimeRelative).isAfter((0,dayjs/* default */.Z)(nowTimeRelative))) {
          data = news;
        }
        break;
      }
    case 'absolute':
      {
        if ((0,dayjs/* default */.Z)().isAfter((0,dayjs/* default */.Z)(startTime)) && (0,dayjs/* default */.Z)(endTime).isAfter((0,dayjs/* default */.Z)())) {
          data = news;
        }
        break;
      }
    default:
      {
        data = news;
      }
  }
  return data;
};
ResponsiveApp.queries = {
  breakingNews: () => (0,park_api/* default */.ZP)('breakingNews', {
    fields: {
      breakingNews: 'id,link,color,endTime,startTime,timezoneType'
    },
    page: {
      size: 1,
      number: 1
    },
    sort: '-startTime'
  }).then(payload => ({
    news: get_default()(payload, 'data.data[0]')
  }))
};
const ResponsiveAppContainer = (0,connectContainer/* default */.Z)({
  name: 'ResponsiveApp',
  mapStateToProps: (state, ownProps) => {
    var _ownProps$location$pa, _ownProps$location$pa2, _state$launchDarkly$c, _state$launchDarkly, _state$launchDarkly$c2, _ownProps$children$ty, _ownProps$children, _ownProps$children$ty2, _ownProps$children$ty3, _state$launchDarkly$c3, _state$launchDarkly2, _state$launchDarkly2$, _state$account;
    const breakingNews = ResponsiveApp.getNewsToDisplay((0,getEntity/* getList */.gp)(state, 'breakingNews'));
    const isHeaderVisible = ownProps.location.pathname !== '/nbcuniversalfamily/activate' && get_default()(ownProps.location, 'state.redirectPath') !== '/nbcuniversalfamily/activate' && ownProps.location.pathname !== 'contact-us' && ownProps.location.pathname !== 'general/pages/faq' && ownProps.location.pathname !== 'general/pages/terms' && !get_default()(ownProps.location, 'query.hideHeader');
    const isFooterVisible = ownProps.location.pathname !== '/onboarding/confirmation' && ownProps.location.pathname !== '/nbcuniversalfamily/activate' && get_default()(ownProps.location, 'state.redirectPath') !== '/nbcuniversalfamily/activate' && !get_default()(ownProps.location, 'query.showBridgeScreen') && !get_default()(ownProps.location, 'query.hideFooter');
    const isNotIdentityPage = !((_ownProps$location$pa = ownProps.location.pathname) !== null && _ownProps$location$pa !== void 0 && _ownProps$location$pa.includes('sign-in')) && !((_ownProps$location$pa2 = ownProps.location.pathname) !== null && _ownProps$location$pa2 !== void 0 && _ownProps$location$pa2.includes('sign-up'));
    const isNewsVisible = breakingNews && !!get_default()(breakingNews, 'items.news.attributes.link.title') && isHeaderVisible && isNotIdentityPage && !['/my-account', '/email-preferences'].includes(ownProps.location.pathname);
    const quickLinks = (0,getEntity/* getList */.gp)(state, 'quickLinks');
    const corporateLinks = (0,getEntity/* getList */.gp)(state, 'corporateLinks');
    const showAlias = get_default()(ownProps, 'params.showAlias');
    const bffData = get_default()(state.pages, "[".concat(ownProps.location.pathname, "]")) || get_default()(state.pages, "[".concat((0,getShowPath/* default */.Z)(ownProps.location.pathname), "]"));
    const onboardingExperience = (_state$launchDarkly$c = state === null || state === void 0 ? void 0 : (_state$launchDarkly = state.launchDarkly) === null || _state$launchDarkly === void 0 ? void 0 : (_state$launchDarkly$c2 = _state$launchDarkly.client) === null || _state$launchDarkly$c2 === void 0 ? void 0 : _state$launchDarkly$c2.onboardingExperience) !== null && _state$launchDarkly$c !== void 0 ? _state$launchDarkly$c : {};
    const currentScreen = utils_extractPageName((_ownProps$children$ty = ownProps === null || ownProps === void 0 ? void 0 : (_ownProps$children = ownProps.children) === null || _ownProps$children === void 0 ? void 0 : (_ownProps$children$ty2 = _ownProps$children.type) === null || _ownProps$children$ty2 === void 0 ? void 0 : (_ownProps$children$ty3 = _ownProps$children$ty2.displayName) === null || _ownProps$children$ty3 === void 0 ? void 0 : _ownProps$children$ty3.toLowerCase()) !== null && _ownProps$children$ty !== void 0 ? _ownProps$children$ty : '');
    let isOnboardingExperience = onboardingExperience.timeToOnboarding > 0 && currentScreen === onboardingExperience.modalLocation.toLowerCase();
    const entities = get_default()(onboardingExperience, ['entities'], []);
    const entity = get_default()(ownProps, ['params', 'showAlias'], '') || get_default()(ownProps, ['params', 'brandPage'], '');
    if (isOnboardingExperience && entities.length > 0 && !entities.includes(entity)) {
      isOnboardingExperience = false;
    }
    const isPersonalizationEnabled = (0,checkIsPersonalizationEnabled/* default */.Z)(state);
    return {
      breakingNews: breakingNews && breakingNews.items,
      isHeaderVisible,
      isFooterVisible,
      isNewsVisible,
      isNewsBarOpen: state.navigation.isNewsBarOpen,
      favoriteModal: state.navigation.favoriteModal,
      seriesShortTitle: get_default()(bffData, 'metadata.shortTitle') || get_default()(bffData, 'metadata.seriesShortTitle'),
      seasonNumber: get_default()(bffData, 'metadata.seasonNumber'),
      quickLinks: quickLinks && quickLinks.items,
      corporateLinks: corporateLinks && corporateLinks.items,
      isCoppaCompliant: showAlias && get_default()(state.pages, "".concat(showAlias, ".metadata.isCoppaCompliant"), false),
      ...state,
      analytics: get_default()(bffData, 'analytics'),
      isPeacockPreview: get_default()(ownProps.params, ['brandPage']) === 'peacock',
      isSkipLinkActivated: state.navigation.isSkipLinkActivated,
      previousAlgoliaObject: state.navigation.previousAlgoliaObject,
      nbcAffiliateName: get_default()(state.client, ['geo', 'nbc', 'geoChannel']),
      telemundoAffiliateName: get_default()(state.client, ['geo', 'telemundo', 'geoChannel']),
      nationalBroadcastType: get_default()(state.client, ['geo', 'usa', 'channel'], ''),
      isIterableEnabled: get_default()(state, ['launchDarkly', 'client', 'isIterableEnabled']),
      isIterableInBrowserEnabled: get_default()(state, ['launchDarkly', 'client', 'isIterableInBrowserEnabled'], false),
      showTileFavorites: get_default()(state, ['launchDarkly', 'client', 'showTileFavorites']),
      isOnboardingExperience,
      timeToOnboarding: onboardingExperience.timeToOnboarding * 1000,
      isOnboardingModalVisible: get_default()(state.navigation, ['isOnboardingModalVisible'], false),
      isUserExits: get_default()(state, ['adobePass', 'isAuthenticated']) || get_default()(state, ['account', 'email'], false),
      isDatadogEnabled: get_default()(state, ['launchDarkly', 'client', 'isDatadogEnabled']),
      isSendingServerFlagsEnabled: get_default()(state, ['launchDarkly', 'client', 'isSendingServerFlagsEnabled'], false),
      isLDClientSideReady: get_default()(state, ['launchDarkly', 'isClientSideReady'], false),
      isConciergeEnabled: (_state$launchDarkly$c3 = (_state$launchDarkly2 = state.launchDarkly) === null || _state$launchDarkly2 === void 0 ? void 0 : (_state$launchDarkly2$ = _state$launchDarkly2.client) === null || _state$launchDarkly2$ === void 0 ? void 0 : _state$launchDarkly2$.isConciergeEnabled) !== null && _state$launchDarkly$c3 !== void 0 ? _state$launchDarkly$c3 : false,
      isPersonalizationEnabled,
      isPreLoading: state.navigation.isPreLoading || false,
      isLoggedIn: !!(state !== null && state !== void 0 && (_state$account = state.account) !== null && _state$account !== void 0 && _state$account.email)
    };
  },
  getComponent: (props, loading) => props.breakingNews && props.quickLinks && props.corporateLinks ? ResponsiveApp : loading ? BasicLoadingPage/* default */.Z : BasicFailurePage["default"],
  load: props => {
    if (!props.breakingNews) {
      const promises = {
        breakingNews: ResponsiveApp.queries.breakingNews().catch(error => park_logger_default().warn(error) || []),
        quickLinks: Footer.queries.quickLinks().catch(error => park_logger_default().warn(error) || noLinks),
        corporateLinks: Footer.queries.corporateLinks().catch(error => park_logger_default().warn(error) || noLinks)
      };
      // Object.values is unsupported in several browsers.
      const objectValues = Object.keys(promises).map(key => promises[key]);
      return Promise.all(objectValues).then(results => results.forEach((items, i) => props.dispatch({
        type: actionTypes/* STORE_STATIC_LIST */.$U,
        listKey: Object.keys(promises)[i],
        items
      })));
    }
    return null;
  },
  preload: props => {
    props.dispatch((0,navigation/* setNavigationPreLoadStatus */.EQ)(true));
    if ((0,isClientSide/* default */.Z)()) {
      return props.dispatch((0,launchDarkly/* setLaunchDarklyClientFlags */.EK)(props.isPersonalizationEnabled)).then(() => props.dispatch((0,navigation/* setNavigationPreLoadStatus */.EQ)(false)));
    }
    return Promise.reject();
  }
});
ResponsiveApp.showPages = ['ShowPage', 'VideoPage', 'PhotoLandingPage', 'PhotoDetailsPage', 'CreditLandingPage', 'CreditDetailsPage', 'GuestPage', 'ScalableSalesPage', 'EpisodesPage'];
/* harmony default export */ var ResponsiveApp_ResponsiveApp = (ResponsiveAppContainer);
;// CONCATENATED MODULE: ./applications/responsive/routes.js





const routes_LIVE_ENABLED = config/* default */.Z.get('LivePage.enabled');
const routes_IDENTITY_ENABLED = config/* default */.Z.get('identity.enabled');
const OPEN_MEASUREMENT = config/* default */.Z.get('coreVideo.openMeasurement');
/* harmony default export */ var routes = (/*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "/",
  component: ResponsiveApp_ResponsiveApp
}, /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "activate/:device",
  to: "nbcuniversalfamily/activate"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "activate",
  to: "nbcuniversalfamily/activate"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "contact/general",
  to: "contact-us"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "contactus",
  to: "contact-us"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "shows",
  to: "shows/all"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "video/:filterLabel",
  to: "shows/all"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "video",
  to: "shows/all"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "videos",
  to: "shows/all"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "shows/:brand",
  to: "shows/:brand/popular"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "live/:brand",
  to: "live?brand=:brand"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "movies",
  to: "movies/popular"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "myaccount",
  to: "my-account"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "(*)".concat(OPEN_MEASUREMENT.omWebScript),
  to: "generetic/scripts/".concat(OPEN_MEASUREMENT.omWebScript)
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "(*)".concat(OPEN_MEASUREMENT.omVerificationScript),
  to: "generetic/scripts/".concat(OPEN_MEASUREMENT.omVerificationScript)
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "myaccount/email-preference",
  to: "my-account/email-preferences"
}), /*#__PURE__*/react.createElement(es/* Redirect */.l_, {
  from: "emailpreferences",
  to: "email-preferences"
}), /*#__PURE__*/react.createElement(es/* IndexRoute */.fJ, {
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | HomePage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(5970), __webpack_require__.e(320), __webpack_require__.e(7746), __webpack_require__.e(9507), __webpack_require__.e(3120), __webpack_require__.e(8460)]).then((require => cb(null, (__webpack_require__(2678)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "contact(us)(-us)(/general)",
  getComponent: (nextProps, cb) => __webpack_require__.e(/* require.ensure | ContactPage */ 8718).then((require => cb(null, (__webpack_require__(54522)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "/live-upcoming",
  getComponent: (nextProps, cb) => __webpack_require__.e(/* require.ensure | LiveUpcomingPage */ 4655).then((require => cb(null, (__webpack_require__(33152)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "/replays",
  getComponent: (nextProps, cb) => __webpack_require__.e(/* require.ensure | LiveUpcomingPage */ 4655).then((require => cb(null, (__webpack_require__(24996)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "404",
  getComponent: (nextProps, cb) => Promise.resolve(/* require.ensure */).then((require => cb(null, (__webpack_require__(36298)["default"]))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "nbcuniversalfamily/activate",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | ActivatePage */[__webpack_require__.e(4317), __webpack_require__.e(8374), __webpack_require__.e(3217)]).then((require => cb(null, (__webpack_require__(18713)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "apps",
  getComponent: (nextProps, cb) => __webpack_require__.e(/* require.ensure | AppPage */ 7427).then((require => cb(null, (__webpack_require__(22690)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "schedule",
  getComponent: (nextProps, cb) => __webpack_require__.e(/* require.ensure | SchedulePage */ 6311).then((require => cb(null, (__webpack_require__(74878)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "search",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | SearchPage */[__webpack_require__.e(4955), __webpack_require__.e(721), __webpack_require__.e(1281)]).then((require => cb(null, (__webpack_require__(63769)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), routes_LIVE_ENABLED && /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "live",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | LivePage */[__webpack_require__.e(6467), __webpack_require__.e(4317), __webpack_require__.e(8374), __webpack_require__.e(213), __webpack_require__.e(7556)]).then((require => cb(null, (__webpack_require__(77494)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), routes_IDENTITY_ENABLED && [/*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "sign-up(/email)",
  key: "sign-up",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | SignUpPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(5970), __webpack_require__.e(3533)]).then((require => cb(null, (__webpack_require__(35711)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "sign-in/complete",
  key: "sign-in/complete",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | SignInCompletePage */[__webpack_require__.e(4317), __webpack_require__.e(2928)]).then((require => cb(null, (__webpack_require__(17480)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "sign-up/complete",
  key: "sign-up/complete",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | SignUpCompletePage */[__webpack_require__.e(4317), __webpack_require__.e(1746)]).then((require => cb(null, (__webpack_require__(7520)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "sign-in",
  key: "sign-in",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | SignInPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(5970), __webpack_require__.e(7967)]).then((require => cb(null, (__webpack_require__(81369)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "sign-in/:vendorType",
  key: "sign-in/vendor",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | VendorLoginPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(5970), __webpack_require__.e(9507), __webpack_require__.e(5049)]).then((require => cb(null, (__webpack_require__(18900)/* ["default"] */ .ZP))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "mvpd-picker(/change)",
  key: "mvpd-picker",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | MvpdPage */[__webpack_require__.e(4317), __webpack_require__.e(8374), __webpack_require__.e(1637)]).then((require => cb(null, (__webpack_require__(72534)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "mvpd-bridge-screen",
  key: "mvpd-bridge-screen",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | MvpdBridgeScreenPage */[__webpack_require__.e(4317), __webpack_require__.e(5979)]).then((require => cb(null, (__webpack_require__(97195)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "provider-linked",
  key: "provider-linked",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | ProviderLinkedPage */[__webpack_require__.e(4317), __webpack_require__.e(7388)]).then((require => cb(null, (__webpack_require__(11926)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
})], /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "sports",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | SportsPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(5970), __webpack_require__.e(320), __webpack_require__.e(7746), __webpack_require__.e(9507), __webpack_require__.e(3120), __webpack_require__.e(7380)]).then((require => cb(null, (__webpack_require__(51010)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "paris2024",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | OlympicsPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(5970), __webpack_require__.e(320), __webpack_require__.e(7746), __webpack_require__.e(9507), __webpack_require__.e(3120), __webpack_require__.e(247)]).then((require => cb(null, (__webpack_require__(57572)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "networks",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | AllBrandsPage */[__webpack_require__.e(3639), __webpack_require__.e(8867)]).then((require => cb(null, (__webpack_require__(66393)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "networks/:brandPage",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | BrandPage */[__webpack_require__.e(4317), __webpack_require__.e(320), __webpack_require__.e(1311)]).then((require => cb(null, (__webpack_require__(60824)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "shows/:brand(/:category)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | AllShowsPage */[__webpack_require__.e(3639), __webpack_require__.e(2285)]).then((require => cb(null, (__webpack_require__(70357)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "movies/:category",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | AllMoviesPage */[__webpack_require__.e(3639), __webpack_require__.e(4935)]).then((require => cb(null, (__webpack_require__(37769)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias(/about)(/more)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | ShowPage */[__webpack_require__.e(4317), __webpack_require__.e(3639), __webpack_require__.e(320), __webpack_require__.e(7746), __webpack_require__.e(6651)]).then((require => cb(null, (__webpack_require__(25938)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/)(:showAlias/)video/:seo/:videoId",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | VideoPage */[__webpack_require__.e(6467), __webpack_require__.e(4317), __webpack_require__.e(3639), __webpack_require__.e(8374), __webpack_require__.e(213), __webpack_require__.e(9451)]).then((require => cb(null, (__webpack_require__(70685)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "scalablesales/embeddedplayer",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | EmbeddedVideoPage */[__webpack_require__.e(6467), __webpack_require__.e(4317), __webpack_require__.e(3639), __webpack_require__.e(8374), __webpack_require__.e(213), __webpack_require__.e(9451), __webpack_require__.e(5701)]).then((require => cb(null, (__webpack_require__(81727)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "playlist/:playlistName",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | VideoPage */[__webpack_require__.e(6467), __webpack_require__.e(4317), __webpack_require__.e(3639), __webpack_require__.e(8374), __webpack_require__.e(213), __webpack_require__.e(9451)]).then((require => cb(null, (__webpack_require__(70685)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "watch/:streamCategory(/:streamName/:pid)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | VideoPage */[__webpack_require__.e(6467), __webpack_require__.e(4317), __webpack_require__.e(3639), __webpack_require__.e(8374), __webpack_require__.e(213), __webpack_require__.e(9451)]).then((require => cb(null, (__webpack_require__(70685)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoLandingPage */[__webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(43)]).then((require => cb(null, (__webpack_require__(83728)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos/season-:seasonNumber",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoLandingPage */[__webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(43)]).then((require => cb(null, (__webpack_require__(83728)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos/season-:seasonNumber/category/:category",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoLandingPage */[__webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(43)]).then((require => cb(null, (__webpack_require__(83728)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos/season-:seasonNumber/:machineName",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoDetailsPage */[__webpack_require__.e(4317), __webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(7746), __webpack_require__.e(8997)]).then((require => cb(null, (__webpack_require__(49713)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos/season-:seasonNumber/:machineName/:photoId",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoDetailsPage */[__webpack_require__.e(4317), __webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(7746), __webpack_require__.e(8997)]).then((require => cb(null, (__webpack_require__(49713)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos/category/:category",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoLandingPage */[__webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(43)]).then((require => cb(null, (__webpack_require__(83728)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos/:machineName",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoDetailsPage */[__webpack_require__.e(4317), __webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(7746), __webpack_require__.e(8997)]).then((require => cb(null, (__webpack_require__(49713)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/photos/:machineName/:photoId",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | PhotoDetailsPage */[__webpack_require__.e(4317), __webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(7746), __webpack_require__.e(8997)]).then((require => cb(null, (__webpack_require__(49713)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/episodes(/:season)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | EpisodesPage */[__webpack_require__.e(4317), __webpack_require__.e(3639), __webpack_require__.e(320), __webpack_require__.e(8462)]).then((require => cb(null, (__webpack_require__(22375)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/guest(s)(/:name)(/:guest)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | GuestsPage */[__webpack_require__.e(4955), __webpack_require__.e(3639), __webpack_require__.e(5884)]).then((require => cb(null, (__webpack_require__(78338)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/credits(/:roleName)(/season-:seasonNumber)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | CreditLandingPage */[__webpack_require__.e(3639), __webpack_require__.e(1325)]).then((require => cb(null, (__webpack_require__(4664)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(classic-tv/)(the-tonight-show/classic/):showAlias/credits/:roleName(/season-:seasonNumber)(/:creditName)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | CreditDetailsPage */[__webpack_require__.e(3639), __webpack_require__.e(2243)]).then((require => cb(null, (__webpack_require__(24826)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: ":show/exclusives/:scalableId(/video)(/:videoId)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | ScalableSalesPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(4955), __webpack_require__.e(1186), __webpack_require__.e(3639), __webpack_require__.e(5970), __webpack_require__.e(9507), __webpack_require__.e(2326)]).then((require => cb(null, (__webpack_require__(27241)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: ":show/pages/:scalableId(/video)(/:videoId)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | ScalableSalesPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(4955), __webpack_require__.e(1186), __webpack_require__.e(3639), __webpack_require__.e(5970), __webpack_require__.e(9507), __webpack_require__.e(2326)]).then((require => cb(null, (__webpack_require__(27241)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "saturday-night-live/(explore)(cast)(search)(:seasonNumber)/(:seasonNumber)(:castName)(:searchTerm)(episode)(/:eisodeTitle)",
  getComponent: (nextProps, cb) => Promise.resolve(/* require.ensure */).then((require => cb(null, __webpack_require__(36298), 'BasicFailurePage'.default)).bind(null, __webpack_require__))['catch'](__webpack_require__.oe),
  onEnter: (nextProps, redirect, cb) => {
    if (typeof window !== 'undefined') {
      const redirectUrl = "".concat(nextProps.location.pathname);
      park_logger_default().log('Forcing page refresh', redirectUrl);
      window.location = redirectUrl;
      return;
    }
    cb();
  }
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "(saturday-night-live)(heroes)(nissan)(the-voice/nissan)(exclusives)(pages)/:scalableId(/video)(/:videoId)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | ScalableSalesPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(4955), __webpack_require__.e(1186), __webpack_require__.e(3639), __webpack_require__.e(5970), __webpack_require__.e(9507), __webpack_require__.e(2326)]).then((require => cb(null, (__webpack_require__(27241)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: ":show/tickets/:scalableId(/video)(/:videoId)",
  getComponent: (nextProps, cb) => Promise.all(/* require.ensure | ScalableSalesPage */[__webpack_require__.e(4317), __webpack_require__.e(6148), __webpack_require__.e(4955), __webpack_require__.e(1186), __webpack_require__.e(3639), __webpack_require__.e(5970), __webpack_require__.e(9507), __webpack_require__.e(2326)]).then((require => cb(null, (__webpack_require__(27241)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: ":show/video/latest",
  onEnter: nextProps => {
    if (typeof window === 'undefined') {
      return;
    }
    window.location = nextProps.location.pathname;
  }
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "onboarding(/categories)(/favorites)(/confirmation)",
  getComponent: (nextProps, cb) => __webpack_require__.e(/* require.ensure | OnboardingPage */ 3514).then((require => cb(null, (__webpack_require__(44744)/* ["default"] */ .Z))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe)
}), /*#__PURE__*/react.createElement(es/* Route */.AW, {
  path: "*",
  getComponent: (nextProps, cb) => Promise.resolve(/* require.ensure */).then((require => cb(null, (__webpack_require__(36298)["default"]))).bind(null, __webpack_require__))['catch'](__webpack_require__.oe),
  status: 404
})));
;// CONCATENATED MODULE: ./applications/responsive/browser.js
// Polyfills






// Global CSS


// Initialize Smoothscroll
smoothscroll_default().polyfill();

// Run the app
browserRender(routes);

/***/ }),

/***/ 98076:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);


function AriaLive(_ref) {
  let {
    children
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    "aria-live": "polite",
    role: "status",
    className: "sr-only"
  }, children);
}
AriaLive.propTypes = {
  children: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().node)
};
/* harmony default export */ __webpack_exports__.Z = (AriaLive);

/***/ }),

/***/ 31514:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74369);




const AUDIO_DESCRIPTION_ICON = "".concat(config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('app.assetPath'), "images/icons/audio-description.png");
const AudioDescriptionBadge = _ref => {
  let {
    className
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('badge__simple badge__audio-description', className)
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, "AD"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("img", {
    src: AUDIO_DESCRIPTION_ICON,
    alt: ""
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: "sr-only"
  }, "Audio description available."));
};
AudioDescriptionBadge.propTypes = {
  className: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string)
};
/* harmony default export */ __webpack_exports__.Z = (AudioDescriptionBadge);

/***/ }),

/***/ 58808:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);



const AudioLanguagesBadge = _ref => {
  let {
    className,
    audioLanguage = []
  } = _ref;
  if (!audioLanguage.length) {
    return null;
  }
  const languagesList = audioLanguage.filter(lang => lang !== 'ad');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('badge__simple badge__simple--audio-language', className)
  }, languagesList.join(' · '));
};
AudioLanguagesBadge.propTypes = {
  className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  audioLanguage: prop_types__WEBPACK_IMPORTED_MODULE_2___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_2___default().string))
};
/* harmony default export */ __webpack_exports__.Z = (AudioLanguagesBadge);

/***/ }),

/***/ 53226:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33786);



const FreeBadge = _ref => {
  let {
    language = 'en',
    children
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    className: "badge__free"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: "badge__free--inner"
  }, (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(language, 'general.free')), children);
};
FreeBadge.propTypes = {
  language: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  children: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().node)
};
/* harmony default export */ __webpack_exports__.Z = (FreeBadge);

/***/ }),

/***/ 31652:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33786);




const LiveBadge = _ref => {
  let {
    className,
    label,
    langauge = 'en'
  } = _ref;
  let liveLabel = label;
  if (!label) {
    liveLabel = (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(langauge, 'general.live');
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('badge__live', className)
  }, liveLabel);
};
LiveBadge.propTypes = {
  className: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  label: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  langauge: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string)
};
/* harmony default export */ __webpack_exports__.Z = (LiveBadge);

/***/ }),

/***/ 89770:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74369);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _ButtonLink_ButtonLink__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(83979);
/* harmony import */ var _Button_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(12394);
/* harmony import */ var _utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(33786);








const permalinkBase = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('permalinkBase');
const APP = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('app');
const linkText = "Go to ".concat(APP.name.replace('.com', ''), " home");
const refresh = () => window.location.reload();
const BasicFailure = _ref => {
  let {
    voteSaveCopy,
    voteSaveLink,
    hasShelf,
    is404,
    language
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("section", {
    className: "basic-failure"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    className: "basic-failure__content"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_3___default()('basic-failure__message', {
      'basic-failure__message--has-shelf': hasShelf
    })
  }, is404 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("p", null, (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(language, 'basicFailurePage.notFoundTitle'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("br", null), (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(language, 'basicFailurePage.notFoundSubtitle')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("a", {
    className: "button-link",
    href: permalinkBase
  }, linkText)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("p", null, (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(language, 'basicFailurePage.notLoadingTitle')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("p", {
    className: "subtitle"
  }, (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(language, 'basicFailurePage.notLoadingSubtitle')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Button_Button__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
    onClick: refresh,
    modifier: "filled",
    text: "Try again"
  })), APP.appName === 'nbc' && voteSaveCopy && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    className: "basic-failure__vote"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("p", null, "".concat(voteSaveCopy, ' ')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ButtonLink_ButtonLink__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    text: "Go Now",
    href: voteSaveLink,
    modifier: "hollow",
    isExternal: true
  })))));
};
BasicFailure.propTypes = {
  voteSaveCopy: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().string),
  voteSaveLink: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().string),
  hasShelf: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().bool),
  is404: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().bool),
  language: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().string)
};
/* harmony default export */ __webpack_exports__.Z = (BasicFailure);

/***/ }),

/***/ 36298:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20688);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74369);
/* harmony import */ var _BasicFailure_BasicFailure__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(89770);
/* harmony import */ var _LazyComponent_LazyComponent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51361);
/* harmony import */ var _utils_recordPageView__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59409);
/* harmony import */ var _utils_getErrorAttributes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(93152);
/* harmony import */ var _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(51054);
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(26566);
/* harmony import */ var _utils_getTimezone__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(69661);
/* harmony import */ var _utils_isDayZeroUser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(36849);
/* harmony import */ var _utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(33786);
/* harmony import */ var _utils_checkIsPersonalizationEnabled__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(64108);
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }














const ONEAPP_FLAG = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('API.friendship.oneApp');
const LAUNCHDARKLY_FLAG = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('API.friendship.launchDarkly');
const PROFILES = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('API.friendship.defaultProfiles');
const APP = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('API.friendship.appName');
const shelfTypes = {
  neural: 'neuralNetShelf',
  featured: 'featuredShowsSection'
};
const THE_VOICE = 'voice';
const AMERICAS_GOT_TALENT = 'agt';
const AMERICAN_SONG_CONTEST = 'asc';
const PEOPLES_CHOICE_COUNTRY_AWARDS = 'pcca';
const PEOPLES_CHOICE_AWARDS = 'pca';
const COPY_VARIATIONS = {
  [THE_VOICE]: {
    translationKey: 'basicFailurePage.voice',
    url: 'https://voice.vote.nbc.com'
  },
  [AMERICAS_GOT_TALENT]: {
    translationKey: 'basicFailurePage.agt',
    url: 'https://agt.vote.nbc.com'
  },
  [AMERICAN_SONG_CONTEST]: {
    translationKey: 'basicFailurePage.asc',
    url: 'https://asc.vote.nbc.com'
  },
  [PEOPLES_CHOICE_COUNTRY_AWARDS]: {
    translationKey: 'basicFailurePage.pcca',
    url: 'https://pcca.votenow.nbc.com'
  },
  [PEOPLES_CHOICE_AWARDS]: {
    translationKey: 'basicFailurePage.pca',
    url: 'http://votepca.com'
  }
};
class BasicFailurePage extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    _defineProperty(this, "handleLazyShelfLoaded", isSuccessful => {
      if (!isSuccessful && this.state.shelf === shelfTypes.neural) this.setState({
        shelf: shelfTypes.featured
      });
    });
    _defineProperty(this, "fetchMparticleId", () => {
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP.getId().then(userId => {
        this.setState({
          userId
        });
      });
    });
    _defineProperty(this, "renderShelf", () => {
      const {
        authorized,
        location,
        platform,
        timeZone
      } = this.props;
      const {
        isPersonalizationEnabled
      } = this.props;
      const {
        shelf,
        userId
      } = this.state;
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_LazyComponent_LazyComponent__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
        onLoad: this.handleLazyShelfLoaded,
        componentProps: {
          location,
          fallbackListTitle: 'Top Picks for You'
        },
        queryName: shelf,
        path: ['data', shelf],
        instanceID: "-1",
        queryVariables: {
          oneApp: ONEAPP_FLAG,
          device: 'web',
          language: 'en',
          app: APP || 'nbc',
          timeZone: timeZone || (0,_utils_getTimezone__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(),
          ...(LAUNCHDARKLY_FLAG ? {
            ld: true,
            profile: (0,_utils_isDayZeroUser__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .ZP)() ? PROFILES.concat(['11111']) : PROFILES
          } : ''),
          platform,
          authorized,
          userId: isPersonalizationEnabled ? userId : '0'
        }
      });
    });
    _defineProperty(this, "getVoteSaveText", is404 => {
      var _COPY_VARIATIONS$copy, _COPY_VARIATIONS$copy2, _COPY_VARIATIONS$copy3;
      const {
        voteSave404Copy,
        voteAndSaveSiteNotLoadingCopy,
        language
      } = this.props;
      const copyType = is404 ? voteSave404Copy === null || voteSave404Copy === void 0 ? void 0 : voteSave404Copy.toLowerCase() : voteAndSaveSiteNotLoadingCopy === null || voteAndSaveSiteNotLoadingCopy === void 0 ? void 0 : voteAndSaveSiteNotLoadingCopy.toLowerCase();
      return {
        voteSaveCopy: (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(language, (_COPY_VARIATIONS$copy = COPY_VARIATIONS[copyType]) === null || _COPY_VARIATIONS$copy === void 0 ? void 0 : _COPY_VARIATIONS$copy.translationKey),
        voteSaveLink: (_COPY_VARIATIONS$copy2 = (_COPY_VARIATIONS$copy3 = COPY_VARIATIONS[copyType]) === null || _COPY_VARIATIONS$copy3 === void 0 ? void 0 : _COPY_VARIATIONS$copy3.url) !== null && _COPY_VARIATIONS$copy2 !== void 0 ? _COPY_VARIATIONS$copy2 : null
      };
    });
    this.state = {
      userId: '',
      shelf: shelfTypes.neural
    };
  }
  componentDidMount() {
    (0,_utils_recordPageView__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .ZP)(BasicFailurePage.analytics(this.props));
    if (this.props.bffPageName) {
      var _this$props$error, _this$props$error2;
      const errorAttributes = (0,_utils_getErrorAttributes__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)({
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_TYPE]: 'Page',
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_SYSTEM]: "".concat(this.props.bffPageName, " BFF"),
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_DESCRIPTION]: "".concat(this.props.bffPageName, " BFF call failed for path ").concat(this.props.location.pathname),
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_FATAL]: 'True',
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_FRIENDLY_MESSAGE]: (_this$props$error = this.props.error) === null || _this$props$error === void 0 ? void 0 : _this$props$error.message,
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_STACK]: (_this$props$error2 = this.props.error) === null || _this$props$error2 === void 0 ? void 0 : _this$props$error2.stack
      });
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .ZP.trackEvent({
        name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR,
        type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.NAVIGATION,
        attributes: errorAttributes
      });
    }
    if (this.props.is404shelfEnabled) this.fetchMparticleId();
  }
  componentDidUpdate(prevProps) {
    if (!prevProps.is404shelfEnabled && this.props.is404shelfEnabled) this.fetchMparticleId();
  }
  render() {
    const {
      is404shelfEnabled,
      location,
      error = {},
      language
    } = this.props;
    const is404 = error.status === 404 || location.pathname === '/404';
    const {
      voteSaveCopy,
      voteSaveLink
    } = this.getVoteSaveText(is404);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: "basic-failure-page"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_BasicFailure_BasicFailure__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
      voteSaveCopy: voteSaveCopy,
      voteSaveLink: voteSaveLink,
      hasShelf: is404shelfEnabled,
      is404: is404,
      language: language
    }), is404shelfEnabled && this.state.userId && this.renderShelf());
  }
}
_defineProperty(BasicFailurePage, "propTypes", {
  location: prop_types__WEBPACK_IMPORTED_MODULE_12___default().shape({
    pathname: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)
  }),
  bffPageName: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),
  voteSave404Copy: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),
  is404shelfEnabled: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),
  authorized: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),
  platform: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),
  error: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object),
  timeZone: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),
  isPersonalizationEnabled: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),
  voteAndSaveSiteNotLoadingCopy: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),
  language: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)
});
BasicFailurePage.title = () => 'Oops! | Page Not Found | NBC';
BasicFailurePage.meta = () => [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", null, BasicFailurePage.title())];
BasicFailurePage.analytics = props => {
  const {
    location: {
      pathname
    }
  } = props;
  const title = BasicFailurePage.title();
  return {
    pathname,
    title,
    mps: {
      site: 'nbc-web',
      type: 'page',
      cat: 'ERROR',
      path: 'error'
    },
    omniture: {
      name: 'global:error-page',
      context: {
        pageTitle: 'errorPage'
      }
    }
  };
};
BasicFailurePage.defaultStatus = 404;
/* harmony default export */ __webpack_exports__["default"] = ((0,react_redux__WEBPACK_IMPORTED_MODULE_1__/* .connect */ .$j)(state => {
  var _state$launchDarkly$c, _state$launchDarkly$c2, _state$launchDarkly$c3, _state$launchDarkly$c4, _state$adobePass$isAu, _state$adobePass, _state$client$userAge, _state$client$geo;
  return {
    voteSave404Copy: (_state$launchDarkly$c = state.launchDarkly.client) === null || _state$launchDarkly$c === void 0 ? void 0 : _state$launchDarkly$c.voteSave404Copy,
    voteAndSaveSiteNotLoadingCopy: (_state$launchDarkly$c2 = state.launchDarkly.client) === null || _state$launchDarkly$c2 === void 0 ? void 0 : _state$launchDarkly$c2.voteAndSaveSiteNotLoadingCopy,
    is404shelfEnabled: (_state$launchDarkly$c3 = (_state$launchDarkly$c4 = state.launchDarkly.client) === null || _state$launchDarkly$c4 === void 0 ? void 0 : _state$launchDarkly$c4.is404shelfEnabled) !== null && _state$launchDarkly$c3 !== void 0 ? _state$launchDarkly$c3 : false,
    authorized: !!((_state$adobePass$isAu = (_state$adobePass = state.adobePass) === null || _state$adobePass === void 0 ? void 0 : _state$adobePass.isAuthenticated) !== null && _state$adobePass$isAu !== void 0 ? _state$adobePass$isAu : false),
    platform: (_state$client$userAge = state.client.userAgent) !== null && _state$client$userAge !== void 0 && _state$client$userAge.isMobile ? 'mobileWeb' : 'web',
    timeZone: ((_state$client$geo = state.client.geo) === null || _state$client$geo === void 0 ? void 0 : _state$client$geo.timeZone) || 'America/New_York',
    isPersonalizationEnabled: (0,_utils_checkIsPersonalizationEnabled__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)(state),
    language: state.client.language
  };
})(BasicFailurePage));

/***/ }),

/***/ 85078:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_recordPageView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59409);
/* harmony import */ var _Spinner_Spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(19868);
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }








// The server should not decide to render this page, but it's theoretically
// possible to get to this path.  In which case, we want don't want to crash.
class BasicLoadingPage extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  componentDidMount() {
    // BasicLoading is an interstitial, it shouldn't be served as a real page
    // If it does get served, let's report it as an error page.
    if ((0,_utils_recordPageView__WEBPACK_IMPORTED_MODULE_4__/* .isFirstPageView */ .cx)()) {
      if (this.props.skipAnalytics) {
        document.title = BasicLoadingPage.title();
      } else {
        (0,_utils_recordPageView__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP)(BasicLoadingPage.analytics(this.props));
      }
    }
  }
  render() {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('basic-loading-page', {
        'basic-loading-page--show-page': lodash_get__WEBPACK_IMPORTED_MODULE_3___default()(this.props, 'params.showAlias', false)
      })
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, this.props.spinner));
  }
}
_defineProperty(BasicLoadingPage, "propTypes", {
  location: prop_types__WEBPACK_IMPORTED_MODULE_6___default().shape({
    pathname: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)
  }),
  spinner: prop_types__WEBPACK_IMPORTED_MODULE_6___default().shape({
    theme: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOf([null, 'dark', 'light']),
    top: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)
  }),
  skipAnalytics: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool)
});
_defineProperty(BasicLoadingPage, "defaultProps", {
  spinner: {
    theme: 'light',
    top: '25%'
  }
});
BasicLoadingPage.title = () => "Page Loading - ".concat(config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('app.name'));
BasicLoadingPage.meta = () => [/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", null, BasicLoadingPage.title())];
BasicLoadingPage.analytics = props => {
  const {
    location: {
      pathname
    }
  } = props;
  const title = BasicLoadingPage.title();
  return {
    pathname,
    title,
    mps: {
      site: 'nbc-web',
      type: 'error',
      path: 'error',
      cat: 'error'
    },
    mParticle: {
      'Page Name': title,
      'Page Type': 'Error',
      Brand: 'None'
    },
    omniture: {
      name: 'global:loading-page',
      context: {
        pageTitle: 'errorPage'
      }
    }
  };
};
/* harmony default export */ __webpack_exports__.Z = (BasicLoadingPage);

/***/ }),

/***/ 82020:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48403);
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_capitalize__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20688);
/* harmony import */ var _utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(33786);
/* harmony import */ var _utils_getMediaQuery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5053);
/* harmony import */ var _Image_Image__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(61737);
/* harmony import */ var _TruncatedText_TruncatedText__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(57905);

function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }









class BrandLogo extends react__WEBPACK_IMPORTED_MODULE_1__.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "state", {
      isFailed: false
    });
    _defineProperty(this, "onError", () => this.setState({
      isFailed: true
    }));
  }
  render() {
    const {
      align,
      brandTitle,
      className,
      id,
      url
    } = this.props;
    const {
      srcSetConfig,
      isFallbackVisible,
      isSponsorLogo
    } = this.props;
    const {
      sponsorLogoAltText,
      truncate,
      reduce
    } = this.props;
    const {
      language
    } = this.props;
    const brandTitleTextReduction = (0,_utils_getMediaQuery__WEBPACK_IMPORTED_MODULE_6__/* .isXLargeDesktopSize */ .WI)() ? 0 : reduce;
    const textAlign = align === 'left' ? 'flex-start' : align === 'right' ? 'flex-end' : 'center';
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()("brand-logo", {
        'brand-logo--fallback': !url || this.state.isFailed,
        [className]: !!className,
        ["brand-logo--align-".concat(align)]: !!textAlign
      })
    }, url && !this.state.isFailed ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Image_Image__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, {
      className: "brand-logo__image",
      alt: brandTitle,
      srcSet: {
        path: url
      },
      sizes: "100vw",
      srcSetConfig: srcSetConfig,
      onError: this.onError
    }) : isFallbackVisible ? isSponsorLogo ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
      className: "brand-logo__sponsor-title"
    }, lodash_capitalize__WEBPACK_IMPORTED_MODULE_3___default()(sponsorLogoAltText || "".concat((0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(language, 'general.presentedBy'), " ").concat(brandTitle))) : truncate ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_TruncatedText_TruncatedText__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
      id: id,
      className: "brand-logo__title",
      text: brandTitle,
      reduce: brandTitleTextReduction
    }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
      className: "brand-logo__title"
    }, brandTitle) : null);
  }
}
BrandLogo.defaultProps = {
  align: 'right',
  isFallbackVisible: true,
  srcSetConfig: {
    maxWidth: 340
  }
};
BrandLogo.propTypes = {
  brandTitle: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string).isRequired,
  url: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
  id: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
  align: prop_types__WEBPACK_IMPORTED_MODULE_9___default().oneOf(['center', 'right', 'left']),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
  isFallbackVisible: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
  isSponsorLogo: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
  sponsorLogoAltText: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string),
  srcSetConfig: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().object),
  truncate: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().bool),
  reduce: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().number),
  language: (prop_types__WEBPACK_IMPORTED_MODULE_9___default().string)
};
/* harmony default export */ __webpack_exports__.Z = ((0,react_redux__WEBPACK_IMPORTED_MODULE_4__/* .connect */ .$j)(state => ({
  language: state.client.language
}))(BrandLogo));

/***/ }),

/***/ 12394:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ Button_Button; }
});

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(94184);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
;// CONCATENATED MODULE: ./components/Button/DotsSpinner/DotsSpinner.js


const DotsSpinner = () => /*#__PURE__*/react.createElement("div", {
  className: "dots-spinner"
}, [...Array(3)].map((x, i) => /*#__PURE__*/react.createElement("span", {
  key: i,
  className: "dots-spinner--dot"
})));
/* harmony default export */ var DotsSpinner_DotsSpinner = (DotsSpinner);
;// CONCATENATED MODULE: ./components/Button/Button.js
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const ButtonText = _ref => {
  let {
    isSubmitting,
    isSuccessful,
    shouldShowDots = true,
    text
  } = _ref;
  if (!shouldShowDots) {
    return /*#__PURE__*/react.createElement("span", null, /*#__PURE__*/react.createElement("i", null), text || '');
  }
  return /*#__PURE__*/react.createElement("span", null, /*#__PURE__*/react.createElement("i", null), isSubmitting && !isSuccessful && /*#__PURE__*/react.createElement(DotsSpinner_DotsSpinner, null), !isSubmitting && !isSuccessful ? text : '');
};
ButtonText.propTypes = {
  isSubmitting: (prop_types_default()).bool,
  isSuccessful: (prop_types_default()).bool,
  shouldShowDots: (prop_types_default()).bool,
  text: (prop_types_default()).string.isRequired
};
const Button = props => {
  const style = {
    ...props.style
  } || {};
  if (props.color && props.modifier !== 'hollow') {
    style.backgroundColor = props.color;
  }
  if (props.color && props.modifier === 'hollow') {
    style.color = props.color;
    style.borderColor = props.color;
  }
  return (
    /*#__PURE__*/
    // Button type can not be dynamic
    /* eslint-disable react/button-has-type */
    react.createElement("button", _extends({
      className: classnames_default()('button', {
        'button--submitting': props.isSubmitting
      }, {
        'button--disabled': !props.isSubmitting && props.disabled
      }, {
        'button--success': props.isSuccessful
      }, {
        'button--hidden': props.isHidden
      }, {
        ["button--".concat(props.modifier)]: props.modifier
      }, props.className),
      disabled: props.disabled,
      onClick: props.onClick,
      onKeyPress: props.onKeyPress,
      onMouseDown: props.onMouseDown,
      style: style,
      tabIndex: props.tabIndex,
      type: props.type,
      ref: props.buttonRef
      // eslint-disable-next-line jsx-a11y/no-autofocus
    }, props.autofocus ? {
      autoFocus: props.autofocus
    } : {}), props.text ? /*#__PURE__*/react.createElement(ButtonText, props) : props.children)
    /* eslint-enable react/button-has-type */
  );
};
Button.propTypes = {
  className: (prop_types_default()).string,
  disabled: (prop_types_default()).bool,
  isSubmitting: (prop_types_default()).bool,
  modifier: prop_types_default().oneOf([null, 'facebook', 'secondary', 'filled', 'sweeps', 'email', 'hollow', 'apple', 'link']),
  onClick: (prop_types_default()).func,
  onKeyPress: (prop_types_default()).func,
  onMouseDown: (prop_types_default()).func,
  spinner: prop_types_default().shape({
    position: prop_types_default().oneOf([null, 'relative', 'absolute']),
    size: prop_types_default().oneOf([null, 'small', 'large']),
    theme: prop_types_default().oneOf([null, 'dark', 'light'])
  }),
  style: (prop_types_default()).object,
  tabIndex: (prop_types_default()).number,
  text: (prop_types_default()).string,
  type: (prop_types_default()).string,
  color: (prop_types_default()).string,
  isSuccessful: (prop_types_default()).bool,
  buttonRef: (prop_types_default()).object,
  autofocus: (prop_types_default()).bool
};
Button.defaultProps = {
  spinner: {
    position: 'absolute',
    size: 'small',
    theme: 'light'
  }
};
/* harmony default export */ var Button_Button = (Button);

/***/ }),

/***/ 83979:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(61409);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const ButtonLink = _ref => {
  let {
    text,
    href,
    query,
    state,
    className,
    modifier,
    children,
    isExternal,
    ...rest
  } = _ref;
  return isExternal ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", _extends({
    href: href,
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('button-link', {
      'button-link--hollow': modifier === 'hollow'
    }, className),
    target: "_blank",
    rel: "noopener noreferrer"
  }, rest), text || children) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_2__/* .Link */ .rU, _extends({
    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('button-link', {
      'button-link--hollow': modifier === 'hollow'
    }, className),
    to: {
      pathname: href,
      ...(state ? {
        state
      } : null),
      ...(query ? {
        query
      } : null)
    }
  }, rest), text || children);
};
ButtonLink.propTypes = {
  className: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  modifier: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  text: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  href: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  children: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().node)
};
/* harmony default export */ __webpack_exports__.Z = (ButtonLink);

/***/ }),

/***/ 45375:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ButtonLink_ButtonLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83979);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const CTALink = _ref => {
  let {
    ctaData,
    onClick,
    className,
    tabIndex,
    ...rest
  } = _ref;
  const isExternalPage = (ctaData === null || ctaData === void 0 ? void 0 : ctaData.destinationType) === 'externalPage';
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ButtonLink_ButtonLink__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z, _extends({
    href: ctaData.destination,
    onClick: onClick,
    className: className,
    tabIndex: tabIndex,
    isExternal: isExternalPage
  }, rest), ctaData.title);
};
CTALink.propTypes = {
  ctaData: prop_types__WEBPACK_IMPORTED_MODULE_2___default().shape({
    destination: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
    title: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)
  }),
  tabIndex: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().number),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func)
};
/* harmony default export */ __webpack_exports__.Z = (CTALink);

/***/ }),

/***/ 27462:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Dots = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
  className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('dots__wrapper', {
    ["".concat(props.prefix, "__dots__wrapper")]: !!props.prefix
  })
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
  className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('dots', {
    ["".concat(props.prefix, "__dots")]: !!props.prefix
  })
}, Object.keys(props.items).map(key => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", _extends({
  type: "button",
  key: key,
  "data-index": key,
  onClick: props.onDotClick,
  className: "dots__dot"
}, key === String(props.activeItem) ? {
  'data-active': 'true'
} : {}, {
  "aria-label": "Go to slide number ".concat(Number(key) + 1)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null)))));
Dots.propTypes = {
  items: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array),
  prefix: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  activeItem: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().number),
  onDotClick: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func)
};
/* harmony default export */ __webpack_exports__.Z = (Dots);

/***/ }),

/***/ 34260:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4726);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }


const FavoriteButton = _ref => {
  let {
    onClick,
    className = '',
    status = 'add',
    isLoading = false,
    ...rest
  } = _ref;
  const onButtonClick = e => {
    e.preventDefault;
    e.stopPropagation;
    onClick(e);
    return false;
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    react_tooltip__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.rebuild();
  }, []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", _extends({
    type: "button",
    className: "favorite-button ".concat(className).concat(isLoading ? ' favorite-button--loading' : ''),
    onClick: onButtonClick
  }, rest), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("i", {
    className: "favorite-icon__".concat(status)
  })));
};
/* harmony default export */ __webpack_exports__.Z = (FavoriteButton);

/***/ }),

/***/ 406:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ useFavoriteButton; }
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51054);
/* harmony import */ var _lib_favorites_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9328);
/* harmony import */ var _actions_favorites__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68110);
/* harmony import */ var _actions_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(67217);






function useFavoriteButton(_ref) {
  var _userFavorites$v4ID;
  let {
    dispatch,
    userFavorites,
    titleData = {},
    isMovie = false,
    onSuccess,
    onFail
  } = _ref;
  const v4ID = titleData.v4ID;
  const favoriteId = userFavorites === null || userFavorites === void 0 ? void 0 : (_userFavorites$v4ID = userFavorites[v4ID]) === null || _userFavorites$v4ID === void 0 ? void 0 : _userFavorites$v4ID.favoriteId;
  const isFavoritedInRedux = !!favoriteId;
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [isFavoritedInComponent, setIsFavoritedInComponent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(isFavoritedInRedux);

  // Immediately display the new favorite state after the user clicks the button while the Park API call is in flight.
  // Once the API call is done, show the value that is stored in Redux (which will revert if the API call failed)
  const displayState = isLoading ? isFavoritedInComponent : isFavoritedInRedux;
  const onActionResolve = function () {
    let isAdd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    setIsLoading(false);
    if (onSuccess) {
      onSuccess(isAdd);
    }
  };
  const onActionFail = () => {
    setIsLoading(false);
    if (onFail) {
      onFail();
    }
  };
  const removeFavorite = async mpId => {
    setIsFavoritedInComponent(false);
    setIsLoading(true);
    try {
      await (0,_lib_favorites_api__WEBPACK_IMPORTED_MODULE_3__/* .removeFavoriteSeries */ .AB)(mpId, favoriteId);
      (0,_actions_favorites__WEBPACK_IMPORTED_MODULE_4__/* .removeUserFavorite */ .P0)(dispatch, v4ID);
      onActionResolve(false);
    } catch {
      onActionFail();
    }
  };
  const addFavorite = async mpId => {
    setIsFavoritedInComponent(true);
    setIsLoading(true);
    try {
      var _res$data, _res$data$data;
      const res = await (0,_lib_favorites_api__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP)(mpId, v4ID, isMovie);
      const newFavoriteId = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.id;
      if (newFavoriteId) {
        (0,_actions_favorites__WEBPACK_IMPORTED_MODULE_4__/* .setUserFavorite */ .gk)(dispatch, v4ID, {
          favoriteId: newFavoriteId,
          title: (titleData === null || titleData === void 0 ? void 0 : titleData.shortTitle) || (titleData === null || titleData === void 0 ? void 0 : titleData.title)
        });
        onActionResolve(true);
      } else {
        onActionFail();
      }
    } catch {
      onActionFail();
    }
  };
  const clickHandler = async () => {
    if (isLoading) return false;
    const mpId = await _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP.getId();
    let action;
    if (isFavoritedInRedux) {
      action = removeFavorite;
    } else {
      action = addFavorite;
    }
    dispatch((0,_actions_client__WEBPACK_IMPORTED_MODULE_5__/* .setDayZero */ .Fk)(false));
    action(mpId);
    return true;
  };
  return {
    clickHandler,
    isLoading,
    isFavorite: displayState
  };
}

/***/ }),

/***/ 85602:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74369);
/* harmony import */ var _FilterSelectDropdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84696);
/* harmony import */ var _FilterSelectLabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(68936);

/* eslint-disable jsx-a11y/aria-props */






const IMG_PATH = "".concat(config__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z.get('app.assetPath'), "images/icons/");
const FilterSelect = _ref => {
  let {
    labelId,
    id,
    instanceID,
    defaultItem,
    thickLink,
    getOptionLink,
    selectedItem,
    ariaLabel,
    onChange,
    onBlur,
    onClick,
    options,
    customOptions,
    isMobile,
    isMobileFilterDisable,
    onFocus,
    ariaDescribedby,
    keyName,
    styleName,
    isFirstItemFocus = false,
    isDefaultVisible = true
  } = _ref;
  const firstItem = selectedItem || defaultItem || options[0];
  const [currentItem, setCurrentItem] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(firstItem);
  const [isActive, setIsActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const dropdownButtonRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();
  const dropdownMenuRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();
  const getDropdownMenu = () => {
    var _dropdownMenuRef$curr;
    return (_dropdownMenuRef$curr = dropdownMenuRef.current) === null || _dropdownMenuRef$curr === void 0 ? void 0 : _dropdownMenuRef$curr.getElementsByClassName('filter-select__item');
  };
  const onSelect = event => {
    var _event$target;
    onChange(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value, keyName);
  };
  const dropdownToggle = function () {
    let isTab = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    setIsActive(!isActive);
    if (typeof isTab === 'boolean' && isTab || isFirstItemFocus) {
      const dropdownOptions = getDropdownMenu();
      setTimeout(() => {
        dropdownOptions && dropdownOptions[0].focus();
      }, 0);
    }
  };
  const handleClickOutside = () => {
    var _window;
    (_window = window) === null || _window === void 0 ? void 0 : _window.removeEventListener('click', handleClickOutside);
    onBlur && onBlur();
    setIsActive(false);
  };
  const handleDropdownKeyDown = event => {
    if ((event === null || event === void 0 ? void 0 : event.keyCode) === 40 || (event === null || event === void 0 ? void 0 : event.keyCode) === 13) {
      event.preventDefault();
      !isActive && dropdownToggle(true);
    }
  };
  const handleBlur = event => {
    const nextFocusedElement = event === null || event === void 0 ? void 0 : event.relatedTarget;
    if (dropdownMenuRef.current && !dropdownMenuRef.current.contains(nextFocusedElement)) {
      onBlur && onBlur();
    }
  };
  const onLabelClick = () => {
    !isMobile && dropdownToggle(true);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    setCurrentItem(selectedItem);
  }, [selectedItem]);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (defaultItem) {
      setCurrentItem(defaultItem);
    }
  }, [defaultItem]);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (isActive) {
      onClick && onClick();
      window.addEventListener('click', handleClickOutside);
    }
    return () => {
      var _window2;
      return (_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.removeEventListener('click', handleClickOutside);
    };
  }, [isActive]);
  const currentItemLabel = (currentItem === null || currentItem === void 0 ? void 0 : currentItem.itemLabel) || currentItem;
  const defaultItemLabel = (defaultItem === null || defaultItem === void 0 ? void 0 : defaultItem.itemLabel) || defaultItem;
  const selectedItemLabel = (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.itemLabel) || selectedItem;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(styleName, 'filter-select', isMobile && 'custom-select', isActive && 'active')
  }, isMobile && !isMobileFilterDisable ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("select", {
    onChange: onSelect,
    "aria-label": "Filter videos",
    value: currentItemLabel,
    onFocus: onFocus
  }, defaultItem && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("option", {
    key: "0"
  }, defaultItemLabel), options.map((option, i) => {
    const itemLabel = (option === null || option === void 0 ? void 0 : option.itemLabel) || option;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("option", {
      key: i + itemLabel,
      value: itemLabel
    }, itemLabel);
  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_FilterSelectLabel__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
    id: id,
    instanceID: instanceID,
    customOptions: customOptions,
    onFocus: onFocus,
    ariaDescribedby: ariaDescribedby,
    dropdownButtonRef: dropdownButtonRef,
    handleDropdownKeyDown: handleDropdownKeyDown,
    isActive: isActive,
    handleBlur: handleBlur,
    ariaLabel: ariaLabel,
    selectedItem: selectedItemLabel,
    currentItem: currentItemLabel,
    onClick: onLabelClick
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_FilterSelectDropdown__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, {
    labelId: labelId,
    id: id,
    instanceID: instanceID,
    currentItem: currentItem,
    defaultItem: defaultItem,
    isDefaultVisible: isDefaultVisible,
    thickLink: thickLink,
    getOptionLink: getOptionLink,
    options: options,
    customOptions: customOptions,
    keyName: keyName,
    getDropdownMenu: getDropdownMenu,
    onChange: onChange,
    dropdownToggle: dropdownToggle,
    onBlur: onBlur,
    dropdownButtonRef: dropdownButtonRef,
    dropdownMenuRef: dropdownMenuRef
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("img", {
    src: "".concat(IMG_PATH, "down-arrow-icon.png"),
    role: "presentation",
    className: "filter-select__icon",
    alt: ""
  }));
};
FilterSelect.propTypes = {
  styleName: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),
  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func).isRequired,
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),
  defaultItem: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().string), prop_types__WEBPACK_IMPORTED_MODULE_6___default().shape({
    itemLabel: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)
  })]),
  options: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_6___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)), prop_types__WEBPACK_IMPORTED_MODULE_6___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_6___default().shape({
    itemLabel: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)
  }))]).isRequired,
  isMobile: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),
  isMobileFilterDisable: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),
  getOptionLink: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),
  thickLink: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),
  selectedItem: prop_types__WEBPACK_IMPORTED_MODULE_6___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_6___default().string), prop_types__WEBPACK_IMPORTED_MODULE_6___default().shape({
    itemLabel: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)
  })]),
  isDefaultVisible: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),
  labelId: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),
  id: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),
  instanceID: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),
  ariaLabel: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),
  onFocus: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),
  onBlur: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),
  keyName: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),
  isFirstItemFocus: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().bool),
  customOptions: prop_types__WEBPACK_IMPORTED_MODULE_6___default().shape({}),
  ariaDescribedby: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)
};
/* harmony default export */ __webpack_exports__.Z = (FilterSelect);

/***/ }),

/***/ 84696:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ FilterSelect_FilterSelectDropdown; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/lodash/kebabCase.js
var kebabCase = __webpack_require__(21804);
var kebabCase_default = /*#__PURE__*/__webpack_require__.n(kebabCase);
// EXTERNAL MODULE: ./node_modules/lodash/isEmpty.js
var isEmpty = __webpack_require__(41609);
var isEmpty_default = /*#__PURE__*/__webpack_require__.n(isEmpty);
// EXTERNAL MODULE: ./utils/getTranslatedString.js + 2 modules
var getTranslatedString = __webpack_require__(33786);
;// CONCATENATED MODULE: ./utils/getNextFocusableElement.js
const FOCUSABLE_ELEMENTS = ['a[href]:not([disabled]):not([tabIndex="-1"])',
// links
'button:not([disabled]):not([tabIndex="-1"])',
// buttons
'input:not([disabled]):not([tabIndex="-1"])',
// input fields
'[tabindex]:not([disabled]):not([tabindex="-1"]):not([aria-selected="false"])',
// elements with tab-index attr
'select:not([disabled])',
// select fields
'textarea:not([disabled])' // textarea fields
];
const getNextFocusableElement = () => {
  const focusableElements = FOCUSABLE_ELEMENTS.join(',');
  const focusable = Array.prototype.filter.call(document.querySelectorAll(focusableElements),
  // Check for visibility while always include the current activeElement
  element => element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement);
  const index = focusable.indexOf(document.activeElement);
  if (index <= -1) return null;
  return focusable[index + 1] || focusable[0];
};
/* harmony default export */ var utils_getNextFocusableElement = (getNextFocusableElement);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(94184);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
;// CONCATENATED MODULE: ./components/FilterSelect/FilterSelectOption.js




const FilterSelectOption = _ref => {
  let {
    customOptions,
    dropdownChange,
    getOptionLink,
    handleItemFocus,
    handleOptionKeyDown,
    id,
    index,
    isSelected,
    isFocused,
    itemLabel,
    option,
    stopLink,
    thickLink
  } = _ref;
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('filter-select__item', {
      'filter-select__item--thick-link': thickLink,
      'filter-select__item--selected': isSelected
    }),
    role: "option",
    "aria-selected": isFocused,
    id: "".concat(id, "-").concat(kebabCase_default()(itemLabel)),
    key: index + itemLabel,
    onClick: () => {
      dropdownChange(option);
    },
    onKeyDown: e => {
      handleOptionKeyDown(option, e);
    },
    onFocus: handleItemFocus,
    "data-index": index,
    tabIndex: "0"
  }, getOptionLink ? /*#__PURE__*/react.createElement("a", {
    className: "filter-select__link",
    onClick: stopLink,
    href: getOptionLink(option)
  }, option) : customOptions ? /*#__PURE__*/react.createElement("span", {
    className: "filter-select__group-custom-wrapper"
  }, /*#__PURE__*/react.createElement("span", {
    className: "filter-select__item-custom",
    style: {
      backgroundColor: customOptions[option],
      ...(customOptions[option] !== 'transparent' ? {
        borderColor: customOptions[option]
      } : {})
    }
  }), /*#__PURE__*/react.createElement("span", {
    className: "filter-select__link filter-select__link--no-padding"
  }, itemLabel)) : /*#__PURE__*/react.createElement("span", {
    className: "filter-select__link"
  }, itemLabel));
};
FilterSelectOption.propTypes = {
  customOptions: prop_types_default().shape({}),
  dropdownChange: (prop_types_default()).func,
  getOptionLink: (prop_types_default()).func,
  handleItemFocus: (prop_types_default()).func,
  handleOptionKeyDown: (prop_types_default()).func,
  id: (prop_types_default()).string,
  index: (prop_types_default()).number,
  isSelected: (prop_types_default()).bool,
  isFocused: (prop_types_default()).bool,
  itemLabel: (prop_types_default()).string,
  option: prop_types_default().oneOfType([(prop_types_default()).string, prop_types_default().shape({
    itemLabel: (prop_types_default()).string
  })]),
  stopLink: (prop_types_default()).func,
  thickLink: (prop_types_default()).bool
};
const FilterSelectOptionEmpty = _ref2 => {
  let {
    id,
    handleItemFocus,
    emptyMessage
  } = _ref2;
  return /*#__PURE__*/react.createElement("li", {
    className: "filter-select__item",
    id: "".concat(id, "-empty"),
    key: "empty",
    onFocus: handleItemFocus
  }, /*#__PURE__*/react.createElement("span", {
    className: "filter-select__link"
  }, emptyMessage));
};
FilterSelectOptionEmpty.propTypes = {
  id: (prop_types_default()).string,
  handleItemFocus: (prop_types_default()).func,
  emptyMessage: (prop_types_default()).string
};
const FilterSelectOptionDivider = _ref3 => {
  let {
    id,
    index,
    itemLabel
  } = _ref3;
  return /*#__PURE__*/react.createElement("li", {
    className: "filter-select__item filter-select__item--divider",
    id: id,
    "data-index": index,
    tabIndex: "-1"
  }, itemLabel);
};
FilterSelectOptionDivider.propTypes = {
  id: (prop_types_default()).string,
  index: (prop_types_default()).number,
  itemLabel: (prop_types_default()).string
};
;// CONCATENATED MODULE: ./components/FilterSelect/FilterSelectDropdown.js








const FilterSelectDropdown = _ref => {
  let {
    labelId,
    id,
    instanceID,
    currentItem,
    defaultItem,
    isDefaultVisible,
    thickLink,
    getOptionLink,
    options,
    customOptions,
    getDropdownMenu,
    keyName,
    onChange,
    onItemFocus,
    dropdownToggle,
    dropdownButtonRef,
    dropdownMenuRef,
    searchInputRef,
    language,
    isSearch
  } = _ref;
  const [focusedIndex, setFocusedIndex] = (0,react.useState)();
  const isEmptyItem = isEmpty_default()(options);
  const emptyMessage = (0,getTranslatedString/* default */.Z)(language, 'livePage.dropdownEmpty');
  const currentItemIndex = options.indexOf(currentItem);
  const dropdownChange = selected => {
    const label = (selected === null || selected === void 0 ? void 0 : selected.itemLabel) || selected;
    onChange(label, keyName);
  };
  const handleItemFocus = event => {
    var _event$currentTarget, _event$currentTarget$;
    const focusedItemIndex = parseInt(event === null || event === void 0 ? void 0 : (_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 ? void 0 : (_event$currentTarget$ = _event$currentTarget.dataset) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.index, 10);
    setFocusedIndex(focusedItemIndex);
    onItemFocus === null || onItemFocus === void 0 ? void 0 : onItemFocus(focusedItemIndex);
  };
  const handleOptionKeyDown = (value, event) => {
    var _dropdownButtonRef$cu2;
    event.preventDefault();
    if ((event === null || event === void 0 ? void 0 : event.keyCode) === 32 || (event === null || event === void 0 ? void 0 : event.keyCode) === 13) {
      var _dropdownButtonRef$cu;
      dropdownButtonRef === null || dropdownButtonRef === void 0 ? void 0 : (_dropdownButtonRef$cu = dropdownButtonRef.current) === null || _dropdownButtonRef$cu === void 0 ? void 0 : _dropdownButtonRef$cu.focus();
      dropdownChange(value);
      dropdownToggle();
    } else {
      const menuOptions = getDropdownMenu();
      const nextEl = utils_getNextFocusableElement();
      switch (event.keyCode) {
        case 38:
        case 40:
          // Down / up arrows
          for (let i = 0; i < menuOptions.length; i++) {
            if (menuOptions[i] === event.target) {
              event.keyCode === 38 && i > 0 && menuOptions[i - 1].focus();
              event.keyCode === 40 && i < menuOptions.length - 1 && menuOptions[i + 1].focus();
            }
          }
          break;
        case 36:
          // Home key
          menuOptions[0].focus();
          break;
        case 35:
          // End key
          menuOptions[options.length - 1].focus();
          break;
        case 27:
          // Escape key
          dropdownToggle();
          dropdownButtonRef === null || dropdownButtonRef === void 0 ? void 0 : (_dropdownButtonRef$cu2 = dropdownButtonRef.current) === null || _dropdownButtonRef$cu2 === void 0 ? void 0 : _dropdownButtonRef$cu2.focus();
          break;
        case 9:
          // Tab key
          if (event.shiftKey && isSearch) {
            var _searchInputRef$curre;
            searchInputRef === null || searchInputRef === void 0 ? void 0 : (_searchInputRef$curre = searchInputRef.current) === null || _searchInputRef$curre === void 0 ? void 0 : _searchInputRef$curre.focus();
          } else if (event.shiftKey) {
            var _dropdownButtonRef$cu3;
            dropdownToggle();
            dropdownButtonRef === null || dropdownButtonRef === void 0 ? void 0 : (_dropdownButtonRef$cu3 = dropdownButtonRef.current) === null || _dropdownButtonRef$cu3 === void 0 ? void 0 : _dropdownButtonRef$cu3.focus();
          } else {
            dropdownToggle();
            nextEl === null || nextEl === void 0 ? void 0 : nextEl.focus();
          }
          break;
        default:
          return null;
      }
    }
    return null;
  };
  const stopLink = event => {
    event.preventDefault();
  };
  const renderOptionList = () => /*#__PURE__*/react.createElement(react.Fragment, null, defaultItem && isDefaultVisible && /*#__PURE__*/react.createElement(FilterSelectOption, {
    customOptions: customOptions,
    dropdownChange: dropdownChange,
    getOptionLink: getOptionLink,
    handleItemFocus: handleItemFocus,
    handleOptionKeyDown: handleOptionKeyDown,
    id: "0",
    index: 0,
    isSelected: false,
    isFocused: false,
    itemLabel: (defaultItem === null || defaultItem === void 0 ? void 0 : defaultItem.itemLabel) || defaultItem,
    option: defaultItem,
    stopLink: stopLink,
    thickLink: thickLink
  }), isSearch && isEmptyItem ? /*#__PURE__*/react.createElement(FilterSelectOptionEmpty, {
    id: id,
    handleItemFocus: handleItemFocus,
    emptyMessage: emptyMessage
  }) : options.map((option, i) => {
    const isDivider = (option === null || option === void 0 ? void 0 : option.menuItemType) === 'divider';
    const itemLabel = (option === null || option === void 0 ? void 0 : option.itemLabel) || option;
    const index = defaultItem && isDefaultVisible ? i + 1 : i;
    if (isDivider) {
      return /*#__PURE__*/react.createElement(FilterSelectOptionDivider, {
        id: id,
        index: index,
        itemLabel: itemLabel,
        key: i + itemLabel
      });
    }
    return /*#__PURE__*/react.createElement(FilterSelectOption, {
      customOptions: customOptions,
      dropdownChange: dropdownChange,
      getOptionLink: getOptionLink,
      handleItemFocus: handleItemFocus,
      handleOptionKeyDown: handleOptionKeyDown,
      id: id,
      index: index,
      isFocused: focusedIndex === i,
      isSelected: currentItemIndex === i,
      itemLabel: itemLabel,
      key: i + itemLabel,
      option: option,
      stopLink: stopLink,
      thickLink: thickLink
    });
  }));
  return /*#__PURE__*/react.createElement("ul", {
    className: "filter-select__dropdown",
    ref: dropdownMenuRef,
    role: "listbox",
    id: "".concat(instanceID, "-dropdown"),
    tabIndex: "-1",
    "aria-labelledby": labelId,
    "aria-activedescendant": "".concat(id, "-").concat(kebabCase_default()(currentItem))
  }, renderOptionList());
};
FilterSelectDropdown.propTypes = {
  onChange: (prop_types_default()).func.isRequired,
  onItemFocus: (prop_types_default()).func,
  defaultItem: prop_types_default().oneOfType([(prop_types_default()).string, prop_types_default().shape({
    itemLabel: (prop_types_default()).string
  })]),
  options: prop_types_default().oneOfType([prop_types_default().arrayOf((prop_types_default()).string), prop_types_default().arrayOf(prop_types_default().shape({
    itemLabel: (prop_types_default()).string
  }))]).isRequired,
  getOptionLink: (prop_types_default()).func,
  thickLink: (prop_types_default()).bool,
  currentItem: prop_types_default().oneOfType([(prop_types_default()).string, prop_types_default().shape({
    itemLabel: (prop_types_default()).string
  })]),
  isDefaultVisible: (prop_types_default()).bool,
  labelId: (prop_types_default()).string,
  id: (prop_types_default()).string,
  instanceID: (prop_types_default()).string,
  keyName: (prop_types_default()).string,
  getDropdownMenu: (prop_types_default()).func.isRequired,
  dropdownToggle: (prop_types_default()).func.isRequired,
  searchInputRef: prop_types_default().shape({
    current: (prop_types_default()).node
  }),
  language: (prop_types_default()).string,
  isSearch: (prop_types_default()).bool,
  customOptions: prop_types_default().shape({}),
  dropdownButtonRef: prop_types_default().shape({}),
  dropdownMenuRef: prop_types_default().shape({})
};
/* harmony default export */ var FilterSelect_FilterSelectDropdown = (FilterSelectDropdown);

/***/ }),

/***/ 68936:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const FilterSelectLabel = _ref => {
  let {
    instanceID,
    dropdownButtonRef,
    handleDropdownKeyDown,
    isActive,
    onFocus,
    ariaLabel,
    selectedItem,
    currentItem,
    ariaDescribedby,
    onClick,
    isSearch
  } = _ref;
  const ariaLabelTitle = ariaLabel && "".concat(selectedItem ? "Selected: ".concat(selectedItem, ", ") : '').concat(ariaLabel);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("button", _extends({
    type: "button",
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('filter-select__inner', {
      'sr-only': isSearch && isActive
    }),
    "aria-controls": "".concat(instanceID, "-dropdown"),
    "aria-expanded": isActive,
    "aria-haspopup": "listbox",
    role: "combobox",
    id: "".concat(instanceID, "-combo"),
    ref: dropdownButtonRef,
    onKeyDown: handleDropdownKeyDown,
    onFocus: onFocus,
    onClick: onClick
  }, ariaLabelTitle ? {
    'aria-label': ariaLabelTitle
  } : {}, ariaDescribedby ? {
    'aria-describedby': ariaDescribedby
  } : {}, {
    tabIndex: isActive ? -1 : 0
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", {
    className: "filter-select__selected"
  }, currentItem));
};
FilterSelectLabel.propTypes = {
  instanceID: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  handleDropdownKeyDown: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func).isRequired,
  isActive: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),
  onFocus: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),
  ariaLabel: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  ariaDescribedby: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  selectedItem: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  currentItem: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),
  isSearch: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool)
};
/* harmony default export */ __webpack_exports__.Z = (FilterSelectLabel);

/***/ }),

/***/ 93172:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67788);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_intersection_observer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(70131);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41609);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(18446);
/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23279);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(21804);
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(67641);
/* harmony import */ var _utils_getTilesCount__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79004);
/* harmony import */ var _utils_getCssVariable__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(74051);
/* harmony import */ var _SectionHeading_SectionHeading__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(87968);
/* harmony import */ var _Spinner_Spinner__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(19868);
/* harmony import */ var _Tile_Tile__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(59901);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
















class Grid extends react__WEBPACK_IMPORTED_MODULE_1__.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "state", {
      items: [],
      moreItems: this.props.moreItems,
      isFetchingMore: false
    });
    _defineProperty(this, "tilesContainer", /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)());
    _defineProperty(this, "filterUpcomingTiles", () => (this.props.items || []).filter(item => !this.props.expiredItems.includes(lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(item, ['data', 'instanceID']))));
    _defineProperty(this, "onResizeDebounced", () => {
      this.setState(prevState => ({
        resized: !prevState.resized
      }));
    });
    _defineProperty(this, "fetchMoreItems", () => {
      const {
        moreItems,
        isFetchingMore
      } = this.state;
      if (isFetchingMore || !moreItems) {
        return;
      }
      if (moreItems && moreItems.component === 'LazyGrid') {
        const moreData = lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(moreItems, 'data', {});
        this.setState({
          isFetchingMore: true
        });
        (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_9__/* .getLazyComponent */ .sO)(moreData).then(component => this.setState(prevState => ({
          isFetchingMore: false,
          items: prevState.items.concat(lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(component, ['data', 'items'], [])),
          moreItems: lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(component, ['data', 'moreItems'])
        }))).catch(error => {
          _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2___default().warn(error);
          this.setState({
            moreItems: null
          });
        });
      } else {
        this.setState({
          moreItems: null
        });
      }
    });
    _defineProperty(this, "onInView", inView => {
      if (inView) {
        this.fetchMoreItems();
      }
    });
    _defineProperty(this, "onClick", (event, isEventStarted) => {
      const {
        shelfIndex,
        shelfTitle,
        items,
        onClick
      } = this.props;
      const index = parseInt(event.currentTarget.getAttribute('data-index'), 10);
      if (!Number.isNaN(index)) {
        const item = {
          ...items[index],
          ...(isEventStarted || {})
        };
        const destination = lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(event, 'currentTarget.href');
        const shelfData = {
          index: shelfIndex,
          title: shelfTitle
        };
        onClick && onClick(item, index + 1, destination, shelfData);
      }
    });
    _defineProperty(this, "scaleTileDynamically", (event, isLeave) => {
      var _tileEl$hasAttribute;
      const tileEl = event === null || event === void 0 ? void 0 : event.currentTarget;
      if (!(tileEl !== null && tileEl !== void 0 && (_tileEl$hasAttribute = tileEl.hasAttribute) !== null && _tileEl$hasAttribute !== void 0 && _tileEl$hasAttribute.call(tileEl, 'data-index'))) return;
      const index = parseInt(tileEl.getAttribute('data-index'), 10);
      const SCALE_FACTOR = 0.08;
      const TRANSLATE_FACTOR = 4;
      const MIN_BREAKPOINT = (0,_utils_getCssVariable__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)('large-desktop');
      const windowWidth = window.innerWidth;
      const tileThumbEl = this["tileThumbRef".concat(index)];
      if (windowWidth < MIN_BREAKPOINT || !tileThumbEl) return;
      tileThumbEl.style.transform = isLeave ? '' : "scale3d(".concat(MIN_BREAKPOINT * SCALE_FACTOR / windowWidth + 1, ", ").concat(MIN_BREAKPOINT * SCALE_FACTOR / windowWidth + 1, ", 2)");
      const tileMetaTextEl = this["tileMetaTextRef".concat(index)];
      if (!tileMetaTextEl) return;
      tileMetaTextEl.style.transform = isLeave ? '' : "translate(".concat(MIN_BREAKPOINT * TRANSLATE_FACTOR / windowWidth + 1, ", 7.5px)");
    });
    _defineProperty(this, "handleMouseEnter", event => {
      this.scaleTileDynamically(event);
    });
    _defineProperty(this, "handleMouseLeave", event => {
      this.scaleTileDynamically(event, true);
    });
    _defineProperty(this, "setRef", name => ref => {
      this[name] = ref;
    });
    _defineProperty(this, "getTiles", () => {
      const {
        displayMeta,
        pagePath,
        shelfIndex,
        shelfTitle,
        destination,
        seasonNumber,
        tilesSelected,
        isTileSeriesFavorite,
        onKeyDown,
        isStacked
      } = this.props;
      return this.state.items.filter(t => !lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3___default()(t)).map((tile, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Tile_Tile__WEBPACK_IMPORTED_MODULE_14__/* ["default"] */ .Z, _extends({
        displayMeta: displayMeta,
        key: "".concat(tile.data.v4ID, "-").concat(i),
        index: i,
        pagePath: pagePath
      }, tile, {
        onClick: this.onClick,
        itemIndex: i,
        shelfTitle: shelfTitle,
        shelfIndex: shelfIndex,
        analytics: tile.analytics,
        destination: destination,
        seasonNumber: seasonNumber,
        tilesSelected: tilesSelected,
        isZoomable: true,
        isTileSeriesFavorite: isTileSeriesFavorite,
        onKeyDown: onKeyDown,
        isStacked: isStacked,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        setRef: this.setRef
      })));
    });
  }
  componentDidMount() {
    const {
      isMobile,
      isTablet
    } = this.props;
    const isTouchDevice = isMobile || isTablet;
    if (typeof window !== 'undefined' && !isTouchDevice) {
      this.onResize = lodash_debounce__WEBPACK_IMPORTED_MODULE_6___default()(this.onResizeDebounced, 500);
      window.addEventListener('resize', this.onResize);
    }
    this.setState({
      items: this.props.items
    });
  }
  componentDidUpdate(prevProps) {
    var _prevProps$items, _this$props$items;
    const prevItems = (_prevProps$items = prevProps.items) !== null && _prevProps$items !== void 0 ? _prevProps$items : [];
    const currentItems = (_this$props$items = this.props.items) !== null && _this$props$items !== void 0 ? _this$props$items : [];
    // do a very quick and dirty check to see if the items array has changed
    const isItemsChanged = prevItems.length !== currentItems.length || !lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default()(prevItems, currentItems);
    if (isItemsChanged) {
      this.setState({
        items: currentItems
      });
    }
  }
  render() {
    const {
      listTitle,
      isGridStatic
    } = this.props;
    const {
      moreItems,
      items
    } = this.state;
    const numTiles = (0,_utils_getTilesCount__WEBPACK_IMPORTED_MODULE_10__/* .getTilesCount */ .g)(this.tilesContainer.current, lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(items, '[0].component'));
    return items.length ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("section", {
      className: "grid"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
      className: "grid__inner"
    }, listTitle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_SectionHeading_SectionHeading__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z, {
      title: listTitle
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("ul", _extends({
      role: "list",
      className: classnames__WEBPACK_IMPORTED_MODULE_8___default()('grid__tiles', {
        ["grid__tiles--grid-".concat(numTiles)]: !isGridStatic
      }),
      ref: this.tilesContainer
    }, listTitle ? {
      'aria-labelledby': "section-heading-".concat(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_7___default()(listTitle))
    } : {}), this.getTiles())), moreItems && Object.keys(moreItems).length && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react_intersection_observer__WEBPACK_IMPORTED_MODULE_15__/* .InView */ .df, {
      as: "div",
      className: "grid__spinner",
      onChange: this.onInView
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z, {
      size: "large",
      theme: "light"
    }))) : null;
  }
}
_defineProperty(Grid, "propTypes", {
  displayMeta: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().bool),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().func),
  pagePath: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
  shelfIndex: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().number),
  shelfTitle: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
  listTitle: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
  items: prop_types__WEBPACK_IMPORTED_MODULE_16___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_16___default().shape({
    component: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string).isRequired,
    data: prop_types__WEBPACK_IMPORTED_MODULE_16___default().shape({
      whiteBrandLogo: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
      colorBrandLogo: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
      machineName: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
      displayTitle: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string)
    })
  })).isRequired,
  title: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
  moreItems: prop_types__WEBPACK_IMPORTED_MODULE_16___default().shape({
    component: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string).isRequired,
    targetComponent: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
    data: prop_types__WEBPACK_IMPORTED_MODULE_16___default().shape({
      queryName: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
      entryField: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
      queryVariables: prop_types__WEBPACK_IMPORTED_MODULE_16___default().shape({
        name: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
        cursor: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string),
        app: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().string)
      })
    })
  }),
  skipMetadataFlag: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().bool),
  isStacked: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().bool),
  isGridStatic: (prop_types__WEBPACK_IMPORTED_MODULE_16___default().bool)
});
Grid.defaultProps = {
  shelfIndex: 0
};
/* harmony default export */ __webpack_exports__.Z = (Grid);

/***/ }),

/***/ 54750:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ withFavorites; }
/* harmony export */ });
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20688);

function withFavorites(Component, favoritesPropName) {
  const mapStateToProps = (state, ownProps) => {
    var _state$favorites, _state$launchDarkly$c, _state$launchDarkly, _state$launchDarkly$c2;
    const propName = favoritesPropName !== null && favoritesPropName !== void 0 ? favoritesPropName : 'favorites';
    return {
      ...ownProps,
      [propName]: (_state$favorites = state.favorites) !== null && _state$favorites !== void 0 ? _state$favorites : {},
      showTileFavorites: (_state$launchDarkly$c = state === null || state === void 0 ? void 0 : (_state$launchDarkly = state.launchDarkly) === null || _state$launchDarkly === void 0 ? void 0 : (_state$launchDarkly$c2 = _state$launchDarkly.client) === null || _state$launchDarkly$c2 === void 0 ? void 0 : _state$launchDarkly$c2.showTileFavorites) !== null && _state$launchDarkly$c !== void 0 ? _state$launchDarkly$c : 'default'
    };
  };
  return (0,react_redux__WEBPACK_IMPORTED_MODULE_0__/* .connect */ .$j)(mapStateToProps)(Component);
}

/***/ }),

/***/ 61737:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: function() { return /* binding */ Source; },
/* harmony export */   Z: function() { return /* binding */ Image; }
/* harmony export */ });
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78718);
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_pick__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(23279);
/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_akamaiDerivatives__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(64994);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






const IMAGE_CONFIG_GLOBAL = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('app.imageConfigs.global');
const Source = props => {
  const sourceConfig = {
    ...IMAGE_CONFIG_GLOBAL
  };
  let mediaConfig = '';
  if (props.srcSet === null) {
    return null;
  }
  if (props.srcSetConfig && props.srcSetConfig.minWidth) {
    sourceConfig.minWidth = props.srcSetConfig.minWidth;
    mediaConfig = "(min-width: ".concat(sourceConfig.minWidth, "px)");
  }
  if (props.srcSetConfig && props.srcSetConfig.maxWidth) {
    sourceConfig.maxWidth = props.srcSetConfig.maxWidth;
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("source", {
    media: mediaConfig,
    srcSet: (0,_utils_akamaiDerivatives__WEBPACK_IMPORTED_MODULE_4__/* .imageResize */ .b)(props.srcSet, sourceConfig),
    sizes: props.sizes
  });
};
Source.propTypes = {
  srcSet: prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_5___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_5___default().object)]).isRequired,
  sizes: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  srcSetConfig: prop_types__WEBPACK_IMPORTED_MODULE_5___default().shape({
    minWidth: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().number),
    maxWidth: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().number)
  })
};
class Image extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {
  constructor(props) {
    super(props);
    _defineProperty(this, "state", {
      isFailed: false
    });
    _defineProperty(this, "onResizeDebouced", () => {
      this.setState({
        isFailed: false
      });
    });
    _defineProperty(this, "onError", () => {
      this.setState({
        isFailed: true
      });
      this.props.onError && this.props.onError();
    });
    _defineProperty(this, "handleOnLoad", () => {
      this.props.onLoad && this.props.onLoad();
      if (typeof window !== 'undefined') {
        this.handleLoadAnimFrame = requestAnimationFrame(this.startRender);
      }
    });
    // This will be triggered after the image rendered completely
    _defineProperty(this, "startRender", () => {
      if (typeof window !== 'undefined' && this.props.onRendered) {
        this.startRenderAnimFrame = requestAnimationFrame(this.props.onRendered);
      }
    });
    _defineProperty(this, "renderImage", () => {
      const {
        alt,
        srcSet,
        srcSetConfig,
        sizes,
        isImageDeferred,
        fallbackImage,
        setRef,
        onRendered,
        role,
        ...rest
      } = this.props;
      const imgConfig = {
        ...IMAGE_CONFIG_GLOBAL,
        ...lodash_pick__WEBPACK_IMPORTED_MODULE_2___default()(srcSetConfig, ['minWidth', 'maxWidth', 'opacity', 'desaturation'])
      };
      const isValid = typeof srcSet === 'object' ? srcSet && srcSet.path : srcSet;
      const invalidOrFailedImage = !isValid || this.state.isFailed;
      let image;
      if (!invalidOrFailedImage || fallbackImage) {
        image = isImageDeferred ? false :
        /*#__PURE__*/
        // eslint-disable-next-line jsx-a11y/alt-text
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("img", _extends({}, alt ? {
          alt
        } : {
          role: 'presentation'
        }, {
          sizes: sizes,
          srcSet: invalidOrFailedImage && fallbackImage ? "".concat(config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('app.assetPath'), "images/placeholders/").concat(config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get("placeholders.".concat(fallbackImage))) : (0,_utils_akamaiDerivatives__WEBPACK_IMPORTED_MODULE_4__/* .imageResize */ .b)(srcSet, imgConfig),
          onError: this.onError
        }, rest, {
          children: null // eslint-disable-line react/no-children-prop
          ,
          ref: setRef
        }, onRendered ? {
          onLoad: this.handleOnLoad
        } : {}));
      } else {
        image = false;
      }
      return image;
    });
    if (typeof window !== 'undefined') {
      this.currentSlide = 0;
      this.onResize = lodash_debounce__WEBPACK_IMPORTED_MODULE_3___default()(this.onResizeDebouced, 1000);
      window.addEventListener('resize', this.onResize);
    }
  }
  componentWillUnmount() {
    if (typeof window !== 'undefined') {
      this.handleLoadAnimFrame && cancelAnimationFrame(this.handleLoadAnimFrame);
      this.startRenderAnimFrame && cancelAnimationFrame(this.startRenderAnimFrame);
      window.removeEventListener('resize', this.onResize);
    }
  }
  render() {
    const {
      type,
      children
    } = this.props;
    const image = this.renderImage();
    return type === 'picture' ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("picture", null, children, image) : image;
  }
}
_defineProperty(Image, "propTypes", {
  srcSet: prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_5___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_5___default().object)]).isRequired,
  alt: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  role: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  children: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().node),
  type: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  srcSetConfig: prop_types__WEBPACK_IMPORTED_MODULE_5___default().shape({
    minWidth: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().number),
    maxWidth: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().number)
  }),
  sizes: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  fallbackImage: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  fallbackText: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  onError: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func),
  onRendered: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().func),
  isImageDeferred: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool),
  setRef: prop_types__WEBPACK_IMPORTED_MODULE_5___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_5___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_5___default().object)])
});

/***/ }),

/***/ 25663:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   j: function() { return /* binding */ clearStoredToken; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_esnext_string_replace_all_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(38320);
/* harmony import */ var core_js_modules_esnext_string_replace_all_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_esnext_string_replace_all_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(238);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74369);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67788);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_nbcu_park_logger__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_hasLocalStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(395);






const JWT_ENDPOINT = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('iterable.sdk.jwtService');
const LOCAL_STORAGE_TOKEN_KEY = 'iterableInAppToken';
const LOCAL_STORAGE_VERSION = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('iterable.sdk.storageVersion');
const LOG_SIZE = 3;
const requestLog = new Array(LOG_SIZE);
requestLog.fill(0);
const RATE_LIMIT_MIN_DURATION = 15000;
const MIN_JWT_EXP_DURATION = 24 * 60 * 60 * 1000; // 1 day

const LOCAL_STORAGE_FREQUENCY = 60000; // 1 minute

let lastStorageRead = 0;
const logRequest = () => {
  requestLog.splice(0, 1);
  requestLog.push(Date.now());
};
const checkRateLimit = () => Date.now() - requestLog[0] < RATE_LIMIT_MIN_DURATION;
const fetchJwt = async (userId, email) => {
  if (!userId && !email) {
    throw new Error('Iterable: No user ID or email provided');
  }

  // Iterable SDK has a bug where it will infinitely request JWT tokens if the token structure
  // doesn't match what is expected. We will log the last 3 JWT requests and reject if less than
  // 15 seconds has passed since the first of the trailing 3 requests (average of 1 req/5 sec).
  if (checkRateLimit()) {
    throw new Error('Iterable: Excessive JWT requests');
  }
  logRequest();
  const payload = userId ? {
    userId
  } : {
    email
  };
  const {
    data
  } = await axios__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.request({
    url: JWT_ENDPOINT,
    method: 'POST',
    data: payload
  });
  const token = data.token;
  if (!token) {
    throw new Error('Iterable: Could not generate JWT');
  }
  return token;
};
const parseToken = token => {
  var _token$split;
  const segments = token === null || token === void 0 ? void 0 : (_token$split = token.split) === null || _token$split === void 0 ? void 0 : _token$split.call(token, '.');
  if ((segments === null || segments === void 0 ? void 0 : segments.length) !== 3) {
    // invalid JWT
    throw new Error('Iterable: Not a valid JWT');
  }
  try {
    // second segment of a JWT is the payload
    // it is base64Url encoded, so first convert back to base64
    let base64Payload = segments[1].replaceAll('-', '+').replaceAll('_', '/');

    // base64Url strips all padding, but we can derive how much was stripped off
    // because base64 always has a length that's a multiple 4.
    // If the length is not, fill the remaining with the padding symbol until it is
    // a multiple of 4.
    const padLength = base64Payload.length % 4;
    if (padLength) {
      base64Payload += new Array(4 - padLength).fill('=').join('');
    }

    // convert back to utf8 and parse the JSON
    const payload = JSON.parse(atob(base64Payload));
    return payload;
  } catch (err) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_3___default().error(err);
    throw new Error('Iterable: Could not parse JWT');
  }
};

/**
 * Checks if the JWT is safe to pass into the Iterable Web SDK.
 *
 * The Iterable SDK will wrap the JWT generation function in a setTimeout based on how much
 * time is left until the JWT expiration date in milliseconds. However, setTimeout's delay value
 * is treated as a 32-bit signed integer in most browser implementations. When the milliseconds
 * between the current time and the JWT expiration exceeds the max representable 32-bit integer,
 * an integer overflow occurs. If the overflowed integer is interpreted to be a negative number,
 * the setTimeout inside the Iterable SDK will run immediately - this causes an infinite loop
 * because the Iterable SDK also continually creates new setTimeouts within each timeout callback.
 *
 * This function will extract the expiration date from the provided JWT, determine the ms offset
 * from the current time, cast that offset to a 32-bit signed integer, and check if the resulting
 * value is within 24 hours. We do not want the Iterable SDK timer running at all, since every ms
 * is a potential negative overflow value (hence requiring an expiration of at least 24 hours).
 *
 * @param {String} token JWT token to check
 * @returns {Boolean} Whether the JWT is safe to pass to Iterable
 */
const checkTokenSafety = token => {
  try {
    const payload = parseToken(token);
    // extract the exp key
    const expiration = parseInt(payload === null || payload === void 0 ? void 0 : payload.exp, 10);
    if (Number.isNaN(expiration)) {
      return false;
    }
    const timeToExpiration = Math.round(expiration * 1000 - Date.now());
    if (timeToExpiration < MIN_JWT_EXP_DURATION) {
      // about to expire or has already expired
      return false;
    }
    return true;

    // get the ms from now to the expiration date and cast it to a 32-bit int
    // this is done by bit-shifting 0 (which will force JS to cast it since bit-shift operations
    // use 32 bit ints)
    // const overflowedExpiration = timeToExpiration << 0; // eslint-disable-line no-bitwise

    // return overflowedExpiration >= MIN_JWT_EXP_DURATION;
  } catch (err) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_3___default().error(err);
    return false;
  }
};
const getJwt = async (userId, email) => {
  var _storedData, _storedData2;
  if (!userId && !email) {
    throw new Error('Iterable: User ID or email is required');
  }
  const hasStorage = (0,_utils_hasLocalStorage__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
  let storedData;
  try {
    storedData = hasStorage ? JSON.parse(localStorage.getItem(LOCAL_STORAGE_TOKEN_KEY)) : {};
  } catch {
    // unparseable JSON
    storedData = {};
  }
  let storedToken = ((_storedData = storedData) === null || _storedData === void 0 ? void 0 : _storedData.token) || '';
  const storedVersion = (_storedData2 = storedData) === null || _storedData2 === void 0 ? void 0 : _storedData2.version;
  const timeSinceLastStorageRead = Date.now() - lastStorageRead;
  let isStoredTokenInvalid = false;
  if (storedToken && storedVersion !== LOCAL_STORAGE_VERSION) {
    // If the localstorage version values don't match, refetch the token from the JWT service.
    // Tokens can last a year, so this gives us an easy escape hatch to forcibly regenerate tokens
    // for all users if we ever have to rotate API keys
    isStoredTokenInvalid = true;
  } else if (storedToken && timeSinceLastStorageRead < LOCAL_STORAGE_FREQUENCY) {
    // we previously used a token from localstorage and are now re-requesting the token less than a minute later
    // this likely indicates the JWT was rejected by Iterable, so we should discard the old token and request a
    // new one
    isStoredTokenInvalid = true;
  } else if (storedToken) {
    try {
      const storedPayload = parseToken(storedToken);
      const storedUserId = storedPayload === null || storedPayload === void 0 ? void 0 : storedPayload.userId;
      const storedEmail = storedPayload === null || storedPayload === void 0 ? void 0 : storedPayload.email;
      if (!storedUserId && !storedEmail) {
        // nothing stored under either property
        isStoredTokenInvalid = true;
      } else if (storedUserId !== userId || storedEmail !== email) {
        // stored token was intended for a different user
        isStoredTokenInvalid = true;
      }
    } catch (err) {
      _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_3___default().error(err);
      isStoredTokenInvalid = true;
    }
  }
  if (isStoredTokenInvalid) {
    storedToken = '';
    localStorage.removeItem(LOCAL_STORAGE_TOKEN_KEY);
  }
  let isNewToken = false;
  let token = storedToken;
  if (!storedToken) {
    token = await fetchJwt(userId, email);
    isNewToken = true;
  }
  const isTokenSafe = checkTokenSafety(token);
  if (!isTokenSafe) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_3___default().warn('Iterable: JWT will not be accepted by Iterable');
    if (isNewToken) {
      // this is a new token we just got from the JWT service
      // if it's not safe, we should bail since there is no remediation
      throw new Error('Iterable: Received invalid JWT from token service');
    }

    // otherwise, if this is a cached token, request a new one
    token = await fetchJwt(userId, email);
    isNewToken = true;
    if (!checkTokenSafety(token)) {
      // we got a new token but it also failed the safety check
      // bail at this point to avoid continually requesting new tokens
      throw new Error('Iterable: Received invalid JWT from token service');
    }
  }
  if (isNewToken && hasStorage) {
    localStorage.setItem(LOCAL_STORAGE_TOKEN_KEY, JSON.stringify({
      token,
      version: LOCAL_STORAGE_VERSION
    }));
  } else if (!isNewToken) {
    lastStorageRead = Date.now();
  }
  return token;
};
const clearStoredToken = () => {
  const hasStorage = (0,_utils_hasLocalStorage__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
  if (hasStorage) {
    localStorage.removeItem(LOCAL_STORAGE_TOKEN_KEY);
  }
};
/* harmony default export */ __webpack_exports__.Z = (getJwt);

/***/ }),

/***/ 51361:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67641);
/* harmony import */ var _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51054);
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(26566);
/* harmony import */ var _utils_getErrorAttributes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(93152);
/* harmony import */ var _Spinner_Spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(19868);
/* harmony import */ var _Shelf_Shelf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(70927);
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(55993);
/* harmony import */ var _LinksSelectableGroup_LinksSelectableGroup__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(43226);
/* harmony import */ var _Schedule_ScheduleItems__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(83856);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }












class LazyComponent extends react__WEBPACK_IMPORTED_MODULE_1__.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "state", {
      isLoading: true
    });
    _defineProperty(this, "fetchData", () => {
      if (this.props.fetchMoreData) {
        this.props.fetchMoreData(this.props).then(componentProps => this.fetchComponent(componentProps));
      } else {
        this.fetchComponent();
      }
    });
    _defineProperty(this, "fetchComponent", props => {
      this.setState({
        isLoading: true
      });
      const lazyProps = props || this.props;
      (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_3__/* .getLazyComponent */ .sO)(lazyProps).then(data => {
        if (this.isUnmounted) return;
        this.setState({
          isLoading: false,
          data
        });
        if (this.props.onLoad) this.props.onLoad(!!data, {
          ...data,
          shelfIndex: this.props.componentProps.shelfIndex
        });
      }).catch(() => {
        const description = "Unable to lazy load component using ".concat(this.props.queryName, " query");
        const errorAttributes = (0,_utils_getErrorAttributes__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)({
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_TYPE]: 'Other',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_DESCRIPTION]: description,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_SYSTEM]: 'Lazy Component BFF',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR_FRIENDLY_MESSAGE]: description
        });
        _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP.trackEvent({
          type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.NAVIGATION,
          name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_11__.ERROR,
          attributes: errorAttributes
        });
        if (this.isUnmounted) return;
        if (this.props.onLoad) this.props.onLoad(false, {
          shelfIndex: this.props.componentProps.shelfIndex
        });
        this.setState({
          isLoading: false,
          data: null
        });
      });
    });
    _defineProperty(this, "renderComponent", () => {
      const {
        data,
        component,
        treatments
      } = this.state.data;
      switch (component) {
        case 'Shelf':
        case 'OnAirNowShelf':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Shelf_Shelf__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, _extends({}, data, this.props.componentProps, {
            language: this.props.language,
            treatments: treatments
          }));
        case 'Stack':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, _extends({}, data, this.props.componentProps, {
            language: this.props.language,
            treatments: treatments
          }));
        case 'LinksSelectableGroup':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_LinksSelectableGroup_LinksSelectableGroup__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, _extends({}, data, this.props.componentProps));
        case 'Schedule':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Schedule_ScheduleItems__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, _extends({}, data, this.props.componentProps));
        default:
          return false;
      }
    });
  }
  componentDidMount() {
    this.fetchData();
  }
  componentDidUpdate(prevProps) {
    if (this.props.instanceID !== prevProps.instanceID || this.props.queryName !== prevProps.queryName) {
      this.fetchComponent();
    }
  }
  componentWillUnmount() {
    // DEPRECATED: Remove isUnmounted anti-pattern when we can
    // unsubscribe from http requests (fetchComponent function)
    this.isUnmounted = true;
  }
  render() {
    const {
      isLoading,
      data
    } = this.state;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
      className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('lazy-component', {
        'lazy-component--loading': isLoading
      })
    }, isLoading ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, {
      position: "absolute",
      theme: this.props.spinnerTheme
    }) : data ? this.renderComponent() :
    // TODO: Ask product for a screen when bff fails to lazy load data
    null);
  }
}
_defineProperty(LazyComponent, "propTypes", {
  instanceID: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string).isRequired,
  queryName: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string).isRequired,
  queryVariables: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object).isRequired,
  path: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().array),
  componentProps: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object),
  spinnerTheme: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),
  brandTitle: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),
  fetchMoreData: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func),
  onLoad: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func),
  language: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)
});
_defineProperty(LazyComponent, "defaultProps", {
  spinnerTheme: 'light'
});
/* harmony default export */ __webpack_exports__.Z = (LazyComponent);

/***/ }),

/***/ 43226:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21804);
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_startCase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18029);
/* harmony import */ var lodash_startCase__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_startCase__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Shelf_Shelf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(70927);
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(55993);
/* harmony import */ var _Grid_Grid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(93172);
/* harmony import */ var _LazyComponent_LazyComponent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(51361);
/* harmony import */ var _FilterSelect_FilterSelect__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(85602);
/* harmony import */ var _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(51054);
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(26566);
/* harmony import */ var _utils_isTargetedLink__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(84022);
/* harmony import */ var _utils_getPathname__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(50734);
/* harmony import */ var _utils_getContentClickAttributes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(75715);
/* harmony import */ var _utils_getClickActionAttributes__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(20393);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
















class LinksSelectableGroup extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    _defineProperty(this, "onChangeFilter", itemLabel => {
      var _this$props$items, _this$props$items$thi, _this$props$items$thi2;
      const index = this.props.itemLabelsConfig.findIndex(item => (item === null || item === void 0 ? void 0 : item.itemLabel) === itemLabel);
      this.trackClickAction(itemLabel, (_this$props$items = this.props.items) === null || _this$props$items === void 0 ? void 0 : (_this$props$items$thi = _this$props$items[this.props.initiallySelected]) === null || _this$props$items$thi === void 0 ? void 0 : (_this$props$items$thi2 = _this$props$items$thi.data) === null || _this$props$items$thi2 === void 0 ? void 0 : _this$props$items$thi2.listTitle);
      this.setState({
        activeIndex: index,
        // eslint-disable-next-line react/no-unused-state
        forceActiveIndex: false
      });
      this.props.onFilterChanged && this.props.onFilterChanged(itemLabel);
    });
    _defineProperty(this, "trackClickAction", (itemClicked, listTitle) => _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP.trackEvent({
      name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.CLICK_ACTION,
      type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.NAVIGATION,
      attributes: (0,_utils_getClickActionAttributes__WEBPACK_IMPORTED_MODULE_13__/* ["default"] */ .Z)({
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.ITEM_CLICKED_NAME]: itemClicked,
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.SHOW]: this.props.seriesShortTitle,
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.SEASON]: this.props.seriesSeason,
        [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.CUSTOM_SHELF_TITLE]: "".concat(listTitle && listTitle.includes('Episode') ? 'Episodes' : 'Clips', " Filter")
      })
    }));
    _defineProperty(this, "onClickCategoryTile", (event, tile, index) => {
      this.props.onClickCategoryTile && this.props.onClickCategoryTile(tile);
      this.setState({
        activeIndex: index,
        // eslint-disable-next-line react/no-unused-state
        forceActiveIndex: true
      });
    });
    _defineProperty(this, "onClickGridTile", (item, index, destination) => {
      var _this$props$itemLabel, _this$props$itemLabel2, _item$analytics, _item$analytics$brand, _item$analytics2, _item$analytics3, _item$analytics4, _item$analytics5;
      const categoryDisplayTitle = (_this$props$itemLabel = this.props.itemLabelsConfig) === null || _this$props$itemLabel === void 0 ? void 0 : (_this$props$itemLabel2 = _this$props$itemLabel[this.state.activeIndex]) === null || _this$props$itemLabel2 === void 0 ? void 0 : _this$props$itemLabel2.itemLabel;
      const isMovie = this.props.isAllMoviesPage || item.component === 'MovieTile';
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .ZP.trackEvent({
        name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.CONTENT_CLICK,
        type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.USER_CONTENT,
        attributes: (0,_utils_getContentClickAttributes__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)({
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.ITEM_CLICKED_URL]: destination ? (0,_utils_isTargetedLink__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)(destination) ? destination : (0,_utils_getPathname__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z)(destination) : _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.NONE,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.ITEM_CLICKED_TYPE]: isMovie ? 'Movie' : 'Show',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.ITEM_CLICKED_BRAND]: (_item$analytics = item.analytics) === null || _item$analytics === void 0 ? void 0 : (_item$analytics$brand = _item$analytics.brand) === null || _item$analytics$brand === void 0 ? void 0 : _item$analytics$brand.title,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.ITEM_CLICKED_NAME]: isMovie ? (_item$analytics2 = item.analytics) === null || _item$analytics2 === void 0 ? void 0 : _item$analytics2.movie : (_item$analytics3 = item.analytics) === null || _item$analytics3 === void 0 ? void 0 : _item$analytics3.series,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.ITEM_CLICKED_SHOW]: isMovie ? (_item$analytics4 = item.analytics) === null || _item$analytics4 === void 0 ? void 0 : _item$analytics4.movie : (_item$analytics5 = item.analytics) === null || _item$analytics5 === void 0 ? void 0 : _item$analytics5.series,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.CUSTOM_SHELF_POSITION]: this.state.activeIndex + 1,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.CUSTOM_SHELF_TITLE]: categoryDisplayTitle,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.CONTENT_POSITION]: index,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.BRAND]: this.props.brandDisplayTitle !== 'All' ? this.props.brandDisplayTitle : _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.NONE,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.SHOW]: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_14__.NONE
        })
      });
    });
    _defineProperty(this, "onEmptyClick", destination => this.setState({
      activeIndex: Math.max(0, this.props.items.findIndex(item => item.deepLinkHandle === destination))
    }));
    _defineProperty(this, "onClickFilter", () => {
      var _this$props$items2, _this$props$items2$th, _this$props$items2$th2;
      return this.trackClickAction('Expand Filter', (_this$props$items2 = this.props.items) === null || _this$props$items2 === void 0 ? void 0 : (_this$props$items2$th = _this$props$items2[this.props.initiallySelected]) === null || _this$props$items2$th === void 0 ? void 0 : (_this$props$items2$th2 = _this$props$items2$th.data) === null || _this$props$items2$th2 === void 0 ? void 0 : _this$props$items2$th2.listTitle);
    });
    _defineProperty(this, "renderActiveItem", () => {
      var _itemLabelsConfig$act, _itemLabelsConfig$act2;
      const {
        shelfIndex,
        lightPrimaryColor,
        seriesShortTitle,
        isMobile,
        isTablet,
        location,
        brandDisplayTitle,
        isShowPage,
        itemLabelsTitle,
        lazyLoad,
        language,
        autoScroll,
        isAriaLiveActive,
        itemLabelsConfig,
        tabSelected,
        isSearch
      } = this.props;
      const {
        activeIndex
      } = this.state;
      const item = this.props.items[activeIndex] || '';
      const tabSelectedTitle = itemLabelsConfig && (itemLabelsConfig === null || itemLabelsConfig === void 0 ? void 0 : (_itemLabelsConfig$act = itemLabelsConfig[activeIndex]) === null || _itemLabelsConfig$act === void 0 ? void 0 : (_itemLabelsConfig$act2 = _itemLabelsConfig$act.itemLabel) === null || _itemLabelsConfig$act2 === void 0 ? void 0 : _itemLabelsConfig$act2.toLowerCase());
      const componentProps = {
        key: activeIndex,
        shelfIndex,
        lightPrimaryColor,
        seriesShortTitle,
        isMobile,
        isTablet,
        language,
        location,
        brandTitle: brandDisplayTitle !== 'All' ? brandDisplayTitle : 'None',
        isShowPage,
        itemLabelsTitle,
        lazyLoad,
        autoScroll,
        isSearch,
        tabSelected: tabSelected || tabSelectedTitle
      };
      switch (item.component) {
        case 'Shelf':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Shelf_Shelf__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z, _extends({}, item.data, componentProps));
        case 'Stack':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, _extends({}, item.data, componentProps, {
            isAriaLiveActive: isAriaLiveActive,
            language: language
          }));
        case 'LazyShelf':
        case 'LazyStack':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_LazyComponent_LazyComponent__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z, _extends({}, item.data, {
            componentProps: componentProps
          }));
        case 'Grid':
          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Grid_Grid__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, _extends({}, item.data, componentProps, {
            onClick: this.onClickGridTile
          }));
        default:
          return false;
      }
    });
    this.state = {
      activeIndex: props.initiallySelected
    };
  }

  // When on the AllShowsPage, the BFF data can become stale after the user
  // navigates between various networks and/or categories so we utilise the
  // URL parameter to determine the active category.

  render() {
    const {
      prefix,
      isFilterNavigationMenu,
      itemLabelsConfig,
      isMobile,
      isShelfLabels,
      isAllMoviesPage,
      params,
      isTablet,
      location,
      shouldNotUpdateScroll,
      getOptionLink,
      instanceID
    } = this.props;
    const {
      activeIndex
    } = this.state;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("section", {
      className: classnames__WEBPACK_IMPORTED_MODULE_3___default()('links-selectable-group', {
        ["".concat(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default()(prefix), "__links-selectable-group")]: prefix,
        'links-selectable-group--menu': isFilterNavigationMenu
      })
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: "links-selectable-group__container"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: "links-selectable-group__inner"
    }, (itemLabelsConfig === null || itemLabelsConfig === void 0 ? void 0 : itemLabelsConfig.length) > 0 && isShelfLabels ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Shelf_Shelf__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z
    // @DEPRECATED Fake a component until the BFF returns the new
    // SelectableGroup component instead.
    , {
      items: itemLabelsConfig === null || itemLabelsConfig === void 0 ? void 0 : itemLabelsConfig.map(item => ({
        component: 'CategoryItemLabel',
        data: {
          label: item === null || item === void 0 ? void 0 : item.itemLabel,
          instanceID: lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default()(item === null || item === void 0 ? void 0 : item.itemLabel),
          pathname: isAllMoviesPage ? "/movies/".concat(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default()(item === null || item === void 0 ? void 0 : item.itemLabel)) : "/shows/".concat(params.brand, "/").concat(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default()(item === null || item === void 0 ? void 0 : item.itemLabel))
        },
        ariaLabel: item === null || item === void 0 ? void 0 : item.itemLabel,
        analytics: {}
      })),
      shelfIndex: 1,
      isMobile: isMobile,
      isTablet: isTablet,
      onClick: this.onClickCategoryTile,
      location: location,
      activeCategoryIndex: activeIndex,
      shouldNotUpdateScroll: shouldNotUpdateScroll,
      isShelfIrregular: true
    }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_FilterSelect_FilterSelect__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z, {
      selectedItem: itemLabelsConfig === null || itemLabelsConfig === void 0 ? void 0 : itemLabelsConfig[activeIndex],
      options: itemLabelsConfig,
      onChange: this.onChangeFilter,
      onClick: this.onClickFilter,
      isMobile: isMobile,
      getOptionLink: getOptionLink,
      id: "filter-select",
      instanceID: instanceID
    }), this.renderActiveItem())));
  }
}
_defineProperty(LinksSelectableGroup, "propTypes", {
  shelfIndex: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().number),
  initiallySelected: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().number),
  brandDisplayTitle: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  isShelfLabels: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  itemLabelsConfig: prop_types__WEBPACK_IMPORTED_MODULE_15___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_15___default().shape({
    itemLabel: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string)
  })),
  items: prop_types__WEBPACK_IMPORTED_MODULE_15___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_15___default().object)),
  isFilterNavigationMenu: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  isMobile: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool).isRequired,
  isTablet: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool).isRequired,
  isSticky: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  lightPrimaryColor: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  seriesShortTitle: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  seriesSeason: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  location: prop_types__WEBPACK_IMPORTED_MODULE_15___default().shape({
    pathname: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string).isRequired
  }).isRequired,
  params: prop_types__WEBPACK_IMPORTED_MODULE_15___default().shape({
    brand: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
    category: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string)
  }),
  shouldNotUpdateScroll: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  isAllMoviesPage: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  onClickCategoryTile: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().func),
  onFilterChanged: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().func),
  lazyLoad: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().object),
  isAriaLabelActive: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  autoScroll: prop_types__WEBPACK_IMPORTED_MODULE_15___default().shape({
    value: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
    key: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
    isEnabled: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool)
  }),
  allowPlaceholder: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  prefix: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  isLiveGuideCTAEnabled: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  isLoadCTAButtonEnabled: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  tabSelected: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  isSearch: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool)
});
_defineProperty(LinksSelectableGroup, "defaultProps", {
  initiallySelected: 0,
  itemLabelsConfig: [],
  items: [],
  isFilterNavigationMenu: false,
  prefix: 'lsg'
});
_defineProperty(LinksSelectableGroup, "getDerivedStateFromProps", (props, state) => {
  const getActiveIndex = () => {
    if (props.isShelfLabels) {
      var _props$params;
      if ((_props$params = props.params) !== null && _props$params !== void 0 && _props$params.category) {
        var _props$itemLabelsConf;
        const foundIndex = (_props$itemLabelsConf = props.itemLabelsConfig) === null || _props$itemLabelsConf === void 0 ? void 0 : _props$itemLabelsConf.findIndex(l => lodash_startCase__WEBPACK_IMPORTED_MODULE_2___default()(l === null || l === void 0 ? void 0 : l.itemLabel) === lodash_startCase__WEBPACK_IMPORTED_MODULE_2___default()(props.params.category));
        if (foundIndex >= 0) {
          return foundIndex;
        }
      }
      return props.initiallySelected;
    }

    // in video page, when end card suggests a video from another season
    // we have to force the usage of the initiallySelected prop
    const forceActiveIndex = !state.forceActiveIndex ? false : props.forceActiveIndex;
    if (forceActiveIndex) {
      return props.initiallySelected;
    }
    return state.activeIndex;
  };
  const activeIndex = getActiveIndex();
  return {
    activeIndex,
    forceActiveIndex: state.forceActiveIndex
  };
});
/* harmony default export */ __webpack_exports__.Z = (LinksSelectableGroup);

/***/ }),

/***/ 3161:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52353);
/* harmony import */ var lodash_isUndefined__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isUndefined__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Spinner_Spinner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19868);




const LoadButton = props => !props.isLoadingMore ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {
  onClick: props.onMore,
  style: {
    ...(!lodash_isUndefined__WEBPACK_IMPORTED_MODULE_1___default()(props.count) && !lodash_isUndefined__WEBPACK_IMPORTED_MODULE_1___default()(props.total) ? {
      display: props.count < props.total ? 'block' : 'none'
    } : {}),
    color: props.color
  },
  className: "load-button full-width",
  type: "button",
  "aria-label": props.text
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z, props.spinner);
LoadButton.propTypes = {
  onMore: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func).isRequired,
  color: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),
  isLoadingMore: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  count: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().number),
  spinner: prop_types__WEBPACK_IMPORTED_MODULE_3___default().shape({
    size: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf([null, 'small', 'large'])
  }),
  total: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().number),
  text: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string).isRequired
};
LoadButton.defaultProps = {
  spinner: {
    size: 'small'
  }
};
/* harmony default export */ __webpack_exports__.Z = (LoadButton);

/***/ }),

/***/ 85322:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83253);
/* harmony import */ var react_modal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_modal__WEBPACK_IMPORTED_MODULE_1__);



const Modal = _ref => {
  let {
    className,
    closeModal,
    isCloseVisible,
    header,
    children,
    contentLabel = 'Nudge Notification',
    shouldCloseOnOverlayClick = true
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    id: "modal__container"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    id: "modal__parent"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement((react_modal__WEBPACK_IMPORTED_MODULE_1___default()), {
    className: "modal ".concat(className),
    overlayClassName: "modal__overlay",
    onRequestClose: closeModal,
    contentLabel: contentLabel,
    ariaHideApp: false,
    isOpen: true,
    shouldCloseOnOverlayClick: shouldCloseOnOverlayClick
  }, isCloseVisible && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", {
    onClick: closeModal,
    type: "button",
    className: "modal__exit--wrapper"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: "modal__icon__exit"
  })), header && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2", {
    className: "modal__header",
    dangerouslySetInnerHTML: {
      __html: header
    }
  }), children));
};
Modal.propTypes = {
  className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string).isRequired,
  header: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string).isRequired,
  children: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().node),
  closeModal: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),
  isCloseVisible: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),
  contentLabel: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
  shouldCloseOnOverlayClick: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool)
};
Modal.defaultProps = {
  isCloseVisible: true
};
/* harmony default export */ __webpack_exports__.Z = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(Modal));

/***/ }),

/***/ 83856:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ ScheduleItems; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73935);
// EXTERNAL MODULE: ./node_modules/lodash/findIndex.js
var findIndex = __webpack_require__(30998);
var findIndex_default = /*#__PURE__*/__webpack_require__.n(findIndex);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(94184);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./lib/analytics/mParticle_constants.js
var mParticle_constants = __webpack_require__(26566);
// EXTERNAL MODULE: ./lib/dayjs.js
var dayjs = __webpack_require__(57979);
;// CONCATENATED MODULE: ./utils/roundShowTime.js
/**
 * Rounds a date to the nearest 30 minutes.
 *
 * @param {dayjs} date
 *   A dayjs instance of a date to round.
 *
 * @return {dayjs}
 *   The dayjs instance of a date rounded to the nearest 30 minutes.
 */
function roundShowTime(date) {
  const minutes = date.minute();
  let result;
  if (minutes > 45) {
    result = date.add(1, 'hour').minute(0);
  } else if (minutes < 15) {
    result = date.minute(0);
  } else {
    result = date.minute(30);
  }
  return result.second(0);
}
// EXTERNAL MODULE: ./utils/getBranchLiveLink.js
var getBranchLiveLink = __webpack_require__(56364);
// EXTERNAL MODULE: ./utils/getContentClickAttributes.js
var getContentClickAttributes = __webpack_require__(75715);
// EXTERNAL MODULE: ./utils/getTimezoneOffset.js
var getTimezoneOffset = __webpack_require__(78621);
// EXTERNAL MODULE: ./components/TargetedLink/TargetedLink.js
var TargetedLink = __webpack_require__(483);
;// CONCATENATED MODULE: ./components/ScheduleProgram/ScheduleProgram.js

function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }












const LIVE_ENABLED = config/* default */.Z.get('LivePage.enabled');
class ScheduleProgram extends react.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "state", {
      displayMore: false
    });
    _defineProperty(this, "toggleDescription", () => {
      this.setState(prevState => ({
        displayMore: !prevState.displayMore
      }));
    });
    _defineProperty(this, "isStreamAvailable", () => this.props.isSupportedRegionLive && this.props.isLive);
    _defineProperty(this, "isDescriptionToggleVisible", () => this.props.programDescription || this.props.seriesUrlAlias || this.isStreamAvailable());
    _defineProperty(this, "trackSerie", () => this.trackClick('Program Title'));
    _defineProperty(this, "trackSiteLink", () => this.trackClick('Visit Site'));
    _defineProperty(this, "trackLive", () => this.trackClick('WATCH LIVE NOW'));
    _defineProperty(this, "trackClick", clickName => mParticle/* default */.ZP.trackEvent({
      name: mParticle_constants.CONTENT_CLICK,
      type: mParticle_constants.USER_CONTENT,
      pathname: this.props.location.pathname,
      attributes: (0,getContentClickAttributes/* default */.Z)({
        [mParticle_constants.ITEM_CLICKED_NAME]: clickName,
        [mParticle_constants.ITEM_CLICKED_TYPE]: 'Show',
        [mParticle_constants.ITEM_CLICKED_SHOW]: this.props.programTitle,
        [mParticle_constants.ITEM_CLICKED_URL]: "/".concat(this.props.seriesUrlAlias),
        [mParticle_constants.ITEM_CLICKED_BRAND]: 'NBC',
        [mParticle_constants.SHOW]: this.props.programTitle,
        [mParticle_constants.BRAND]: 'NBC',
        [mParticle_constants.CONTENT_POSITION]: 1,
        [mParticle_constants.CUSTOM_SHELF_POSITION]: 1,
        [mParticle_constants.CUSTOM_SHELF_TITLE]: 'Schedule'
      })
    }));
  }
  render() {
    const canStream = this.isStreamAvailable();
    const offset = (0,getTimezoneOffset/* default */.Z)(this.props.timeZone);
    return /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('schedule-program', {
        'schedule-program--live': this.props.isLive
      }),
      "data-internalid": this.props.v4ID
    }, /*#__PURE__*/react.createElement("div", {
      className: "schedule-program__time"
    }, /*#__PURE__*/react.createElement("span", {
      className: "schedule-program__time-hmm"
    }, roundShowTime((0,dayjs/* default */.Z)(this.props.startTime)).utcOffset(offset).format('h:mma')), this.props.isLive && /*#__PURE__*/react.createElement("strong", {
      className: "schedule-program__live-label"
    }, "Live")), /*#__PURE__*/react.createElement("div", {
      className: "schedule-program__content"
    }, /*#__PURE__*/react.createElement("div", {
      className: "schedule-program__content__serie-title"
    }, this.props.seriesUrlAlias ? /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, {
      href: "/".concat(this.props.seriesUrlAlias),
      onClick: this.trackSerie
    }, this.props.programTitle) : this.props.programTitle), this.props.isNew && /*#__PURE__*/react.createElement("div", {
      className: "schedule-program__content__all-new"
    }, "All New"), this.props.programDescription && /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('schedule-program__content__description', {
        'schedule-program__content__description--active': this.state.displayMore
      })
    }, /*#__PURE__*/react.createElement("p", null, this.props.programDescription)), (this.props.ratingWithAdvisories || this.props.audioDescription || this.props.closedCaption) && /*#__PURE__*/react.createElement("div", {
      className: "schedule-program__meta"
    }, this.props.ratingWithAdvisories && /*#__PURE__*/react.createElement("span", {
      className: "schedule-program__meta__rating"
    }, this.props.ratingWithAdvisories), this.props.audioDescription && /*#__PURE__*/react.createElement("span", {
      className: "schedule-program__meta__audio-description"
    }, "Audio description available."), this.props.closedCaption && /*#__PURE__*/react.createElement("span", {
      className: "schedule-program__content_rating__cc"
    }))), this.isDescriptionToggleVisible() && /*#__PURE__*/react.createElement("div", {
      onClick: this.toggleDescription,
      className: classnames_default()('schedule-program__more', {
        'schedule-program__more--active': this.state.displayMore
      })
    }), /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('schedule-program__ctas', {
        'schedule-program__ctas--active': this.state.displayMore
      })
    }, LIVE_ENABLED && canStream && this.props.isMobile && /*#__PURE__*/react.createElement("a", {
      className: "schedule-program__cta__live",
      href: (0,getBranchLiveLink/* default */.Z)()
    }, "Watch Live Now"), LIVE_ENABLED && canStream && !this.props.isMobile && /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, {
      className: "schedule-program__cta__live",
      href: "/live",
      query: {
        brand: 'nbc'
      },
      onClick: this.trackLive
    }, "Watch Live Now"), this.props.seriesUrlAlias && /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, {
      className: "schedule-program__cta__serie",
      href: "/".concat(this.props.seriesUrlAlias),
      onClick: this.trackSiteLink
    }, "Visit Site")));
  }
}
_defineProperty(ScheduleProgram, "propTypes", {
  audioDescription: (prop_types_default()).bool,
  closedCaption: (prop_types_default()).bool,
  isSupportedRegionLive: (prop_types_default()).bool,
  isNew: (prop_types_default()).bool,
  isMobile: (prop_types_default()).bool,
  isLive: (prop_types_default()).bool,
  startTime: (prop_types_default()).string,
  programTitle: (prop_types_default()).string,
  programDescription: (prop_types_default()).string,
  ratingWithAdvisories: (prop_types_default()).string,
  seriesUrlAlias: (prop_types_default()).string,
  v4ID: (prop_types_default()).string,
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string.isRequired
  }).isRequired,
  timeZone: (prop_types_default()).string
});
/* harmony default export */ var ScheduleProgram_ScheduleProgram = (ScheduleProgram);
;// CONCATENATED MODULE: ./components/Schedule/ScheduleItems.js
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

function ScheduleItems_defineProperty(e, r, t) { return (r = ScheduleItems_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function ScheduleItems_toPropertyKey(t) { var i = ScheduleItems_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function ScheduleItems_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







class ScheduleItems extends react.PureComponent {
  constructor() {
    super(...arguments);
    ScheduleItems_defineProperty(this, "getLiveIndex", props => {
      const offset = (0,getTimezoneOffset/* default */.Z)(this.props.timeZone);
      return findIndex_default()(props.items, program => (0,dayjs/* default */.Z)().isAfter((0,dayjs/* default */.Z)(program.data.startTime).utcOffset(offset)) && (0,dayjs/* default */.Z)().isBefore((0,dayjs/* default */.Z)(program.data.endTime).utcOffset(offset)));
    });
  }
  componentDidMount() {
    this.scrollToIndex(this.props);
  }
  UNSAFE_componentWillReceiveProps(nextProps) {
    if (this.props.activeIndex !== nextProps.activeIndex) {
      this.scrollToIndex(nextProps);
    }
  }
  scrollToIndex(props) {
    const index = this.getLiveIndex(props);
    const element = react_dom.findDOMNode(this).children[index];
    element && window.requestAnimationFrame && window.requestAnimationFrame(() => {
      let offset = props.isNewsBarOpen ? 185 : 115;
      if (window.innerWidth >= 990) {
        offset = props.isNewsBarOpen ? 180 : 140;
      } else if (window.innerWidth >= 768) {
        offset = props.isNewsBarOpen ? 157 : 117;
      }
      // Scrolls viewport to top of element taking sticky header into account.
      window.scrollBy(0, element.getBoundingClientRect().top - offset);
    });
  }
  render() {
    const getLiveIndex = this.getLiveIndex(this.props);
    return /*#__PURE__*/react.createElement("div", {
      className: "schedule-items"
    }, this.props.items.map((data, index) => /*#__PURE__*/react.createElement(ScheduleProgram_ScheduleProgram, _extends({
      location: this.props.location,
      isMobile: this.props.isMobile,
      isSupportedRegionLive: this.props.isSupportedRegionLive,
      key: index,
      isLive: getLiveIndex === index && this.props.initiallySelected === this.props.activeIndex
    }, data.data, {
      timeZone: this.props.timeZone
    }))));
  }
}
ScheduleItems.propTypes = {
  activeIndex: (prop_types_default()).number.isRequired,
  component: (prop_types_default()).string,
  isSupportedRegionLive: (prop_types_default()).bool,
  isMobile: (prop_types_default()).bool,
  initiallySelected: (prop_types_default()).number,
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string.isRequired
  }).isRequired,
  isNewsBarOpen: (prop_types_default()).bool,
  items: prop_types_default().arrayOf(prop_types_default().shape({
    audioDescription: (prop_types_default()).bool,
    closedCaption: (prop_types_default()).bool,
    isNew: (prop_types_default()).bool,
    startTime: (prop_types_default()).string,
    programtTitle: (prop_types_default()).string,
    programDescription: (prop_types_default()).string,
    programTitle: (prop_types_default()).string,
    ratingWithAdvisories: (prop_types_default()).string,
    seriesUrlAlias: (prop_types_default()).string,
    v4ID: (prop_types_default()).string
  }))
};

/***/ }),

/***/ 39843:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $l: function() { return /* binding */ getIsoFormat; },
/* harmony export */   $y: function() { return /* binding */ getWhiteBrandLogo; },
/* harmony export */   HM: function() { return /* binding */ getBrandDisplayProp; },
/* harmony export */   I$: function() { return /* binding */ getEndTimeStamp; },
/* harmony export */   LG: function() { return /* binding */ getEventTertiaryTitle; },
/* harmony export */   PQ: function() { return /* binding */ getEventDate; },
/* harmony export */   QN: function() { return /* binding */ ALL; },
/* harmony export */   RP: function() { return /* binding */ getEventBadge; },
/* harmony export */   Rv: function() { return /* binding */ longDescriptionSanitized; },
/* harmony export */   Vk: function() { return /* binding */ getEventStarted; },
/* harmony export */   Xw: function() { return /* binding */ getAriaLabel; },
/* harmony export */   YZ: function() { return /* binding */ getNowDate; },
/* harmony export */   au: function() { return /* binding */ getDateTitle; },
/* harmony export */   c3: function() { return /* binding */ TODAY; },
/* harmony export */   dP: function() { return /* binding */ getSecondaryTitle; },
/* harmony export */   gv: function() { return /* binding */ getTileComponentType; },
/* harmony export */   hU: function() { return /* binding */ processDates; },
/* harmony export */   jN: function() { return /* binding */ getBrand; },
/* harmony export */   o: function() { return /* binding */ getStartTimeStamp; },
/* harmony export */   on: function() { return /* binding */ getDateInfo; },
/* harmony export */   r6: function() { return /* binding */ getUpcomingBadge; },
/* harmony export */   uD: function() { return /* binding */ getTertiaryTitle; }
/* harmony export */ });
/* unused harmony export getFERTimestamp */
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var sanitize_html__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(91036);
/* harmony import */ var sanitize_html__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sanitize_html__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78718);
/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_pick__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74369);
/* harmony import */ var _lib_dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(57979);
/* harmony import */ var _utils_getSeasonEpisode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(64058);
/* harmony import */ var _utils_formatDate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(54819);
/* harmony import */ var _utils_programmingTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20057);
/* harmony import */ var _utils_timeFormatting_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(89583);









const BRANDS = config__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.get('brands');
const TODAY = 'Today';
const ALL = 'View All Dates';

/**
 * Algolia dates are unix timestamped for indexing purposes.
 * This adds some convenience for handling both
 * null dates and converting them to date objects that dayjs expects!
 *
 * @param {Object} dates - An object containing sunset, airDate, and sunrise dates.
 * @param {string} dates.sunset - The date of the sunset.
 * @param {string} dates.airDate - The date of the air date.
 * @param {string} dates.sunrise - The date of the sunrise.
 *
 * @param {Object} [options] - Optional parameters.
 * @param {boolean} [options.isTimeInMs=false] - Whether the input times are in milliseconds.
 *
 * @returns {Object} - An object containing the processed sunset, airDate, and sunrise dates.
 */
const processDates = function (_ref) {
  let {
    sunset,
    airDate,
    sunrise
  } = _ref;
  let {
    isTimeInMs = false
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const dates = {
    sunset,
    airDate,
    sunrise
  };
  return Object.keys(dates).reduce((add, key) => {
    const milliseconds = isTimeInMs ? 1 : 1000;
    const processedDate = new Date(dates[key] * milliseconds);
    return {
      ...add,
      [key]: dates[key] ? processedDate : new Date()
    };
  }, {});
};
const getBrand = brands => {
  if (brands.length > 1) {
    const mostRecentBrand = brands.find(b => b.isMostRecentBrand);
    if (!mostRecentBrand) {
      const brandsConfig = lodash_pick__WEBPACK_IMPORTED_MODULE_1___default()(BRANDS, _ref2 => {
        let {
          brandDisplayTitle
        } = _ref2;
        return brands.some(_ref3 => {
          let {
            displayTitle
          } = _ref3;
          return brandDisplayTitle === displayTitle;
        });
      });
      const priorityBrand = Object.values(brandsConfig).reduce((a, b) => a.priority < b.priority ? a : b);
      return {
        ...priorityBrand,
        isMostRecentBrand: false
      };
    }
    return mostRecentBrand;
  }
  return brands[0];
};
const longDescriptionSanitized = longDescription => {
  if (!longDescription) return null;
  return sanitize_html__WEBPACK_IMPORTED_MODULE_7___default()(longDescription, {
    allowedTags: [],
    textFilter(text) {
      return text.replace(/&quot;/g, '"').replace(/&amp;/g, '&').replace(/&gt;/g, '>').replace(/&lt;/g, '<').replace(/&#39;/g, "'");
    }
  });
};
const getBrandDisplayProp = (titleContent, brand) => {
  if (titleContent) {
    return titleContent.brands.length > 1 && !brand.isMostRecentBrand ? 'brandDisplayTitle' : 'title';
  }
  return 'displayTitle';
};
const getWhiteBrandLogo = brand => {
  const whiteBrandLogo = brand === null || brand === void 0 ? void 0 : brand.whiteBrandLogo;
  return (whiteBrandLogo === null || whiteBrandLogo === void 0 ? void 0 : whiteBrandLogo.path) || whiteBrandLogo || '';
};
const getSecondaryTitle = (algoliaProperties, metadata) => {
  const {
    isSeries,
    isEpisode,
    isMovie,
    isSegment,
    isSportsVideo
  } = algoliaProperties;
  const {
    dateInfo,
    episegment,
    tuneIn,
    title = ''
  } = metadata;
  if (isSeries || isMovie) {
    return tuneIn;
  }
  if (isEpisode) {
    return dateInfo;
  }
  if (isSegment || isSportsVideo) {
    return episegment.title;
  }
  return title;
};
const getTertiaryTitle = (programmingType, dateInfo, episegment) => (0,_utils_programmingTypes__WEBPACK_IMPORTED_MODULE_5__/* .isFullEpisodeType */ .gO)(programmingType) ? episegment.title : dateInfo;
const getDateInfo = _ref4 => {
  let {
    episegment,
    processedDates,
    programmingType,
    season = {}
  } = _ref4;
  const {
    seasonNumber
  } = season;
  const airDate = (0,_utils_formatDate__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(processedDates.airDate.toISOString());
  const episodeNumber = (0,_utils_programmingTypes__WEBPACK_IMPORTED_MODULE_5__/* .isFullEpisodeType */ .gO)(programmingType) ? episegment.episodeNumber : null;
  if ((0,_utils_programmingTypes__WEBPACK_IMPORTED_MODULE_5__/* .isFullEpisodeType */ .gO)(programmingType)) {
    return [(0,_utils_getSeasonEpisode__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(seasonNumber, episodeNumber), airDate].join(' | ');
  }
  return (0,_utils_timeFormatting_util__WEBPACK_IMPORTED_MODULE_6__/* .formatRelativeTime */ .SY)(processedDates.airDate.getTime());
};
const getEventBadge = endDate => {
  const now = (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)();
  const dayDiff = now.diff((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(endDate), 'd', true);
  return dayDiff <= 3 ? 'NEW' : null;
};
const getFERTimestamp = startDate => {
  const start = _lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z.unix(startDate);
  return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(start).format('MM/DD/YY');
};
const getDateTitle = startTime => startTime && (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(startTime).format('ddd MM/DD');
const getEventTertiaryTitle = _ref5 => {
  let {
    isFullEventReplay,
    startDate
  } = _ref5;
  if (isFullEventReplay) {
    return getFERTimestamp(startDate);
  }
  return null;
};
const getTileComponentType = _ref6 => {
  let {
    isMovie,
    isEpisode,
    isSegment,
    isSeries,
    isFullEventReplay,
    isSingleLiveEvent,
    isSportsVideo,
    isSportsSeries
  } = _ref6;
  if (isSingleLiveEvent) {
    return 'UpcomingLiveTile';
  }
  if (isFullEventReplay) {
    return 'ReplayTile';
  }
  if (isMovie) {
    return 'MovieTile';
  }
  if (isSeries || isSportsSeries) {
    return 'SeriesTile';
  }
  if (isSegment || isEpisode || isSportsVideo) {
    return 'VideoTile';
  }
  return null;
};
const getNowDate = function () {
  let dateFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'YYYY-MM-DD';
  return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)().format(dateFormat);
};
const getEventStarted = date => {
  let normalizedDate = (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(date);
  if (!normalizedDate.isValid()) return false;
  normalizedDate = normalizedDate.local();
  return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)().isAfter(normalizedDate);
};
const getAriaLabel = _ref7 => {
  let {
    ariaLabel,
    brand,
    duration,
    isFullEventReplay,
    isSingleLiveEvent,
    isSFVOD,
    isFullEpisode,
    labelBadge,
    league,
    longDescription,
    secondaryTitle,
    sport,
    startDate,
    tertiaryTitle,
    title,
    seasonNumber,
    episodeNumber
  } = _ref7;
  if (isFullEventReplay) {
    const startTimes = (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(tertiaryTitle);
    const dateInformationAria = startTimes.isValid() ? "Aired on ".concat(startTimes.format('MMM DD, YYYY')) : '';
    return {
      ariaLabel: [league || sport, title, dateInformationAria].filter(x => x).join(', ')
    };
  }
  if (isSingleLiveEvent) {
    if (getEventStarted(startDate)) {
      return {
        liveAriaLabel: ['Currently Streaming', league || sport, title, "on ".concat(brand)].filter(x => x).join(', ')
      };
    }
    const startTime = (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(startDate);
    return {
      upcomingAriaLabel: ["Upcoming on ".concat(brand), "Live at ".concat(startTime.format('h:mm A dddd MMMM D')), league || sport, title].filter(x => x).join(', ')
    };
  }
  if (isSFVOD) {
    const date = (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(tertiaryTitle);
    const tertiaryTitleDate = date.isValid() ? "Aired on ".concat(date.format('MMMM D, YYYY')) : tertiaryTitle;
    return {
      ariaLabel: [labelBadge, duration, title, secondaryTitle, tertiaryTitleDate, longDescription].filter(x => x).join(', ')
    };
  }
  if (isFullEpisode) {
    return {
      ariaLabel: [title, tertiaryTitle, "Season ".concat(seasonNumber), "Episode ".concat(episodeNumber), "Aired on ".concat((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(startDate).format('MM/DD/YY'))].join(', ')
    };
    // 'The Tonight Show Starring Jimmy Fallon, Travis Kelce, Jay Hernandez, Samara Joy, Season 10, Episode 90, Aired on 02/16/23'
  }
  return ariaLabel || '';
};
const getIsoFormat = date => _lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z.unix(date).toISOString();
const getStartTimeStamp = date => (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(date).startOf('day').unix();
const getEndTimeStamp = date => (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(date).endOf('day').unix();
const getEventDate = startDate => {
  const start = _lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z.unix(startDate);
  return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(start).format('YYYY-MM-DD');
};

// Function to get the formatted and uppercase date string
const getUpcomingBadge = startDate => {
  const start = _lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z.unix(startDate);
  return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(start).format('h:mm A ddd MMM D').toUpperCase();
};

/***/ }),

/***/ 87968:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(21804);
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _BrandLogo_BrandLogo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82020);





const SectionHeading = props => {
  const HeadingWrapper = props.level === 1 ? 'h1' : 'h2';
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('section-heading', {
      'section-heading--sponsor': props.sponsorLogo || props.sponsorAltText,
      'section-heading--text': !props.listTitleImage
    })
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(HeadingWrapper, {
    className: "section-heading__title",
    id: "section-heading-".concat(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_2___default()(props.title))
  }, props.listTitleImage ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_BrandLogo_BrandLogo__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    className: "section-heading__title--image",
    url: props.listTitleImage,
    brandTitle: props.title,
    align: "left"
  }) : props.title, (props.sponsorLogo || props.sponsorAltText) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", {
    className: "section-heading__sponsor-logo"
  }, props.sponsorLogo ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_BrandLogo_BrandLogo__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z, {
    url: props.sponsorLogo,
    brandTitle: props.sponsorAltText,
    align: "left",
    srcSetConfig: {
      minWidth: 340,
      maxWidth: 340
    }
  }) : props.sponsorAltText)), props.children);
};
SectionHeading.propTypes = {
  title: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string).isRequired,
  listTitleImage: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),
  level: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().number),
  children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().node),
  sponsorLogo: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),
  sponsorAltText: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string)
};
/* harmony default export */ __webpack_exports__.Z = (SectionHeading);

/***/ }),

/***/ 70927:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ Shelf_Shelf; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__(57267);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-intersection-observer/react-intersection-observer.m.js
var react_intersection_observer_m = __webpack_require__(70131);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(94184);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/lodash/kebabCase.js
var kebabCase = __webpack_require__(21804);
var kebabCase_default = /*#__PURE__*/__webpack_require__.n(kebabCase);
// EXTERNAL MODULE: ./node_modules/lodash/throttle.js
var throttle = __webpack_require__(23493);
var throttle_default = /*#__PURE__*/__webpack_require__.n(throttle);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 14 modules
var es = __webpack_require__(20688);
// EXTERNAL MODULE: ./lib/friendship.js + 29 modules
var friendship = __webpack_require__(67641);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./lib/analytics/mParticle_constants.js
var mParticle_constants = __webpack_require__(26566);
// EXTERNAL MODULE: ./utils/getSmartTileProps.js
var getSmartTileProps = __webpack_require__(56600);
// EXTERNAL MODULE: ./utils/isTargetedLink.js
var isTargetedLink = __webpack_require__(84022);
// EXTERNAL MODULE: ./utils/getPathname.js
var getPathname = __webpack_require__(50734);
// EXTERNAL MODULE: ./utils/isUpcomingType.js
var isUpcomingType = __webpack_require__(2034);
// EXTERNAL MODULE: ./utils/getContentClickAttributes.js
var getContentClickAttributes = __webpack_require__(75715);
// EXTERNAL MODULE: ./utils/getTilesCount.js + 1 modules
var getTilesCount = __webpack_require__(79004);
// EXTERNAL MODULE: ./utils/getTileAspectRatio.js
var getTileAspectRatio = __webpack_require__(98463);
// EXTERNAL MODULE: ./utils/getCssVariable.js
var getCssVariable = __webpack_require__(74051);
// EXTERNAL MODULE: ./utils/getErrorAttributes.js
var getErrorAttributes = __webpack_require__(93152);
// EXTERNAL MODULE: ./utils/getClickActionAttributes.js
var getClickActionAttributes = __webpack_require__(20393);
// EXTERNAL MODULE: ./components/VideoPlayerV2/utils/saveVideoWatched.js + 1 modules
var saveVideoWatched = __webpack_require__(71496);
// EXTERNAL MODULE: ./components/SectionHeading/SectionHeading.js
var SectionHeading = __webpack_require__(87968);
// EXTERNAL MODULE: ./components/Tile/Tile.js + 22 modules
var Tile = __webpack_require__(59901);
// EXTERNAL MODULE: ./components/Dots/Dots.js
var Dots = __webpack_require__(27462);
// EXTERNAL MODULE: ./components/CTALink/CTALink.js
var CTALink = __webpack_require__(45375);
;// CONCATENATED MODULE: ./components/Tile/TileViewAll.js







const TileViewAll = _ref => {
  let {
    viewAllCta: {
      data,
      analytics
    },
    tabIndex,
    shelfTitle,
    pathname,
    onClick,
    itemIndex
  } = _ref;
  const handleClick = () => {
    mParticle/* default */.ZP.trackEvent({
      name: mParticle_constants.CLICK_ACTION,
      type: mParticle_constants.NAVIGATION,
      pathname,
      attributes: (0,getClickActionAttributes/* default */.Z)({
        [mParticle_constants.CUSTOM_SHELF_TITLE]: shelfTitle,
        [mParticle_constants.ITEM_CLICKED_NAME]: analytics.ctaTitle
      })
    });
    onclick && onClick();
  };
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--view-all', {
      'tile--outside': tabIndex === -1
    })
  }, /*#__PURE__*/react.createElement(CTALink/* default */.Z, {
    ctaData: data,
    onClick: handleClick,
    className: "button button--square",
    tabIndex: tabIndex,
    "data-index": itemIndex
  }));
};
TileViewAll.propTypes = {
  viewAllCta: prop_types_default().shape({
    data: (prop_types_default()).object,
    analytics: prop_types_default().shape({
      ctaTitle: (prop_types_default()).string
    })
  }),
  tabIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  pathname: (prop_types_default()).string,
  onClick: (prop_types_default()).func,
  itemIndex: (prop_types_default()).number
};
/* harmony default export */ var Tile_TileViewAll = (TileViewAll);
;// CONCATENATED MODULE: ./components/Shelf/Shelf.tracking.js

const SERIES_TILE = 'SeriesTile';
const FEATURE_TILE = 'FeatureTile';
const BRAND_TILE = 'BrandTile';
const MOVIE_TILE = 'MovieTile';
const PLAYLIST_TILE = 'PlaylistTile';
const ON_AIR_NOW_TILE = 'OnAirNowTile';
const SLIDE_TILE = 'SlideTile';
const SMART_TILE = 'SmartTile';
const UPCOMING_LIVE_TILE = 'UpcomingLiveTile';
const LIVE_SLIDE_TILE = 'LIVE_SLIDE_TILE';
const SINGLE_LIVE_EVENT = 'Single Live Event';
const BRAND = 'Brand';
const LIVE = 'Live';
const SHOW = 'Show';
const FEATURE = 'Feature';
const MOVIE_HOME = 'Movie Home';
const PLAYLIST = 'Playlist';
const getItemAnalytics = (component, data, analytics) => {
  if (component === SLIDE_TILE) {
    var _data$cta;
    return data === null || data === void 0 ? void 0 : (_data$cta = data.cta) === null || _data$cta === void 0 ? void 0 : _data$cta.analytics;
  }
  if (component === SMART_TILE) {
    var _data$tile;
    return data === null || data === void 0 ? void 0 : (_data$tile = data.tile) === null || _data$tile === void 0 ? void 0 : _data$tile.analytics;
  }
  return analytics;
};
const getItemType = (component, data, itemAnalytics) => {
  var _data$cta2, _data$cta2$analytics;
  const isLive = data === null || data === void 0 ? void 0 : (_data$cta2 = data.cta) === null || _data$cta2 === void 0 ? void 0 : (_data$cta2$analytics = _data$cta2.analytics) === null || _data$cta2$analytics === void 0 ? void 0 : _data$cta2$analytics.isLive;
  const {
    programmingType
  } = itemAnalytics;
  let componentType = component;
  if ((0,isUpcomingType/* default */.Z)(component)) {
    const isSingleLiveEvent = (data === null || data === void 0 ? void 0 : data.contentType) === 'SLE';
    if (isSingleLiveEvent) {
      componentType = SINGLE_LIVE_EVENT;
    } else {
      componentType = UPCOMING_LIVE_TILE;
    }
  }
  if (component === SLIDE_TILE && isLive) {
    componentType = LIVE_SLIDE_TILE;
  }
  switch (componentType) {
    case UPCOMING_LIVE_TILE:
      return UPCOMING_LIVE_TILE;
    case SINGLE_LIVE_EVENT:
      return SINGLE_LIVE_EVENT;
    case ON_AIR_NOW_TILE:
    case LIVE_SLIDE_TILE:
      return LIVE;
    case SERIES_TILE:
      return SHOW;
    case FEATURE_TILE:
      return FEATURE;
    case BRAND_TILE:
      return BRAND;
    case MOVIE_TILE:
      return MOVIE_HOME;
    case PLAYLIST_TILE:
      return PLAYLIST;
    default:
      return programmingType;
  }
};
const getItemClickedName = (itemAnalytics, itemType) => {
  const {
    itemClickedName,
    brand,
    videoTitle,
    episodeTitle,
    programTitle,
    title,
    series,
    movie,
    secondaryTitle
  } = itemAnalytics;
  if (itemClickedName) {
    return itemClickedName;
  }
  if (itemType === BRAND) {
    return brand === null || brand === void 0 ? void 0 : brand.title;
  }
  if (itemType === LIVE) {
    return videoTitle || episodeTitle || programTitle;
  }
  if (itemType === SINGLE_LIVE_EVENT) {
    return secondaryTitle;
  }
  return title || series || movie;
};
;// CONCATENATED MODULE: ./components/Shelf/Shelf.js
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



























const isSLE = function () {
  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return ['sle', 'single live event'].includes(type.toLowerCase());
};
const isLive = function () {
  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return ['live'].includes(type.toLowerCase());
};
const isLinearContent = type => isSLE(type) || isLive(type);

// All shelves render the first 5 tile thumbnails until interacted with.
const DEFERRED_IMAGE_COUNT = 5;
const RIGHT = 'right';
const LEFT = 'left';
class Shelf extends react.Component {
  constructor(props) {
    var _this;
    super(props);
    _this = this;
    _defineProperty(this, "normalizeData", items => items.map(item => {
      if (item && !item.data && item.replayTileData) {
        item.data = item.replayTileData;
      }
      if (item && !item.data && item.onAirNowTileData) {
        item.data = item.onAirNowTileData;
      }
      return item && item.data && item;
    }));
    _defineProperty(this, "scrollToRight", () => {
      const {
        autoScroll,
        items,
        isMobile,
        isTablet
      } = this.props;
      if (autoScroll !== null && autoScroll !== void 0 && autoScroll.isEnabled) {
        const numTiles = (0,getTilesCount/* getVisibleTilesCount */.i)(this.tilesContainer.current) || 0;
        const pos = (items.findIndex(item => {
          var _item$data;
          return ((_item$data = item.data) === null || _item$data === void 0 ? void 0 : _item$data[autoScroll.key]) === autoScroll.value;
        }) || 0) + 1;
        if (numTiles > 0 && pos > numTiles) {
          const scrollPos = Math.floor(pos / numTiles) + (pos % numTiles !== 0 ? 1 : 0);
          let actualScrollPos = pos > numTiles && scrollPos === 1 ? 0 : 1;
          if (isMobile || isTablet) {
            const itemInfo = this.tilesContainer.current.querySelector('.tile');
            const itemWidth = itemInfo ? itemInfo.getBoundingClientRect().width : 263;
            const inShelfPosition = (itemWidth + 15) * (pos - 1);
            const subNavWrapper = this.scrollableWrapperRef.current;
            subNavWrapper.scrollLeft = inShelfPosition;
          } else {
            while (scrollPos > actualScrollPos) {
              actualScrollPos += 1;
              this.onArrowClick(RIGHT);
            }
          }
        }
      }
    });
    // @deprecated We can use the Analytics Object once this is passed to
    // us by the BFF. For now, we have to make these regex checks.
    _defineProperty(this, "getShelfTitle", () => {
      const shelfTitle = /^Episodes \(/.test(this.props.listTitle) ? 'Episodes' : /^Clips \(/.test(this.props.listTitle) ? 'Clips' : this.props.treatments.indexOf('withSlideTile') >= 0 ? 'Dynamic Lead' : this.props.listTitle;
      return shelfTitle;
    });
    // Hide the right arrow if there is not any extra content.
    _defineProperty(this, "calculateRightArrowVisibility", () => {
      const wrapper = this.tilesContainer.current;
      if (wrapper) {
        const scrollWidth = wrapper.scrollWidth;
        const wrapperRect = wrapper.getBoundingClientRect();
        const isRightArrowVisible = scrollWidth > wrapperRect.width;
        if (isRightArrowVisible !== this.state.isRightArrowVisible) ;
        this.setState({
          isRightArrowVisible
        });
      }
    });
    _defineProperty(this, "calculateIrregularShelfWidth", (children, dir, numTiles) => children.reduce((tileWidth, item, index) => {
      const nextChildrens = dir === RIGHT ? Array.from({
        length: numTiles
      }, (_, j) => j + this.state.activeItem) : Array.from({
        length: numTiles
      }, (_, j) => j + this.state.previousActiveItem);
      if (nextChildrens.indexOf(index) >= 0) {
        const childData = item.getBoundingClientRect();
        const childMargin = parseInt(window.getComputedStyle(item).marginRight.replace('px', ''), 10);
        return tileWidth + childData.width + childMargin;
      }
      return tileWidth;
    }, 0));
    // Purposefully store these values as statics to avoid using React state.
    // The change in their values should not trigger a re-render but we want to
    // avoid re-calculating them too often.
    _defineProperty(this, "calculateScrollOffsets", dir => {
      const wrapper = this.tilesContainer.current;
      if (!wrapper) {
        return;
      }
      const {
        isShelfIrregular
      } = this.props;
      const {
        isLazyLoadingDisabled
      } = this.props;
      const tileMarginSize = (0,getCssVariable/* default */.Z)('tile-margin');

      // Exit early for tiles that we don't support.
      const numTiles = (0,getTilesCount/* getVisibleTilesCount */.i)(this.tilesContainer.current);
      if (numTiles === null) {
        return;
      }

      // Calculate the maximum distance that we can scroll the shelf.
      const scrollWidth = wrapper.scrollWidth;
      const wrapperRect = wrapper.getBoundingClientRect();
      // This will help View All button have an extra margin from the screen edge
      const extraPadding = isLazyLoadingDisabled ? tileMarginSize : 0;
      this.maxScrollDistance = (scrollWidth + extraPadding - wrapperRect.width) * -1;

      // Calculate scroll distance based on the current viewport and tile width.
      const children = Array.from(get_default()(wrapper, 'children'));
      if (isShelfIrregular && children.length) {
        const totalWidth = this.calculateIrregularShelfWidth(children, dir, numTiles);
        this.scrollOffset = Math.ceil(totalWidth);
        this.tileWidth = totalWidth / numTiles;
        return;
      }
      const firstChild = children[0];
      if (firstChild) {
        const firstChildRect = firstChild.getBoundingClientRect();
        this.tileWidth = firstChildRect.width + tileMarginSize;
        this.scrollOffset = Math.ceil(this.tileWidth * numTiles);
      }
    });
    // Reset values when we detect any change in viewport size.
    _defineProperty(this, "onResizeThrottled", () => {
      this.setState({
        scrollDistance: 0,
        activeItem: 0,
        isLeftArrowVisible: false
      });
      this.scrollOffset = 0;
      this.maxScrollDistance = 0;
      this.endScrollDistance = 0;
      this.calculateRightArrowVisibility();
      this.scrollToRight();
    });
    _defineProperty(this, "fetchMoreItems", () => {
      // Stop if we are already fetching items or there are no more to fetch.
      if (this.props.isLazyLoadingDisabled || this.state.isFetchingMore || !this.state.moreItems) {
        return;
      }
      const lazyShelf = get_default()(this.state.moreItems, 'data');
      if (lazyShelf) {
        this.setState({
          isFetchingMore: true
        });
        (0,friendship/* getLazyComponent */.sO)(lazyShelf).then(component => this.setState(prevState => ({
          isFetchingMore: false,
          items: this.normalizeData(prevState.items.concat(get_default()(component, ['data', 'items'], []))),
          moreItems: get_default()(component, ['data', 'moreItems']),
          isRightArrowVisible: true
        }), () => {
          this.calculateScrollOffsets();
          this.endScrollDistance = 0;
        })).catch(() => {
          const description = "Unable to lazy load component using ".concat(lazyShelf.queryName, " query");
          const errorAttributes = (0,getErrorAttributes/* default */.Z)({
            [mParticle_constants.ERROR_TYPE]: 'Other',
            [mParticle_constants.ERROR_DESCRIPTION]: description,
            [mParticle_constants.ERROR_SYSTEM]: 'Shelf BFF',
            [mParticle_constants.ERROR_FRIENDLY_MESSAGE]: description
          });
          mParticle/* default */.ZP.trackEvent({
            type: mParticle_constants.NAVIGATION,
            name: mParticle_constants.ERROR,
            attributes: errorAttributes
          });
        });
      }
    });
    _defineProperty(this, "onTileFocusChanged", event => {
      this.setState({
        focusedTileIndex: parseInt(event.currentTarget.getAttribute('data-index'), 10)
      });
      this.state.isImagesDeferred && this.setState({
        isImagesDeferred: false
      });
    });
    _defineProperty(this, "onArrowClick", function (dir) {
      var _this$props$autoScrol;
      let onSetStateSuccess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};
      if (_this.scrollOffset === 0 || _this.props.isShelfIrregular) {
        _this.calculateScrollOffsets(dir);
      }
      _this.setState(prevState => {
        _this.props.onClickArrow && _this.props.onClickArrow(dir);

        // Calculate amount to scroll the shelf horizontally.
        let scrollDistance;
        if (_this.endScrollDistance !== 0) {
          // Scroll to the last known distance if we're at the end of the scroll.
          scrollDistance = _this.endScrollDistance;
          _this.endScrollDistance = 0;
        } else {
          // Adjust the scrollDistance using the offset for this viewport.
          scrollDistance = dir === RIGHT ? prevState.scrollDistance - _this.scrollOffset : prevState.scrollDistance + _this.scrollOffset;
        }

        // With the View All button for SLE and FER,
        // we increased the threshold to -35 to avoid overlaping
        // the arrow with the View All button in most cases (screen sizes)
        if (_this.props.isLazyLoadingDisabled && _this.maxScrollDistance - scrollDistance > -35) {
          scrollDistance = _this.maxScrollDistance;
          _this.endScrollDistance = prevState.scrollDistance;
        }
        // Prevent scrolling too far to the right. To avoid browser sub-pixel
        // rounding issues, we also assume anything within 1px is the end.
        else if (scrollDistance < _this.maxScrollDistance || _this.maxScrollDistance - scrollDistance > -1) {
          scrollDistance = _this.maxScrollDistance;
          _this.endScrollDistance = prevState.scrollDistance;
        }
        // With the new More Tiles Feature, we increased the threshold
        // to -5 to avoid showing the arrow for this small amount of scroll
        else if (scrollDistance >= -5) {
          scrollDistance = 0;
        }
        return {
          scrollDistance,
          // Left arrow visible as soon as we leave the initial scrollDistance.
          isLeftArrowVisible: scrollDistance !== 0,
          // Right arrow visible if some content out of view and not at end section.
          isRightArrowVisible: _this.maxScrollDistance < 0 && (scrollDistance === 0 || scrollDistance !== _this.maxScrollDistance),
          isImagesDeferred: false,
          // We add 0.1 to compensate errors during calculations
          activeItem: Math.floor(Math.abs(scrollDistance / _this.tileWidth) + 0.1),
          previousActiveItem: prevState.activeItem
        };
      }, onSetStateSuccess);
      !((_this$props$autoScrol = _this.props.autoScroll) !== null && _this$props$autoScrol !== void 0 && _this$props$autoScrol.isEnabled) && mParticle/* default */.ZP.trackEvent({
        type: mParticle_constants.NAVIGATION,
        name: mParticle_constants.CLICK_ACTION,
        pathname: _this.props.location.pathname,
        attributes: (0,getClickActionAttributes/* default */.Z)({
          [mParticle_constants.BRAND]: _this.props.brandTitle,
          [mParticle_constants.SHOW]: _this.props.seriesShortTitle,
          [mParticle_constants.SEASON]: _this.props.seasonNumber,
          [mParticle_constants.CUSTOM_SHELF_TITLE]: _this.getShelfTitle(),
          [mParticle_constants.ITEM_CLICKED_NAME]: dir === RIGHT ? 'Right Arrow' : 'Left Arrow'
        })
      });
    });
    _defineProperty(this, "onArrowFocus", dir => {
      const arrowElement = dir === RIGHT ? this.rightArrowRef.current : this.leftArrowRef.current;
      const focusedElement = typeof window !== 'undefined' && document.activeElement;
      if (arrowElement === focusedElement) {
        // When using keyboard navigation (i.e. :focus-visible) we force off the
        // slide animations to ease accessibility.
        this.setState({
          isFocusingTiles: true
        });

        // Force an arrow click and focus on the next tile.
        this.onArrowClick(dir, () => {
          const tilesElement = this.tilesContainer.current;
          if (tilesElement) {
            const index = dir === RIGHT ? this.state.focusedTileIndex + 1 : this.state.focusedTileIndex - 1;
            const nextTile = tilesElement.querySelector("[data-index = \"".concat(index, "\"]"));
            if (nextTile) {
              nextTile.focus();
            }
          }
        });
      }
    });
    // We pass data-index to avoid re-binding this function on each render.
    _defineProperty(this, "onClick", (event, options) => {
      const index = parseInt(event.currentTarget.getAttribute('data-index'), 10);
      const destination = get_default()(event.currentTarget, 'href');
      if (!Number.isNaN(index)) {
        const tile = this.state.items[index];
        const isSlideTile = tile.component === 'SlideTile';
        const contentTypes = ['video', 'series', 'movie', 'playlist'];
        const ctaAnalytics = get_default()(tile, ['data', 'cta', 'analytics'], {});
        const isContentClick = isSlideTile ? contentTypes.indexOf(ctaAnalytics.destinationType) >= 0 || ctaAnalytics.destinationType === 'internalPage' && ctaAnalytics.isLive : true;
        if (isContentClick) {
          this.trackContentClick(tile, index, destination, options);
        } else {
          this.trackClickAction(tile);
          if (ctaAnalytics.destinationType === 'externalPage') {
            this.trackExitEvent(tile, index);
          }
        }
        this.props.onClick && this.props.onClick(event, tile, index);
      }
    });
    _defineProperty(this, "trackExitEvent", (_ref, index) => {
      let {
        data
      } = _ref;
      mParticle/* default */.ZP.trackEvent({
        name: mParticle_constants.EXIT,
        type: mParticle_constants.NAVIGATION,
        pathname: this.props.location.pathname,
        attributes: {
          'Destination URL': get_default()(data, ['cta', 'data', 'destination']) || 'None',
          'Destination Type': get_default()(data, ['cta', 'data', 'destinationType']) || 'None',
          'Notification Title': get_default()(data, ['cta', 'data', 'text']) || 'None',
          'Content Position': index + 1,
          'Custom Shelf Position': this.props.shelfIndex + 1,
          'Custom Shelf Title': this.getShelfTitle()
        }
      });
    });
    _defineProperty(this, "trackClickAction", _ref2 => {
      var _data$cta, _data$cta$data;
      let {
        data
      } = _ref2;
      mParticle/* default */.ZP.trackEvent({
        name: mParticle_constants.CLICK_ACTION,
        type: mParticle_constants.NAVIGATION,
        pathname: this.props.location.pathname,
        attributes: (0,getClickActionAttributes/* default */.Z)({
          [mParticle_constants.CUSTOM_SHELF_TITLE]: this.getShelfTitle(),
          [mParticle_constants.ITEM_CLICKED_NAME]: data === null || data === void 0 ? void 0 : (_data$cta = data.cta) === null || _data$cta === void 0 ? void 0 : (_data$cta$data = _data$cta.data) === null || _data$cta$data === void 0 ? void 0 : _data$cta$data.text
        })
      });
    });
    _defineProperty(this, "trackContentClick", function (_ref3, index, destination) {
      var _itemAnalytics$brand, _this$props$analytics;
      let {
        component,
        data,
        analytics
      } = _ref3;
      let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      if (component === 'BrandItemLabel' || component === 'CategoryItemLabel') {
        return;
      }
      const itemAnalytics = getItemAnalytics(component, data, analytics);
      const isHomePage = get_default()(_this.props.location, ['pathname']) === '/';
      const itemType = getItemType(component, data, itemAnalytics);
      const smartTileProps = (0,getSmartTileProps/* default */.Z)(data, analytics);
      const isSingleLiveEvent = isSLE(data === null || data === void 0 ? void 0 : data.contentType);
      const attributes = (0,getContentClickAttributes/* default */.Z)({
        [mParticle_constants.ITEM_CLICKED_NAME]: getItemClickedName(itemAnalytics, itemType),
        [mParticle_constants.ITEM_CLICKED_URL]: destination ? (0,isTargetedLink/* default */.Z)(destination) ? destination : (0,getPathname/* default */.Z)(destination) : 'None',
        [mParticle_constants.ITEM_CLICKED_BRAND]: (_itemAnalytics$brand = itemAnalytics.brand) === null || _itemAnalytics$brand === void 0 ? void 0 : _itemAnalytics$brand.title,
        [mParticle_constants.ITEM_CLICKED_SHOW]: isLive(itemType) ? itemAnalytics.programTitle || itemAnalytics.series : itemAnalytics.movie || itemAnalytics.series,
        [mParticle_constants.ITEM_CLICKED_TYPE]: itemAnalytics.itemClickedType || itemType,
        [mParticle_constants.ITEM_CLICKED_SEASON]: isLive(itemType) ? itemAnalytics.seasonNumber : itemAnalytics.seasonNumber,
        [mParticle_constants.ITEM_CLICKED_VIDEO_ID]: isLive(itemType) ? itemAnalytics.mpxGuid || data.videoMpxGuid : itemAnalytics.mpxGuid || data.mpxGuid || itemAnalytics.pid,
        [mParticle_constants.ITEM_CLICKED_ENTITLEMENT]: isLinearContent(itemType) ? itemAnalytics.liveEntitlement : typeof itemAnalytics.locked === 'boolean' ? itemAnalytics.locked ? 'Entitled' : 'Free' : 'None',
        [mParticle_constants.ITEM_CLICKED_STATE]: isSingleLiveEvent || (0,isUpcomingType/* default */.Z)(itemType) ? options.isEventStarted ? 'Live' : 'Upcoming' : 'None',
        [mParticle_constants.ITEM_CLICKED_LEAGUE]: itemAnalytics.league,
        [mParticle_constants.ITEM_CLICKED_SPORT]: itemAnalytics.sport,
        [mParticle_constants.ITEM_CLICKED_PLAYLIST_NAME]: itemAnalytics.listTitle,
        [mParticle_constants.SHOW]: !isHomePage ? data.seriesShortTitle : mParticle_constants.NONE,
        [mParticle_constants.BRAND]: !isHomePage ? _this.props.brandTitle : mParticle_constants.NONE,
        [mParticle_constants.CONTENT_POSITION]: index + 1,
        [mParticle_constants.CUSTOM_SHELF_POSITION]: _this.props.shelfIndex + 1,
        [mParticle_constants.CUSTOM_SHELF_TITLE]: _this.getShelfTitle(),
        [mParticle_constants.CUSTOM_SHELF_TYPE]: ((_this$props$analytics = _this.props.analytics) === null || _this$props$analytics === void 0 ? void 0 : _this$props$analytics.shelfType) || 'Regular',
        [mParticle_constants.SPONSOR]: _this.props.sponsorName,
        [mParticle_constants.SHELF_MACHINE_NAME]: _this.props.machineName || _this.props.playlistMachineName,
        [mParticle_constants.DYNAMIC_LEAD_LOGIC]: itemAnalytics.dynamicGenerationLogic || 'None',
        ...smartTileProps
      });
      mParticle/* default */.ZP.trackEvent({
        name: mParticle_constants.CONTENT_CLICK,
        type: mParticle_constants.USER_CONTENT,
        pathname: _this.props.location.pathname,
        attributes
      });
    });
    // Mixed tile shelves use the same breakpoint logic as video tiles.
    _defineProperty(this, "getTileType", () => this.props.treatments.includes('mixedTiles') ? 'VideoTile' : get_default()(this.state.items, '[0].component'));
    _defineProperty(this, "getShelfFilter", item => {
      var _item$data2, _item$data2$tile, _item$data2$tile$data;
      if (!(item !== null && item !== void 0 && item.data)) return false;
      const {
        treatments,
        watches
      } = this.props;
      const isShelfContinueWatching = treatments.indexOf('smarterContinueWatching') >= 0;
      if (!isShelfContinueWatching) return true;
      if (watches[(_item$data2 = item.data) === null || _item$data2 === void 0 ? void 0 : (_item$data2$tile = _item$data2.tile) === null || _item$data2$tile === void 0 ? void 0 : (_item$data2$tile$data = _item$data2$tile.data) === null || _item$data2$tile$data === void 0 ? void 0 : _item$data2$tile$data.v4ID] >= saveVideoWatched/* PERCENT_COMPLETE */.IW) return false;
      return true;
    });
    _defineProperty(this, "getItems", () => {
      const {
        shelfIndex,
        listTitle,
        isMobile,
        displayMeta,
        treatments,
        pagePath,
        activeBrandIndex,
        activeCategoryIndex,
        shouldNotUpdateScroll,
        sponsorName,
        playlistMachineName,
        language,
        isShowPage,
        machineName,
        viewAllCta,
        isLazyLoadingDisabled,
        location
      } = this.props;
      const {
        items,
        isInView,
        isImagesDeferred,
        activeItem,
        isRightArrowVisible
      } = this.state;
      const shelfTitle = listTitle && listTitle.replace(/\s\((\d*)\)$/, '') || treatments.indexOf('withSlideTile') >= 0 && 'Dynamic Lead' || '';
      const tileType = this.getTileType();
      const numTiles = (0,getTilesCount/* getTilesCount */.g)(this.tilesContainer.current, tileType, this.state.activeItem);
      const tiles = items.filter(t => this.getShelfFilter(t)).map((tile, i) => /*#__PURE__*/react.createElement(Tile/* default */.Z, _extends({}, tile, {
        key: "".concat(tile.data.instanceID, "-").concat(i),
        onClick: this.onClick,
        itemIndex: i,
        onFocus: this.onTileFocusChanged,
        pagePath: pagePath,
        shelfTitle: shelfTitle,
        sponsorName: sponsorName,
        shelfPlaylistMachineName: playlistMachineName,
        shelfIndex: shelfIndex,
        isMobile: isMobile,
        displayMeta: displayMeta,
        isBrandActive: activeBrandIndex === i,
        isCategoryActive: activeCategoryIndex === i,
        isZoomable: true,
        tabIndex: i >= activeItem && i < activeItem + numTiles ? null : -1,
        srcSetConfig: treatments.indexOf('withSlideTile') >= 0 ? {
          minWidth: 340,
          maxWidth: 990
        } : undefined,
        smartTileProps: (0,getSmartTileProps/* default */.Z)(tile.data, tile.analytics),
        shouldNotUpdateScroll: shouldNotUpdateScroll,
        isImageDeferred: !isInView || isImagesDeferred && i >= DEFERRED_IMAGE_COUNT,
        language: language,
        isShowPage: isShowPage // Custom display for TITLE_V2.
        ,
        isUpcomingType: tile.component === 'UpcomingLiveTile',
        shelfMachineName: machineName,
        shelfType: mParticle_constants.REGULAR
      })));
      if (isLazyLoadingDisabled) {
        tiles.push( /*#__PURE__*/react.createElement(Tile_TileViewAll, {
          key: tiles.length,
          itemIndex: tiles.length,
          tabIndex: !isMobile && isRightArrowVisible ? -1 : null,
          viewAllCta: viewAllCta,
          pathname: location.pathname,
          shelfTitle: this.getShelfTitle()
        }, viewAllCta.title));
      }
      return tiles;
    });
    _defineProperty(this, "handleArrowMouseDown", e => {
      var _e$currentTarget, _e$currentTarget$data;
      e.preventDefault();
      const dir = (e === null || e === void 0 ? void 0 : (_e$currentTarget = e.currentTarget) === null || _e$currentTarget === void 0 ? void 0 : (_e$currentTarget$data = _e$currentTarget.dataset) === null || _e$currentTarget$data === void 0 ? void 0 : _e$currentTarget$data.direction) || RIGHT;
      this.setState({
        isFocusingTiles: false
      });
      this.onArrowClick(dir);
    });
    _defineProperty(this, "handleArrowFocus", e => {
      var _e$currentTarget2, _e$currentTarget2$dat;
      e.preventDefault();
      const dir = (e === null || e === void 0 ? void 0 : (_e$currentTarget2 = e.currentTarget) === null || _e$currentTarget2 === void 0 ? void 0 : (_e$currentTarget2$dat = _e$currentTarget2.dataset) === null || _e$currentTarget2$dat === void 0 ? void 0 : _e$currentTarget2$dat.direction) || RIGHT;
      this.onArrowFocus(dir);
    });
    // Only show arrows if:
    // 1. The shelf is not a marketing band and device width is desktop or larger.
    // 2. The shelf is a slide tile as on the brand landing page and on mobile.
    _defineProperty(this, "getArrows", function (dir) {
      let modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      const {
        isMobile,
        isTablet,
        treatments
      } = _this.props;
      const isVisible = dir === RIGHT ? _this.state.isRightArrowVisible : _this.state.isLeftArrowVisible;
      const isEnabled = isVisible && (treatments.indexOf('marketingBand') < 0 || isMobile && !isTablet && treatments.indexOf('withSlideTile') >= 0);
      return /*#__PURE__*/react.createElement("button", {
        type: "button",
        className: classnames_default()('shelf__arrow', "shelf__arrow--".concat(dir), "shelf__arrow--".concat(modifier), {
          'shelf__arrow--touch': isTablet || isMobile
        }),
        "data-direction": dir,
        onMouseDown: _this.handleArrowMouseDown,
        onFocus: _this.handleArrowFocus,
        disabled: !isEnabled,
        "aria-hidden": "true",
        ref: dir === RIGHT ? _this.rightArrowRef : _this.leftArrowRef
      });
    });
    _defineProperty(this, "getTileType", () => {
      var _this$props$items, _this$props$items2, _this$props$items2$;
      if (!((_this$props$items = this.props.items) !== null && _this$props$items !== void 0 && _this$props$items.length)) return '';
      if (this.props.treatments.indexOf('mixedTiles') >= 0) {
        return 'MixedTile';
      }
      return ((_this$props$items2 = this.props.items) === null || _this$props$items2 === void 0 ? void 0 : (_this$props$items2$ = _this$props$items2['0']) === null || _this$props$items2$ === void 0 ? void 0 : _this$props$items2$.component) || '';
    });
    _defineProperty(this, "getShelfModifierClass", () => {
      var _this$state$items, _this$state$items$, _this$state$items$$da;
      const component = this.getTileType();
      if (component === 'VideoTile' && ((_this$state$items = this.state.items) === null || _this$state$items === void 0 ? void 0 : (_this$state$items$ = _this$state$items['0']) === null || _this$state$items$ === void 0 ? void 0 : (_this$state$items$$da = _this$state$items$.data) === null || _this$state$items$$da === void 0 ? void 0 : _this$state$items$$da.programmingType) !== 'Full Episode') {
        return 'ClipTile';
      }
      return component;
    });
    _defineProperty(this, "getAspectRatio", () => {
      let component;
      if (this.state.items && this.state.items.length) {
        if (this.props.treatments.indexOf('mixedTiles') >= 0) {
          component = 'MixedTile';
        }
        component = get_default()(this.state.items, ['0', 'component']);
      }
      return (0,getTileAspectRatio/* default */.Z)(component);
    });
    _defineProperty(this, "onTouchMove", event => {
      if (!this.initialTouchX || !this.initialTouchY) {
        this.initialTouchX = event.touches[0].clientX;
        this.initialTouchY = event.touches[0].clientY;
        return;
      }

      // Make a best guess that this is a horizontal swipe.
      if (Math.abs(this.initialTouchX - event.touches[0].clientX) > Math.abs(this.initialTouchY - event.touches[0].clientY)) {
        if (this.state.isImagesDeferred) {
          this.setState({
            isImagesDeferred: false
          });
        }
        this.fetchMoreItems();
      }
    });
    _defineProperty(this, "onInView", inView => {
      if (inView) {
        if (this.props.isImpressionEnabled && !(0,mParticle/* isShelfImpressionTracked */.uU)(this.props.machineName)) {
          this.trackImpression();
        }
        // Only for Ryder Cup
        if (this.props.isRyderCup && this.props.isMarketingBand && !this.state.isInView) {
          var _this$props$items3, _marketingBand$data;
          const marketingBand = ((_this$props$items3 = this.props.items) === null || _this$props$items3 === void 0 ? void 0 : _this$props$items3[0]) || {};
          this.trackImpression({
            type: mParticle_constants.USER_CONTENT,
            name: mParticle_constants.MARKETING_MODULE_IMPRESSION,
            attributes: {
              [mParticle_constants.BRAND]: 'Golf',
              [mParticle_constants.SHOW]: 'Ryder Cup',
              [mParticle_constants.DESTINATION_URL]: (_marketingBand$data = marketingBand.data) === null || _marketingBand$data === void 0 ? void 0 : _marketingBand$data.link,
              [mParticle_constants.DESTINATION_TYPE]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_NAME]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_TYPE]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_BRAND]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_SHOW]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_SEASON]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_VIDEO_ID]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_ENTITLEMENT]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_STATE]: mParticle_constants.NONE,
              [mParticle_constants.ITEM_CLICKED_SPORT]: 'Golf',
              [mParticle_constants.ITEM_CLICKED_LEAGUE]: 'Ryder Cup',
              [mParticle_constants.NOTIFICATION_TITLE]: mParticle_constants.NONE,
              [mParticle_constants.SPONSOR]: mParticle_constants.NONE
            }
          });
        }
      }
      this.setState({
        isInView: inView
      });
    });
    _defineProperty(this, "trackImpression", function () {
      let {
        type = mParticle_constants.NAVIGATION,
        name = mParticle_constants.SHELF_IMPRESSION,
        attributes = {}
      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      mParticle/* default */.ZP.trackEvent({
        type,
        name,
        attributes: {
          'Content Position': 1,
          'Custom Shelf Position': _this.props.shelfIndex + 1,
          'Custom Shelf Title': _this.props.machineName,
          Sponsor: _this.props.sponsorName || 'None',
          ...attributes
        }
      });
      (0,mParticle/* trackShelfImpression */.BG)(_this.props.machineName);
    });
    _defineProperty(this, "onDotClick", event => {
      this.calculateScrollOffsets();
      const index = parseInt(event.currentTarget.getAttribute('data-index'), 10);
      const scrollDistance = this.tileWidth * index * -1;
      this.setState({
        scrollDistance,
        // Left arrow visible as soon as we leave the initial scrollDistance.
        isLeftArrowVisible: scrollDistance !== 0,
        // Right arrow visible if some content out of view and not at end section.
        isRightArrowVisible: this.maxScrollDistance < 0 && (scrollDistance === 0 || scrollDistance !== this.maxScrollDistance),
        activeItem: index
      });
    });
    _defineProperty(this, "getIsSwipable", () => {
      const {
        treatments,
        isMobile,
        isTablet
      } = this.props;
      return treatments.includes('withSlideTile') ? isMobile : isTablet || isMobile;
    });
    this.tilesContainer = /*#__PURE__*/react.createRef();
    this.rightArrowRef = /*#__PURE__*/react.createRef();
    this.leftArrowRef = /*#__PURE__*/react.createRef();
    this.scrollableWrapperRef = /*#__PURE__*/react.createRef();

    // Defaults.
    this.scrollOffset = 0;
    this.maxScrollDistance = 0;
    this.endScrollDistance = 0;
    this.state = {
      scrollDistance: 0,
      isLeftArrowVisible: false,
      isRightArrowVisible: false,
      isInView: false,
      isImagesDeferred: true,
      items: this.normalizeData(props.items) || [],
      moreItems: props.moreItems,
      isFetchingMore: false,
      activeItem: 0,
      isFocusingTiles: false,
      focusedTileIndex: 0
    };
    // Multiple trigger points allows multiple chances for images in shelf to load
    this.inViewTriggerPoints = [0, 0.1, 0.45, 1];
  }
  componentDidMount() {
    const {
      isMobile,
      isTablet
    } = this.props;
    const isPreventResize = isMobile || isTablet;
    if (typeof window !== 'undefined' && !isPreventResize) {
      this.onResize = throttle_default()(this.onResizeThrottled, 500);
      window.addEventListener('resize', this.onResize);
    }
    this.calculateRightArrowVisibility();
  }
  componentDidUpdate(prevProps, prevState) {
    // If we're over 66% through the shelf, now would be a good time to
    // preload any paginated items.
    const oldItems = prevProps.items;
    const newItems = this.props.items;
    let isItemsChanged = oldItems.length !== newItems.length;
    if (!isItemsChanged && this.props.machineName === 'favorites-shelf') {
      const oldFavorites = oldItems.map(item => item.data.seriesName);
      const newFavorites = newItems.map(item => item.data.seriesName);
      const diff = oldFavorites.filter(id => newFavorites.includes(id));
      isItemsChanged = diff.length !== newFavorites.length;
    }
    if (this.state.scrollDistance !== prevState.scrollDistance && Math.abs(this.state.scrollDistance) >= Math.abs(this.maxScrollDistance) * 2 / 3) {
      this.fetchMoreItems();
    }
    if (isItemsChanged) {
      this.setState({
        items: this.props.items
      });
      this.calculateRightArrowVisibility();
    }
    if (this.props.isImpressionEnabled !== prevProps.isImpressionEnabled && this.props.isImpressionEnabled && this.state.isInView && !(0,mParticle/* isShelfImpressionTracked */.uU)(this.props.machineName)) {
      this.trackImpression();
    }
    if (this.tilesContainer.current && !this.isAfterScalingDone) {
      this.scrollToRight();
      this.calculateRightArrowVisibility();
      this.isAfterScalingDone = true;
    }
  }
  componentWillUnmount() {
    const {
      isMobile,
      isTablet
    } = this.props;
    const isTouchDevice = isMobile || isTablet;
    if (typeof window !== 'undefined' && !isTouchDevice) {
      window.removeEventListener('resize', this.onResize);
    }
  }
  render() {
    const {
      listTitle,
      itemLabelsTitle,
      treatments,
      sponsorLogo,
      sponsorAltText,
      sponsorName,
      listTitleImage,
      fallbackListTitle,
      isRyderCup,
      isMarketingBand
    } = this.props;
    const items = this.getItems();
    const shelfModifierClass = this.getShelfModifierClass();
    const shelfAspectRatioClass = this.getAspectRatio();
    const isSwipeable = this.getIsSwipable();
    const sectionTreatments = {};
    treatments.map(treatment => sectionTreatments["shelf--".concat(treatment)] = !!treatment);
    const sectionTitle = itemLabelsTitle || listTitle || fallbackListTitle;
    return items.length && /*#__PURE__*/react.createElement(react_intersection_observer_m/* InView */.df, {
      as: "section",
      className: classnames_default()('shelf', {
        ...sectionTreatments,
        ["shelf--".concat(shelfModifierClass)]: !!shelfModifierClass,
        ["shelf--".concat(shelfAspectRatioClass)]: !!shelfAspectRatioClass,
        'shelf--focus-visible': this.state.isFocusingTiles
      }),
      onChange: this.onInView,
      threshold: this.inViewTriggerPoints,
      triggerOnce: !(isRyderCup && isMarketingBand)
    }, sectionTitle && /*#__PURE__*/react.createElement(SectionHeading/* default */.Z, {
      title: sectionTitle,
      listTitleImage: listTitleImage,
      sponsorLogo: sponsorLogo,
      sponsorAltText: sponsorAltText || sponsorName
    }), /*#__PURE__*/react.createElement("div", {
      className: "shelf__inner"
    }, this.getArrows(LEFT, shelfModifierClass), /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('shelf__tiles', {
        'shelf__tiles--swipeable': isSwipeable
      }),
      onTouchMove: isSwipeable ? this.onTouchMove : undefined,
      ref: this.scrollableWrapperRef
    }, /*#__PURE__*/react.createElement("ul", _extends({
      role: "list",
      className: "shelf__tiles__inner",
      style: {
        transform: "translate3d(".concat(this.state.scrollDistance, "px, 0, 0)")
      },
      ref: this.tilesContainer
    }, sectionTitle ? {
      'aria-labelledby': "section-heading-".concat(kebabCase_default()(sectionTitle))
    } : {}), items)), this.getArrows(RIGHT, shelfModifierClass)), treatments.indexOf('withSlideTile') >= 0 && /*#__PURE__*/react.createElement(Dots/* default */.Z, {
      items: items.map((i, k) => k),
      activeItem: this.state.activeItem,
      onDotClick: this.onDotClick,
      prefix: "shelf"
    }));
  }
}
_defineProperty(Shelf, "propTypes", {
  onClick: (prop_types_default()).func,
  pagePath: (prop_types_default()).string,
  onClickArrow: (prop_types_default()).func,
  seriesShortTitle: (prop_types_default()).string,
  shelfIndex: (prop_types_default()).number,
  items: prop_types_default().arrayOf(prop_types_default().shape({
    component: (prop_types_default()).string.isRequired,
    data: prop_types_default().shape({
      instanceID: (prop_types_default()).string
    })
  })).isRequired,
  listTitle: (prop_types_default()).string,
  sponsorName: (prop_types_default()).string,
  sponsorLogo: (prop_types_default()).string,
  sponsorAltText: (prop_types_default()).string,
  playlistMachineName: (prop_types_default()).string,
  treatments: prop_types_default().arrayOf((prop_types_default()).string),
  isMobile: (prop_types_default()).bool,
  displayMeta: (prop_types_default()).bool,
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string.isRequired
  }).isRequired,
  shouldNotUpdateScroll: (prop_types_default()).bool,
  // @DEPRECATED
  // Drop these props once we no longer need to overwrite.
  // They are being used on non-BFF pages like CreditDetailsPage.
  isTablet: (prop_types_default()).bool,
  brandTitle: (prop_types_default()).string,
  fallbackListTitle: (prop_types_default()).string,
  language: (prop_types_default()).string,
  isShelfIrregular: (prop_types_default()).bool,
  isShowPage: (prop_types_default()).bool,
  autoScroll: prop_types_default().shape({
    value: (prop_types_default()).string,
    key: (prop_types_default()).string,
    isEnabled: (prop_types_default()).bool
  }),
  isMorePeekTilesDisabled: (prop_types_default()).bool
});
_defineProperty(Shelf, "defaultProps", {
  shelfIndex: 0,
  treatments: ['default'],
  listTitle: '',
  shouldNotUpdateScroll: false,
  isShelfIrregular: false,
  isMorePeekTilesDisabled: false
});
/* harmony default export */ var Shelf_Shelf = ((0,es/* connect */.$j)((state, ownProps) => {
  var _ownProps$location, _ownProps$treatments;
  return {
    // NBCRESP-14492 Only fire in homepage
    // remove below line when other pages are enabled
    isImpressionEnabled: ((_ownProps$location = ownProps.location) === null || _ownProps$location === void 0 ? void 0 : _ownProps$location.pathname) === '/',
    isLazyLoadingDisabled: !!(ownProps !== null && ownProps !== void 0 && ownProps.viewAllCta),
    isMarketingBand: (_ownProps$treatments = ownProps.treatments) === null || _ownProps$treatments === void 0 ? void 0 : _ownProps$treatments.includes('marketingBand'),
    watches: state.watches
  };
})(Shelf));

/***/ }),

/***/ 92156:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export socialConfig */
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48403);
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_capitalize__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_getSocialUrl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(63238);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }






const socialConfig = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('app.socialMedia');
const SocialIcon = props => {
  const {
    className,
    title,
    ...rest
  } = props;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("li", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", _extends({
    rel: "noreferrer noopener",
    target: "_blank",
    className: "social-icons__icon--wrapper",
    title: title
  }, rest), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: className,
    role: "img",
    alt: title,
    "aria-label": title
  })));
};
SocialIcon.propTypes = {
  name: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string).isRequired,
  linkTitle: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  title: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string),
  href: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().string).isRequired
};
const SocialIcons = _ref => {
  let {
    socialInfo
  } = _ref;
  const socialItems = socialInfo ? Object.keys(socialInfo).filter(name => name !== 'googleplus').map(name => ({
    name,
    href: (0,_utils_getSocialUrl__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(lodash_get__WEBPACK_IMPORTED_MODULE_2___default()(socialInfo, name), name),
    ...socialConfig.links[name]
  })) : socialConfig.links.filter(data => data.accountKey).map(data => ({
    href: (0,_utils_getSocialUrl__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(data.accountKey, data.name),
    ...data
  }));
  const description = socialConfig !== null && socialConfig !== void 0 && socialConfig.showDescription ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2", {
    className: "social-icons__title"
  }, socialConfig.description, socialConfig.displayTM && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", {
    className: "social-icons__trademark"
  }, "\u2122")) : null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
    className: "social-icons"
  }, description, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul", {
    className: "social-icons__icons"
  }, socialItems.map(_ref2 => {
    let {
      name,
      linkTitle,
      href
    } = _ref2;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(SocialIcon, {
      key: name,
      name: name,
      role: "link",
      title: linkTitle || lodash_capitalize__WEBPACK_IMPORTED_MODULE_3___default()(name),
      className: "social-icons__icon ".concat(name),
      href: href
    });
  })));
};
SocialIcons.propTypes = {
  socialInfo: prop_types__WEBPACK_IMPORTED_MODULE_5___default().objectOf((prop_types__WEBPACK_IMPORTED_MODULE_5___default().string))
};
/* harmony default export */ __webpack_exports__.Z = (SocialIcons);

/***/ }),

/***/ 19868:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);




const spanStyle = i => ({
  animationDelay: "".concat((i - 12) / 10, "s"),
  transform: "rotate(".concat(i * 30, "deg) translate(146%)")
});
const Spinner = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("div", {
  className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('spinner', {
    ["spinner--".concat(props.position)]: props.position,
    ["spinner--".concat(props.size)]: props.size,
    ["spinner--".concat(props.theme)]: props.theme
  }),
  theme: props.theme,
  style: {
    top: props.top
  }
}, [...Array(12)].map((x, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("span", {
  key: i,
  style: spanStyle(i)
})));
Spinner.propTypes = {
  position: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf([null, 'relative', 'absolute']),
  size: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf([null, 'small', 'large']),
  theme: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf([null, 'dark', 'light']),
  top: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string)
};
Spinner.defaultProps = {
  position: 'relative',
  top: '50%'
};
/* harmony default export */ __webpack_exports__.Z = (Spinner);

/***/ }),

/***/ 55993:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_intersection_observer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(70131);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94184);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(51054);
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(26566);
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(67641);
/* harmony import */ var _utils_isTargetedLink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(84022);
/* harmony import */ var _utils_getPathname__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(50734);
/* harmony import */ var _utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(33786);
/* harmony import */ var _utils_getContentClickAttributes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(75715);
/* harmony import */ var _SectionHeading_SectionHeading__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(87968);
/* harmony import */ var _Tile_Tile__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(59901);
/* harmony import */ var _LoadButton_LoadButton__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(3161);
/* harmony import */ var _AriaLive_AriaLive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(98076);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
















class Stack extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props);
    _defineProperty(this, "getItems", () => {
      const {
        shelfIndex,
        playlistMachineName,
        playlistTitle,
        isMobile
      } = this.props;
      return this.state.items.filter(t => t).map((tile, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
        className: "stack__item",
        "data-index": i,
        key: "".concat(tile.data.v4ID, "-").concat(i)
      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tile_Tile__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z, _extends({}, tile, {
        data: {
          ...tile.data,
          longDescription: tile.data.description
        },
        playlistMachineName: playlistMachineName,
        onClick: this.onClick,
        itemIndex: i,
        shelfTitle: playlistTitle,
        shelfIndex: shelfIndex,
        isMobile: isMobile,
        isZoomable: false,
        isImageDeferred: !this.state.isInView
      }))));
    });
    // We pass data-index to avoid re-binding this function on each render.
    _defineProperty(this, "onClick", event => {
      const index = parseInt(event.currentTarget.getAttribute('data-index'), 10);
      const destination = lodash_get__WEBPACK_IMPORTED_MODULE_2___default()(event.currentTarget, 'href');
      if (!Number.isNaN(index)) {
        const tile = this.props.items[index];
        this.trackContentClick(tile, index, destination);
        this.props.onClick && this.props.onClick(event, tile, index);
      }
    });
    _defineProperty(this, "trackContentClick", (_ref, index, destination) => {
      var _analytics$brand;
      let {
        component,
        analytics
      } = _ref;
      const itemType = component === 'SeriesTile' ? 'Show' : component === 'MovieTile' ? 'Movie Home' : lodash_get__WEBPACK_IMPORTED_MODULE_2___default()(analytics, 'programmingType');
      let pathname = destination ? (0,_utils_getPathname__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)(destination) : this.props.location.pathname;
      if (this.props.isPlaylist) {
        pathname = "".concat(pathname).concat(this.props.location.search || '');
      }
      _lib_analytics_mParticle__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP.trackEvent({
        name: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.CONTENT_CLICK,
        type: _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.USER_CONTENT,
        pathname,
        attributes: (0,_utils_getContentClickAttributes__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)({
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_NAME]: analytics.title,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_URL]: destination ? (0,_utils_isTargetedLink__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(destination) ? destination : pathname : 'None',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_BRAND]: analytics === null || analytics === void 0 ? void 0 : (_analytics$brand = analytics.brand) === null || _analytics$brand === void 0 ? void 0 : _analytics$brand.title,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_TYPE]: itemType,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_SHOW]: analytics.series,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_SEASON]: analytics.seasonNumber,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_VIDEO_ID]: analytics.mpxGuid,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_ENTITLEMENT]: analytics.locked ? 'Entitled' : 'Free',
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.ITEM_CLICKED_PLAYLIST_NAME]: this.props.playlistTitle,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.SPONSOR]: this.props.sponsor,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.CONTENT_POSITION]: index + 1,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.CUSTOM_SHELF_POSITION]: this.props.shelfIndex + 1,
          [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_13__.CUSTOM_SHELF_TITLE]: this.props.playlistTitle
        })
      });
    });
    _defineProperty(this, "onInView", inView => inView && this.setState({
      isInView: true
    }));
    _defineProperty(this, "onMore", () => {
      const {
        isAriaLiveActive,
        language
      } = this.props;
      this.setState({
        isLoading: true,
        ...(isAriaLiveActive ? {
          ariaLabel: ' '
        } : {})
      }, () => {
        (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_4__/* .getLazyComponent */ .sO)(this.state.moreItems.data).then(component => {
          this.setState(prevState => ({
            items: prevState.items.concat(component.data.items),
            moreItems: component.data.moreItems,
            isLoading: false,
            ...(isAriaLiveActive ? {
              ariaLabel: (0,_utils_getTranslatedString__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z)(language, 'episodes.moreLoaded', {
                items: component.data.items.length
              })
            } : {})
          }));
        });
      });
    });
    this.state = {
      isInView: false,
      isLoading: false,
      items: props.items,
      moreItems: props.moreItems,
      ariaLabel: props.ariaLabel
    };
  }
  componentDidUpdate(prevProps, prevState) {
    if (this.state.items.length !== prevState.items.length) {
      document.querySelector(".stack__item[data-index=\"".concat(prevState.items.length, "\"] a.tile")).focus();
    }
  }
  render() {
    const items = this.getItems();
    const {
      listTitle,
      isPlaylist,
      lazyLoad
    } = this.props;
    const {
      playlistTitle,
      isAriaLiveActive,
      description
    } = this.props;
    const {
      isLoading,
      moreItems,
      ariaLabel
    } = this.state;
    const title = isPlaylist ? playlistTitle : listTitle;
    const isLazyLoadButtonEnabled = lazyLoad && lazyLoad.type === 'manual' && moreItems;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_intersection_observer__WEBPACK_IMPORTED_MODULE_14__/* .InView */ .df, {
      as: "section",
      className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('stack', {
        ["stack--playlist"]: isPlaylist
      }),
      onChange: this.onInView,
      triggerOnce: true
    }, isAriaLiveActive && ariaLabel && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_AriaLive_AriaLive__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z, null, ariaLabel), title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SectionHeading_SectionHeading__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z, {
      title: title
    }, description && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: "stack__description"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", null, description))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul", {
      className: "stack__items"
    }, items)), isLazyLoadButtonEnabled && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
      className: "episodes-page__load-more"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_LoadButton_LoadButton__WEBPACK_IMPORTED_MODULE_11__/* ["default"] */ .Z, {
      onMore: this.onMore,
      color: lazyLoad.color,
      isLoadingMore: isLoading,
      text: lazyLoad.text
    })));
  }
}
_defineProperty(Stack, "propTypes", {
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().func),
  shelfIndex: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().number),
  location: prop_types__WEBPACK_IMPORTED_MODULE_15___default().shape({
    pathname: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string).isRequired
  }).isRequired,
  isMobile: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  playlistTitle: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  playlistMachineName: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
  isPlaylist: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().bool),
  lazyLoad: prop_types__WEBPACK_IMPORTED_MODULE_15___default().shape({
    // Right now we only support 'manual' but we can work on a lazy loading using scrolling
    type: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
    color: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string),
    text: (prop_types__WEBPACK_IMPORTED_MODULE_15___default().string)
  })
});
_defineProperty(Stack, "defaultProps", {
  shelfIndex: 0
});
/* harmony default export */ __webpack_exports__.Z = (Stack);

/***/ }),

/***/ 483:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(61409);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(84564);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(74369);
/* harmony import */ var _utils_isTargetedLink__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(84022);
/* harmony import */ var _lib_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62899);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }








// TEMPORARY :: implemented on 4/25/22
// temporary solution for links that are external to this project's router
// To be replaced by a dynamic solution from backend properties

const externalLinks = ["/".concat(config__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z.get('app.appName'), "-insider/"), // nbc-insider or usa-insider
"profile.id.nbcuni.com/" // Identity SDK
];

// https://nbcdigital.atlassian.net/wiki/spaces/qanbcu/pages/2636677224/Morpho+QA+process+and+Guidelines
const nbcSubdomains = ['www', 'stage-www', 'stage-m', 'acc-www', 'video-www', 'dev-www'];
const usaSubdomains = ['www', 'stage', 'stage-usa'];
const isExternalLink = href => externalLinks.some(link => {
  const regex = new RegExp(link, 'g');
  return regex.test(href);
});
const isSubdomain = href => {
  const {
    hostname
  } = url_parse__WEBPACK_IMPORTED_MODULE_2___default()(href);
  const usaRegex = new RegExp("^(?!(".concat(usaSubdomains.join('|'), ").)[A-z0-9-]+.usanetwork.com"));
  const nbcRegex = new RegExp("^(?!(".concat(nbcSubdomains.join('|'), ").)[A-z0-9-]+.nbc.com"));
  return usaRegex.test(hostname) || nbcRegex.test(hostname);
};
const shouldUseNativeLink = props => {
  const {
    href,
    target
  } = props;
  return isSubdomain(href) || isExternalLink(href) || target === '_blank' || (0,_utils_isTargetedLink__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(href);
};
const renderNativeLink = props => {
  const {
    href,
    target
  } = props;
  if (target === '_blank' || (0,_utils_isTargetedLink__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(href)) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", _extends({
      target: target || '_blank',
      rel: "noreferrer noopener"
    }, props));
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("a", _extends({
    rel: "noreferrer noopener"
  }, props));
};
const TargetedLink = _ref => {
  let {
    query,
    state,
    ...props
  } = _ref;
  return shouldUseNativeLink(props) ? renderNativeLink(props) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router__WEBPACK_IMPORTED_MODULE_1__/* .Link */ .rU, _extends({
    to: {
      pathname: url_parse__WEBPACK_IMPORTED_MODULE_2___default()(props.href).pathname,
      query: query || {},
      state: url_parse__WEBPACK_IMPORTED_MODULE_2___default()(props.href).pathname.indexOf('provider-linked' >= 0) ? {
        ...state,
        authState: (0,_lib_identity__WEBPACK_IMPORTED_MODULE_5__/* .hasSession */ .Hk)()
      } : {}
    }
  }, props));
};
TargetedLink.propTypes = {
  href: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string).isRequired,
  state: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),
  query: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().object),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().func),
  target: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string),
  rel: (prop_types__WEBPACK_IMPORTED_MODULE_6___default().string)
};
TargetedLink.defaultProps = {
  state: {},
  query: {}
};
/* harmony default export */ __webpack_exports__.Z = (TargetedLink);

/***/ }),

/***/ 59901:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ Tile_Tile; }
});

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/react-router/es/index.js + 32 modules
var es = __webpack_require__(61409);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(94184);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 14 modules
var react_redux_es = __webpack_require__(20688);
// EXTERNAL MODULE: ./components/Image/Image.js
var Image = __webpack_require__(61737);
// EXTERNAL MODULE: ./components/BrandLogo/BrandLogo.js
var BrandLogo = __webpack_require__(82020);
;// CONCATENATED MODULE: ./components/Tile/TileBrand.js
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }








const TileBrand = _ref => {
  let {
    analytics,
    data,
    displayMeta,
    isBrandActive,
    isMobile,
    isZoomable,
    itemIndex,
    onClick,
    pagePath,
    shelfIndex,
    shelfTitle,
    shouldNotUpdateScroll,
    sizes,
    sponsorName,
    srcSetConfig,
    tabIndex,
    onFocus,
    shelfMachineName,
    onMouseEnter,
    onMouseLeave,
    setRef,
    index
  } = _ref;
  const content = /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: classnames_default()('tile__thumbnail', {
      'tile__thumbnail--active': isBrandActive
    }),
    "data-index": itemIndex,
    ref: setRef === null || setRef === void 0 ? void 0 : setRef("tileThumbRef".concat(index))
  }, !!data.staticPreviewImage && !isMobile && /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.displayTitle,
    sizes: sizes,
    srcSet: {
      path: data.staticPreviewImage
    },
    srcSetConfig: srcSetConfig
  }), /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    className: "tile__thumbnail__image--monochrome",
    url: data.whiteBrandLogo,
    brandTitle: data.displayTitle,
    align: "center"
  }), /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    className: "tile__thumbnail__image--color",
    url: data.colorBrandLogo,
    brandTitle: data.displayTitle,
    align: "center"
  })), displayMeta && /*#__PURE__*/react.createElement("div", {
    className: "tile__meta",
    "data-index": itemIndex
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text",
    ref: setRef === null || setRef === void 0 ? void 0 : setRef("tileMetaTextRef".concat(index))
  }, data.displayTitle)));
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--brand', {
      'tile--zoomable': isZoomable,
      'tile--all': data.machineName === 'all',
      'tile--brand-no-image': !data.staticPreviewImage
    }),
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    "data-index": index
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, _extends({
    to: {
      pathname: "/".concat(pagePath, "/").concat(data.machineName).concat(pagePath === 'shows' ? '/popular' : ''),
      state: {
        shelfTitle,
        sponsorName,
        shelfIndex,
        shelfMachineName,
        entityAnalytics: {
          Brand: get_default()(analytics, 'brand.title', 'None')
        },
        shouldNotUpdateScroll
      }
    },
    className: "tile",
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': "".concat(data.ariaLabel).concat(isBrandActive ? ' Selected' : '')
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), content));
};
TileBrand.propTypes = {
  analytics: prop_types_default().shape({
    brand: prop_types_default().shape({
      title: (prop_types_default()).string
    })
  }),
  data: prop_types_default().shape({
    whiteBrandLogo: (prop_types_default()).string,
    colorBrandLogo: (prop_types_default()).string,
    machineName: (prop_types_default()).string,
    displayTitle: (prop_types_default()).string,
    horizontalPreview: (prop_types_default()).string,
    staticPreviewImage: (prop_types_default()).string
  }),
  displayMeta: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  pagePath: (prop_types_default()).string,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  sponsorName: (prop_types_default()).string,
  sizes: (prop_types_default()).string,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  isBrandActive: (prop_types_default()).bool,
  isZoomable: (prop_types_default()).bool,
  shouldNotUpdateScroll: (prop_types_default()).bool,
  isMobile: (prop_types_default()).bool,
  tabIndex: (prop_types_default()).number,
  onMouseEnter: (prop_types_default()).func,
  onMouseLeave: (prop_types_default()).func
};
TileBrand.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  pagePath: 'networks',
  displayMeta: true
};
/* harmony default export */ var Tile_TileBrand = ((0,react_redux_es/* connect */.$j)(state => ({
  isMobile: get_default()(state.client.userAgent, 'isMobile') || false
}))(TileBrand));
;// CONCATENATED MODULE: ./components/Tile/TileCategory.js
function TileCategory_extends() { return TileCategory_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileCategory_extends.apply(null, arguments); }






// @DEPRECATED
// This can be droppped once we move to the new SelectableGroup.
const TileCategory = _ref => {
  let {
    data: {
      label,
      pathname
    },
    itemIndex,
    onClick,
    location,
    isCategoryActive,
    shouldNotUpdateScroll,
    ariaLabel,
    onFocus,
    tabIndex
  } = _ref;
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--category', {
      'tile--category--active': isCategoryActive
    })
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileCategory_extends({
    to: {
      pathname,
      // This ensures that we do not loose any important location state set
      // by TileBrand components within BrandSelectableGroup, (i.e. itemIndex).
      state: {
        ...get_default()(location, 'state', {}),
        shouldNotUpdateScroll
      }
    },
    className: "tile",
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex
  }, ariaLabel ? {
    'aria-label': "".concat(ariaLabel).concat(isCategoryActive ? ' Selected' : '')
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("span", null, label)));
};
TileCategory.propTypes = {
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  data: prop_types_default().shape({
    label: (prop_types_default()).string,
    pathname: (prop_types_default()).string
  }),
  location: (prop_types_default()).object,
  isCategoryActive: (prop_types_default()).bool,
  shouldNotUpdateScroll: (prop_types_default()).bool,
  ariaLabel: (prop_types_default()).string
};
/* harmony default export */ var Tile_TileCategory = ((0,es/* withRouter */.EN)(TileCategory));
// EXTERNAL MODULE: ./utils/formatDate.js
var formatDate = __webpack_require__(54819);
// EXTERNAL MODULE: ./utils/formatRelativePath.js
var formatRelativePath = __webpack_require__(68455);
// EXTERNAL MODULE: ./utils/getPathname.js
var getPathname = __webpack_require__(50734);
// EXTERNAL MODULE: ./node_modules/url-parse/index.js
var url_parse = __webpack_require__(84564);
var url_parse_default = /*#__PURE__*/__webpack_require__.n(url_parse);
// EXTERNAL MODULE: ./node_modules/qs/lib/index.js
var lib = __webpack_require__(80129);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);
;// CONCATENATED MODULE: ./utils/getQueryParams.js



/**
 * Get the query params from a URL.
 *
 * @param {string} url
 *   A URL string.
 *
 * @return {object}
 *   The query params of the URL.
 */

function getQueryParams(url) {
  const parts = url_parse_default()(url);
  const query = parts === null || parts === void 0 ? void 0 : parts.query;
  const queryObj = lib_default().parse(query, {
    ignoreQueryPrefix: true
  });
  return queryObj;
}
;// CONCATENATED MODULE: ./utils/getVideoTileDestinationData.js
const getVideoTileDestinationData = function (playlistId, pathname, mpxGuid, state) {
  let qParams = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  return {
    pathname: playlistId ? "/playlist/".concat(playlistId) : pathname,
    query: {
      v: playlistId ? mpxGuid : undefined,
      ...qParams
    },
    state
  };
};
/* harmony default export */ var utils_getVideoTileDestinationData = (getVideoTileDestinationData);
// EXTERNAL MODULE: ./utils/timeFormatting.util.js
var timeFormatting_util = __webpack_require__(89583);
;// CONCATENATED MODULE: ./components/Tile/TileClip.js
function TileClip_extends() { return TileClip_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileClip_extends.apply(null, arguments); }













const TileClip = _ref => {
  var _formatSmallDurationT, _location$state, _location$state2;
  let {
    data,
    isAuthenticated,
    isImageDeferred,
    isWhiteThemed,
    isZoomable,
    itemIndex,
    onClick,
    onFocus,
    onMouseEnter,
    onMouseLeave,
    playlistMachineName,
    shelfPlaylistMachineName,
    refGenerator,
    shelfIndex,
    shelfTitle,
    sponsorName,
    sizes,
    smartLabel,
    srcSetConfig,
    treatments,
    tabIndex,
    isShowPage,
    params,
    location,
    shelfMachineName,
    isActiveAllowed = true
  } = _ref;
  const isShortForm = treatments === null || treatments === void 0 ? void 0 : treatments.find(treatment => /sportsVideo[s]?/.test(treatment));
  const durationFormatted = (_formatSmallDurationT = (0,timeFormatting_util/* formatSmallDurationTimes */.S0)(data.duration)) === null || _formatSmallDurationT === void 0 ? void 0 : _formatSmallDurationT.formatted;
  const path = data.permalink || (0,formatRelativePath/* default */.Z)(data.relativePath) || '/';
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--clip', {
      'tile--zoomable': isZoomable,
      'tile--white-theme': isWhiteThemed,
      'tile--short-form': isShortForm,
      // @deprecated React Router v4 has an isActive prop for <Link>
      'tile--active': treatments && treatments.includes('current') && isActiveAllowed
    })
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileClip_extends({
    to: utils_getVideoTileDestinationData(playlistMachineName || shelfPlaylistMachineName, (0,getPathname/* default */.Z)(path), data.mpxGuid, {
      shelfTitle,
      shelfIndex,
      shelfPlaylistMachineName,
      sponsorName,
      itemIndex,
      shelfMachineName,
      ...(params !== null && params !== void 0 && params.showAlias || (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.originatingTitle ? {
        originatingTitle: params.showAlias || ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.originatingTitle)
      } : {})
    }, getQueryParams(path)),
    activeClassName: isActiveAllowed ? 'tile--active' : '',
    className: "tile",
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail",
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: refGenerator('tileThumbnailRef')
  }, isWhiteThemed && /*#__PURE__*/react.createElement("div", {
    className: "tile__logo-background"
  }), data.labelBadge && /*#__PURE__*/react.createElement("span", {
    className: "tile__badge"
  }, data.labelBadge), isShortForm && durationFormatted && /*#__PURE__*/react.createElement("strong", {
    className: "tile__badge tile__badge--short-form"
  }, durationFormatted), /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.title,
    sizes: sizes,
    srcSet: {
      path: data.image
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  }), data.locked && !isAuthenticated && /*#__PURE__*/react.createElement("div", {
    className: "tile__icon icon-play--auth"
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, smartLabel && /*#__PURE__*/react.createElement("div", {
    className: "tile__smartLabel"
  }, smartLabel.toUpperCase()), /*#__PURE__*/react.createElement("div", {
    className: "tile__title"
  }, data.title), data.secondaryTitle && !isShowPage && /*#__PURE__*/react.createElement("div", {
    className: "tile__secondaryTitle"
  }, data.secondaryTitle), /*#__PURE__*/react.createElement("div", {
    className: "tile__description"
  }, !isShortForm && /*#__PURE__*/react.createElement("span", {
    className: "tile__meta__badge"
  }, isShowPage && data.secondaryTitleTag ? data.secondaryTitleTag : 'CLIP'), ' ', /*#__PURE__*/react.createElement("span", null, isShowPage && data.secondaryTitle ? data.secondaryTitle : data.tertiaryTitle || (0,formatDate/* default */.Z)(data.airDate))), data.longDescription && shelfTitle !== 'Smart Tile' && /*#__PURE__*/react.createElement("div", {
    className: "tile__longDescription"
  }, data.longDescription)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))))));
};
TileClip.propTypes = {
  data: prop_types_default().shape({
    airDate: (prop_types_default()).string,
    image: (prop_types_default()).string,
    locked: (prop_types_default()).bool,
    permalink: (prop_types_default()).string.isRequired,
    programmingType: (prop_types_default()).string,
    secondaryTitle: (prop_types_default()).string,
    tertiaryTitle: (prop_types_default()).string,
    title: (prop_types_default()).string,
    longDescription: (prop_types_default()).string,
    mpxGuid: (prop_types_default()).string,
    ariaLabel: (prop_types_default()).string
  }),
  isAuthenticated: (prop_types_default()).bool,
  isImageDeferred: (prop_types_default()).bool,
  isActiveAllowed: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  sponsorName: (prop_types_default()).string,
  sizes: (prop_types_default()).string,
  smartLabel: (prop_types_default()).string,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  refGenerator: (prop_types_default()).func,
  onMouseEnter: (prop_types_default()).func,
  onMouseLeave: (prop_types_default()).func,
  isZoomable: (prop_types_default()).bool,
  isWhiteThemed: (prop_types_default()).bool,
  playlistMachineName: (prop_types_default()).string,
  shelfPlaylistMachineName: (prop_types_default()).string,
  treatments: prop_types_default().arrayOf((prop_types_default()).string),
  tabIndex: (prop_types_default()).number
};
TileClip.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null
};
/* harmony default export */ var Tile_TileClip = ((0,react_redux_es/* connect */.$j)(state => ({
  isAuthenticated: state.adobePass.isAuthenticationChecked && state.adobePass.isAuthenticated && state.adobePass.isTempPassAuthenticated
}))((0,es/* withRouter */.EN)(TileClip)));
// EXTERNAL MODULE: ./components/Badges/AudioLanguagesBadge.js
var AudioLanguagesBadge = __webpack_require__(58808);
// EXTERNAL MODULE: ./components/Badges/AudioDescriptionBadge.js
var AudioDescriptionBadge = __webpack_require__(31514);
// EXTERNAL MODULE: ./utils/programmingTypes.js
var programmingTypes = __webpack_require__(20057);
// EXTERNAL MODULE: ./components/VideoPlayerV2/utils/saveVideoWatched.js + 1 modules
var saveVideoWatched = __webpack_require__(71496);
;// CONCATENATED MODULE: ./components/Tile/TileEpisode.js
function TileEpisode_extends() { return TileEpisode_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileEpisode_extends.apply(null, arguments); }
















const TileEpisode = _ref => {
  var _data$locationState, _location$state, _location$state2;
  let {
    analytics,
    component,
    data,
    isAlreadyLink,
    isImageDeferred,
    isWatchLinkVisible,
    isWhiteThemed,
    isZoomable,
    itemIndex,
    location,
    onClick,
    onClickMeta,
    onFocus,
    onBlur,
    onMouseEnter,
    onMouseLeave,
    playlistMachineName,
    shelfPlaylistMachineName,
    percentViewed,
    refGenerator,
    shelfIndex,
    sponsorName,
    shelfTitle,
    sizes,
    smartLabel,
    srcSetConfig,
    watchState,
    treatments,
    tabIndex,
    params,
    shelfMachineName,
    isStacked,
    isActiveAllowed = true,
    isEndcard = false
  } = _ref;
  const isCurrent = treatments && treatments.includes('current');
  const renderBadge = () => {
    const {
      programmingType,
      labelBadge,
      contentType
    } = data || {};
    const isFER = (0,programmingTypes/* isFullEventReplayType */.vt)(programmingType) || (contentType === null || contentType === void 0 ? void 0 : contentType.toUpperCase()) === programmingTypes/* FER */.hm.toUpperCase();
    const isNewBadge = labelBadge === null || labelBadge === void 0 ? void 0 : labelBadge.toLowerCase().includes('new');
    if (!labelBadge || isFER && isNewBadge && !isEndcard) {
      return null;
    }
    return /*#__PURE__*/react.createElement("span", {
      className: "tile__badge"
    }, labelBadge);
  };
  const tileAriaLabel = data.ariaLabel;
  const {
    audioDescription,
    audioLanguage,
    isOlympics
  } = data;
  const isAudioDescription = audioDescription || (audioLanguage === null || audioLanguage === void 0 ? void 0 : audioLanguage.includes('ad'));
  const content = /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail",
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: refGenerator('tileThumbnailRef'),
    "data-index": itemIndex,
    onClick: onClickMeta
  }, isWhiteThemed && /*#__PURE__*/react.createElement("div", {
    className: "tile__logo-background"
  }), !isCurrent && percentViewed > saveVideoWatched/* PERCENT_INITIAL */.d0 && percentViewed < saveVideoWatched/* PERCENT_COMPLETE */.IW && /*#__PURE__*/react.createElement("div", {
    className: "tile__progress"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--bar",
    style: {
      width: "".concat(percentViewed * 100, "%")
    }
  }), /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--gradient"
  }), /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--background"
  })), renderBadge(), /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.title,
    sizes: sizes,
    srcSet: {
      path: data.image
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  }), watchState === 'LOCKED' && /*#__PURE__*/react.createElement("div", {
    className: "tile__icon icon-play--auth"
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, smartLabel && /*#__PURE__*/react.createElement("div", {
    className: "tile__smartLabel"
  }, smartLabel), /*#__PURE__*/react.createElement("div", {
    className: "tile__title",
    onClick: onClickMeta,
    "data-index": itemIndex
  }, data.title), /*#__PURE__*/react.createElement("div", {
    className: "tile__secondaryTitle"
  }, data.secondaryTitle), isWatchLinkVisible && /*#__PURE__*/react.createElement("div", {
    className: "tile__watch-episode",
    "data-index": itemIndex,
    onClick: onClickMeta
  }, "Watch full episode"), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta-info"
  }, data.tertiaryTitle && /*#__PURE__*/react.createElement("div", {
    className: "tile__tertiaryTitle"
  }, data.tertiaryTitle), isOlympics && isAudioDescription && /*#__PURE__*/react.createElement(AudioDescriptionBadge/* default */.Z, null), isOlympics && /*#__PURE__*/react.createElement(AudioLanguagesBadge/* default */.Z, {
    audioLanguage: audioLanguage || []
  })), data.longDescription && /*#__PURE__*/react.createElement("div", {
    className: "tile__longDescription"
  }, data.longDescription)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))));
  const path = data.permalink || (0,formatRelativePath/* default */.Z)(data.relativePath) || '/';
  return isAlreadyLink ? /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--episode', {
      'tile--watched': percentViewed >= saveVideoWatched/* PERCENT_COMPLETE */.IW,
      'tile--zoomable': isZoomable,
      'tile--white-theme': isWhiteThemed,
      'tile--replay': component.toLowerCase() === 'replaytile',
      'tile--stacked': isStacked
    }),
    onClick: onClick,
    onFocus: onFocus,
    onBlur: onBlur
  }, content) : /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--episode', {
      'tile--watched': percentViewed >= saveVideoWatched/* PERCENT_COMPLETE */.IW,
      'tile--zoomable': isZoomable,
      'tile--white-theme': isWhiteThemed,
      // @deprecated React Router v4 has an isActive prop for <Link>
      'tile--active': isCurrent && isActiveAllowed,
      'tile--replay': component.toLowerCase() === 'replaytile',
      'tile--stacked': isStacked
    })
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileEpisode_extends({
    activeClassName: isActiveAllowed ? 'tile--active' : '',
    to: utils_getVideoTileDestinationData(playlistMachineName || shelfPlaylistMachineName, (0,getPathname/* default */.Z)(path), data.mpxGuid, {
      ...((_data$locationState = data === null || data === void 0 ? void 0 : data.locationState) !== null && _data$locationState !== void 0 ? _data$locationState : {}),
      shelfTitle,
      shelfIndex,
      shelfPlaylistMachineName,
      sponsorName,
      itemIndex,
      entryPath: location.pathname,
      shelfMachineName,
      entityAnalytics: {
        'Video ID': get_default()(analytics, 'mpxGuid', data.mpxGuid),
        Show: get_default()(analytics, 'series', data.seriesShortTitle),
        Season: get_default()(analytics, 'seasonNumber', data.seasonNumber),
        Brand: get_default()(analytics, 'brand.title', 'None')
      },
      ...(params !== null && params !== void 0 && params.showAlias || (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.originatingTitle ? {
        originatingTitle: params.showAlias || ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.originatingTitle)
      } : {})
    }, getQueryParams(path)),
    className: classnames_default()('tile', {
      'tile--active': playlistMachineName && isCurrent // activeClassName only triggers on url paths that match location.
    }),
    onClick: onClick,
    onFocus: onFocus,
    onBlur: onBlur,
    "data-index": itemIndex
  }, tileAriaLabel ? {
    'aria-label': tileAriaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), content));
};
TileEpisode.propTypes = {
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string
  }),
  analytics: prop_types_default().shape({
    mpxGuid: (prop_types_default()).string,
    series: (prop_types_default()).string,
    seasonNumber: (prop_types_default()).string,
    brand: prop_types_default().shape({
      title: (prop_types_default()).string
    })
  }),
  component: (prop_types_default()).string,
  data: prop_types_default().shape({
    airDate: (prop_types_default()).string,
    episodeNumber: (prop_types_default()).string,
    resourceId: (prop_types_default()).string,
    image: (prop_types_default()).string,
    labelBadge: (prop_types_default()).string,
    locked: (prop_types_default()).bool,
    percentViewed: (prop_types_default()).number,
    permalink: (prop_types_default()).string,
    programmingType: (prop_types_default()).string,
    seasonNumber: (prop_types_default()).string,
    secondaryTitle: (prop_types_default()).string,
    tertiaryTitle: (prop_types_default()).string,
    title: (prop_types_default()).string,
    v4ID: (prop_types_default()).string.isRequired,
    mpxGuid: (prop_types_default()).string,
    seriesShortTitle: (prop_types_default()).string,
    ariaLabel: (prop_types_default()).string,
    audioDescription: (prop_types_default()).bool,
    audioLanguage: prop_types_default().arrayOf((prop_types_default()).string)
  }),
  isAlreadyLink: (prop_types_default()).bool,
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  onBlur: (prop_types_default()).func,
  percentViewed: (prop_types_default()).number,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  sponsorName: (prop_types_default()).string,
  sizes: (prop_types_default()).string,
  smartLabel: (prop_types_default()).string,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  refGenerator: (prop_types_default()).func,
  onMouseEnter: (prop_types_default()).func,
  onMouseLeave: (prop_types_default()).func,
  isWatchLinkVisible: (prop_types_default()).bool,
  onClickMeta: (prop_types_default()).func,
  watchState: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool,
  isWhiteThemed: (prop_types_default()).bool,
  playlistMachineName: (prop_types_default()).string,
  shelfPlaylistMachineName: (prop_types_default()).string,
  treatments: prop_types_default().arrayOf((prop_types_default()).string),
  tabIndex: (prop_types_default()).number,
  isStacked: (prop_types_default()).bool
};
TileEpisode.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null
};
/* harmony default export */ var Tile_TileEpisode = ((0,react_redux_es/* connect */.$j)((state, ownProps) => {
  const isAuthenticated = state.adobePass.isAuthenticationChecked && state.adobePass.isAuthenticated && !state.adobePass.isTempPassAuthenticated;

  // Show locked key when user is not MVPD-authed
  const isLocked = ownProps.data.locked && !isAuthenticated;
  return {
    watchState: isLocked ? 'LOCKED' : 'NOT_LOCKED',
    percentViewed: state.watches[ownProps.data.v4ID] || ownProps.data.percentViewed
  };
})((0,es/* withRouter */.EN)(TileEpisode)));
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./lib/favorites-api.js
var favorites_api = __webpack_require__(9328);
// EXTERNAL MODULE: ./actions/navigation.js + 1 modules
var navigation = __webpack_require__(4997);
// EXTERNAL MODULE: ./actions/pages.js
var pages = __webpack_require__(18045);
// EXTERNAL MODULE: ./components/Favorites/FavoriteButton.js
var FavoriteButton = __webpack_require__(34260);
// EXTERNAL MODULE: ./components/Favorites/hooks/useFavoriteButton.js
var useFavoriteButton = __webpack_require__(406);
// EXTERNAL MODULE: ./fetches/homePage.js
var homePage = __webpack_require__(93253);
;// CONCATENATED MODULE: ./components/Favorites/FavoriteSeriesMovies.js
function FavoriteSeriesMovies_extends() { return FavoriteSeriesMovies_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, FavoriteSeriesMovies_extends.apply(null, arguments); }







const FavoriteSeriesMovies = _ref => {
  let {
    userFavorites,
    titleData = {},
    dispatch,
    isLoggedIn,
    isMovie,
    metadata,
    onTrackFavoriteAction,
    tabIndex
  } = _ref;
  const toggleTimer = (0,react.useRef)();
  const onFavoriteSuccess = function () {
    var _toggleTimer$current;
    let isAdd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    ((_toggleTimer$current = toggleTimer.current) === null || _toggleTimer$current === void 0 ? void 0 : _toggleTimer$current.timeout) && clearTimeout(toggleTimer.current.timeout);

    // hold a reference to the tracked event with encapsulated values so we can
    // apply the tracking event immediately if the component unmounts before the timer runs
    const trackEvent = () => {
      onTrackFavoriteAction(isAdd);
      !isLoggedIn && dispatch((0,navigation/* toggleFavoriteModalVisibility */.vM)(metadata));
      toggleTimer.current = undefined;
    };
    toggleTimer.current = {
      event: trackEvent,
      timeout: setTimeout(trackEvent, favorites_api/* FAVORITES_TRACK_DELAY */.Lh)
    };

    // clear the homepage shelves may change after favoriting
    dispatch((0,pages/* clearPage */.rs)('/'));
    (0,homePage/* delayedHomePageFetch */.$u)();
  };
  const {
    clickHandler,
    isLoading,
    isFavorite
  } = (0,useFavoriteButton/* default */.Z)({
    dispatch,
    isMovie,
    userFavorites,
    titleData,
    onSuccess: onFavoriteSuccess
  });
  const status = isFavorite ? 'remove' : 'add';
  (0,react.useEffect)(() =>
  // clear any toggle timers on unmount and immediately apply the queued tracking event
  () => {
    var _toggleTimer$current2, _toggleTimer$current3;
    ((_toggleTimer$current2 = toggleTimer.current) === null || _toggleTimer$current2 === void 0 ? void 0 : _toggleTimer$current2.timeout) && clearTimeout(toggleTimer.current.timeout);
    ((_toggleTimer$current3 = toggleTimer.current) === null || _toggleTimer$current3 === void 0 ? void 0 : _toggleTimer$current3.event) && toggleTimer.current.event();
  }, []);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "favorite-button__wrapper"
  }, /*#__PURE__*/react.createElement(FavoriteButton/* default */.Z, FavoriteSeriesMovies_extends({
    onClick: clickHandler,
    status: status,
    isLoading: isLoading,
    "data-tip-disable": isLoading,
    "data-tip": status === 'add' ? 'Added to Favorites' : 'Removed from Favorites',
    "data-place": "top"
  }, tabIndex === -1 ? {
    tabIndex: -1
  } : {}))), /*#__PURE__*/react.createElement("div", {
    className: "favorite-button__skrim"
  }));
};
/* harmony default export */ var Favorites_FavoriteSeriesMovies = (FavoriteSeriesMovies);
// EXTERNAL MODULE: ./postcss.config.js
var postcss_config = __webpack_require__(69823);
var postcss_config_default = /*#__PURE__*/__webpack_require__.n(postcss_config);
// EXTERNAL MODULE: ./components/HOCS/withFavorites.js
var withFavorites = __webpack_require__(54750);
;// CONCATENATED MODULE: ./components/Tile/TileSeries.js
function TileSeries_extends() { return TileSeries_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileSeries_extends.apply(null, arguments); }











const NBC_PURPLE = get_default()((postcss_config_default()), 'plugins.postcss-simple-vars.variables.oneapp-purple');
const ROYAL_BLUE = get_default()((postcss_config_default()), 'plugins.postcss-simple-vars.variables.oneapp-royal-blue');
const TileSeries = props => {
  var _analytics$brand;
  const {
    data,
    analytics,
    isImageDeferred,
    itemIndex
  } = props;
  const {
    onClick,
    onFocus,
    sizes,
    srcSetConfig,
    refGenerator
  } = props;
  const {
    onMouseEnter,
    onMouseLeave
  } = props;
  const {
    isZoomable,
    isSearchHit,
    isLandscape,
    tabIndex
  } = props;
  const {
    showTileFavorites
  } = props;
  const {
    dispatch,
    isLoggedIn,
    userFavorites
  } = props;
  const onTrackFavoriteAction = isAdd => {
    const favoriteType = isAdd ? 'Add' : 'Remove';
    mParticle/* default */.ZP.trackEvent({
      type: 'UserPreference',
      name: 'Item Favorited',
      attributes: {
        'Favorite Type': favoriteType,
        'Brand Favorited': data.brandDisplayTitle || 'None',
        'Show Favorited': data.title
      }
    });
  };
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--title', {
      'tile--landscape': isLandscape,
      'tile--zoomable': isZoomable,
      ["tile__favorite--".concat(showTileFavorites)]: showTileFavorites !== 'default'
    })
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileSeries_extends({
    to: "/".concat(data.urlAlias),
    className: "tile",
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail",
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: refGenerator('tileThumbnailRef')
  }, /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.title,
    sizes: sizes,
    srcSet: {
      path: isLandscape ? data.image : data.posterImage
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__title"
  }, data.title), isSearchHit && data.longDescription && /*#__PURE__*/react.createElement("div", {
    className: "tile__longDescription"
  }, data.longDescription)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))))), showTileFavorites !== 'default' && /*#__PURE__*/react.createElement(Favorites_FavoriteSeriesMovies, {
    metadata: {
      gradientStart: data.gradientStart || ROYAL_BLUE,
      gradientEnd: data.gradientEnd || NBC_PURPLE,
      whiteBrandLogo: data.whiteBrandLogo,
      brandDisplayTitle: data.brandDisplayTitle,
      brandLightPrimaryColor: data.gradientEnd,
      brandDarkPrimaryColor: data.gradientStart,
      // @TODO: We need to use an image called multiPlatformLargeImage
      // that is not coming in the data. We need to check with BFF team
      // This image has a similar aspect ratio.
      seriesImage: data.image,
      referrer: 'Marketing',
      entityAnalytics: {
        Show: analytics === null || analytics === void 0 ? void 0 : analytics.series,
        Brand: (analytics === null || analytics === void 0 ? void 0 : (_analytics$brand = analytics.brand) === null || _analytics$brand === void 0 ? void 0 : _analytics$brand.title) || 'None'
      }
    },
    userFavorites: userFavorites,
    titleData: data,
    dispatch: dispatch,
    isLoggedIn: isLoggedIn,
    onTrackFavoriteAction: onTrackFavoriteAction,
    tabIndex: tabIndex
  }));
};
TileSeries.propTypes = {
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    title: (prop_types_default()).string,
    secondaryTitle: (prop_types_default()).string,
    urlAlias: (prop_types_default()).string.isRequired,
    longDescription: (prop_types_default()).string,
    whiteBrandLogo: (prop_types_default()).string,
    brandDisplayTitle: (prop_types_default()).string,
    portraitPreview: (prop_types_default()).string
  }),
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  sizes: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool,
  refGenerator: (prop_types_default()).func,
  onMouseEnter: (prop_types_default()).func,
  onMouseLeave: (prop_types_default()).func,
  isSearchHit: (prop_types_default()).bool,
  isLandscape: (prop_types_default()).bool,
  tabIndex: (prop_types_default()).number,
  isPersonalizationEnabled: (prop_types_default()).bool,
  showTileFavorites: (prop_types_default()).string
};
TileSeries.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null,
  isPersonalizationEnabled: true
};
/* harmony default export */ var Tile_TileSeries = ((0,withFavorites/* default */.Z)(TileSeries, 'userFavorites'));
// EXTERNAL MODULE: ./components/TargetedLink/TargetedLink.js
var TargetedLink = __webpack_require__(483);
// EXTERNAL MODULE: ./utils/getSlideDestination.js
var getSlideDestination = __webpack_require__(73307);
;// CONCATENATED MODULE: ./components/Tile/TileSlide.js
function TileSlide_extends() { return TileSlide_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileSlide_extends.apply(null, arguments); }












const TileSlide = _ref => {
  var _location$state, _data$cta, _data$cta$analytics, _data$cta$analytics$m, _data$cta$analytics$m2, _data$cta2, _data$cta2$analytics, _data$cta2$analytics$, _data$cta2$analytics$2, _data$cta3, _data$cta3$analytics, _data$cta3$analytics$, _data$cta3$analytics$2, _data$cta4, _data$cta4$analytics, _data$cta4$analytics$;
  let {
    data,
    analytics,
    isImageDeferred,
    itemIndex,
    onClick,
    onFocus,
    sizes,
    srcSetConfig,
    refGenerator,
    watchState,
    percentViewed,
    isClip,
    isEpisode,
    isVideo,
    isMovie,
    onMouseEnter,
    onMouseLeave,
    smartTileProps,
    isZoomable,
    shelfIndex,
    shelfTitle,
    href,
    query,
    location
  } = _ref;
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--slide', {
      'tile--zoomable': isZoomable,
      'tile--slideClip': isClip,
      'tile--slideEpisode': isEpisode,
      'tile--slideMovie': isMovie,
      'tile--onairnow': analytics.isLiveSlide
    })
  }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, TileSlide_extends({
    className: "tile",
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex,
    href: href,
    query: query,
    state: {
      smartTile: smartTileProps,
      itemIndex,
      shelfTitle,
      shelfIndex,
      entryPath: location === null || location === void 0 ? void 0 : location.pathname,
      entityAnalytics: {
        ...((location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.entityAnalytics) || {}),
        'Video ID': data === null || data === void 0 ? void 0 : (_data$cta = data.cta) === null || _data$cta === void 0 ? void 0 : (_data$cta$analytics = _data$cta.analytics) === null || _data$cta$analytics === void 0 ? void 0 : (_data$cta$analytics$m = _data$cta$analytics.mpxGuid) === null || _data$cta$analytics$m === void 0 ? void 0 : (_data$cta$analytics$m2 = _data$cta$analytics$m.data) === null || _data$cta$analytics$m2 === void 0 ? void 0 : _data$cta$analytics$m2.mpxGuid,
        Show: data === null || data === void 0 ? void 0 : (_data$cta2 = data.cta) === null || _data$cta2 === void 0 ? void 0 : (_data$cta2$analytics = _data$cta2.analytics) === null || _data$cta2$analytics === void 0 ? void 0 : (_data$cta2$analytics$ = _data$cta2$analytics.series) === null || _data$cta2$analytics$ === void 0 ? void 0 : (_data$cta2$analytics$2 = _data$cta2$analytics$.data) === null || _data$cta2$analytics$2 === void 0 ? void 0 : _data$cta2$analytics$2.seriesShortTitle,
        Season: data === null || data === void 0 ? void 0 : (_data$cta3 = data.cta) === null || _data$cta3 === void 0 ? void 0 : (_data$cta3$analytics = _data$cta3.analytics) === null || _data$cta3$analytics === void 0 ? void 0 : (_data$cta3$analytics$ = _data$cta3$analytics.seasonNumber) === null || _data$cta3$analytics$ === void 0 ? void 0 : (_data$cta3$analytics$2 = _data$cta3$analytics$.data) === null || _data$cta3$analytics$2 === void 0 ? void 0 : _data$cta3$analytics$2.seasonNumber,
        Brand: data === null || data === void 0 ? void 0 : (_data$cta4 = data.cta) === null || _data$cta4 === void 0 ? void 0 : (_data$cta4$analytics = _data$cta4.analytics) === null || _data$cta4$analytics === void 0 ? void 0 : (_data$cta4$analytics$ = _data$cta4$analytics.brand) === null || _data$cta4$analytics$ === void 0 ? void 0 : _data$cta4$analytics$.title
      }
    }
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail",
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: refGenerator('tileThumbnailRef')
  }, percentViewed > saveVideoWatched/* PERCENT_INITIAL */.d0 && percentViewed < saveVideoWatched/* PERCENT_COMPLETE */.IW && /*#__PURE__*/react.createElement("div", {
    className: "tile__progress"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--bar",
    style: {
      width: "".concat(percentViewed * 100, "%")
    }
  }), /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--gradient"
  }), /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--background"
  })), data.labelBadge && /*#__PURE__*/react.createElement("span", {
    className: "tile__badge"
  }, data.labelBadge), /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.title,
    sizes: sizes,
    srcSet: {
      path: data.image
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  }), watchState === 'LOCKED' && /*#__PURE__*/react.createElement("div", {
    className: "tile__icon icon-play--auth"
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__title"
  }, get_default()(data, 'cta.data.text')), /*#__PURE__*/react.createElement("div", {
    className: "tile__secondaryTitle"
  }, data.title), !isVideo && /*#__PURE__*/react.createElement("div", {
    className: "tile__longDescription"
  }, data.description), isEpisode && /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {
    className: "tile__tertiaryTitle"
  }, data.videoTitle), /*#__PURE__*/react.createElement("div", {
    className: "tile__tertiaryTitle"
  }, data.secondaryTitle)), isClip && /*#__PURE__*/react.createElement("div", {
    className: "tile__description"
  }, /*#__PURE__*/react.createElement("span", {
    className: "tile__clip__badge"
  }, "CLIP"), data.airDate && (0,formatDate/* default */.Z)(data.airDate)), isMovie && /*#__PURE__*/react.createElement("div", {
    className: "tile__description"
  }, /*#__PURE__*/react.createElement("span", {
    className: "tile__clip__badge"
  }, data.rating), data.secondaryTitle)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))))));
};
TileSlide.propTypes = {
  data: prop_types_default().shape({
    cta: prop_types_default().shape({
      data: prop_types_default().shape({
        text: (prop_types_default()).string,
        destinationType: (prop_types_default()).string,
        destination: (prop_types_default()).string
      })
    }),
    image: (prop_types_default()).string,
    title: (prop_types_default()).string,
    secondaryTitle: (prop_types_default()).string,
    longDescription: (prop_types_default()).string,
    whiteBrandLogo: (prop_types_default()).string,
    brandDisplayTitle: (prop_types_default()).string,
    portraitPreview: (prop_types_default()).string
  }),
  analytics: prop_types_default().shape({
    locked: (prop_types_default()).bool,
    mpxGuid: (prop_types_default()).string
  }),
  watchState: (prop_types_default()).string,
  percentViewed: (prop_types_default()).number,
  isClip: (prop_types_default()).bool,
  isEpisode: (prop_types_default()).bool,
  isVideo: (prop_types_default()).bool,
  isMovie: (prop_types_default()).bool,
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  sizes: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool,
  refGenerator: (prop_types_default()).func,
  onMouseEnter: (prop_types_default()).func,
  onMouseLeave: (prop_types_default()).func,
  smartTileProps: (prop_types_default()).object,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  href: (prop_types_default()).string,
  query: (prop_types_default()).object,
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string
  })
};
TileSlide.defaultProps = {
  sizes: '(min-width: 990px) 50vw, 100vw',
  refGenerator: () => null
};
/* harmony default export */ var Tile_TileSlide = ((0,react_redux_es/* connect */.$j)((state, ownProps) => {
  const isAuthenticated = state.adobePass.isAuthenticationChecked && state.adobePass.isAuthenticated && !state.adobePass.isTempPassAuthenticated;
  const isEpisode = ownProps.data.programmingType === 'Full Episode';
  const isMovie = ownProps.data.programmingType === 'Movie';
  const isClip = !isEpisode && !isMovie && get_default()(ownProps.data, 'cta.data.destinationType') === 'video';
  const isVideo = isEpisode || isClip;
  const {
    href,
    query
  } = (0,getSlideDestination/* default */.Z)(ownProps.data.cta);

  // Show locked key when user is not MVPD-authed
  const isLocked = (ownProps.analytics.locked || ownProps.data.locked) && !isAuthenticated;
  return {
    href,
    query,
    isEpisode,
    isClip,
    isVideo,
    isMovie,
    watchState: isLocked ? 'LOCKED' : 'NOT_LOCKED',
    percentViewed: state.watches[ownProps.data.v4ID] || ownProps.data.percentViewed
  };
})((0,es/* withRouter */.EN)(TileSlide)));
;// CONCATENATED MODULE: ./components/Tile/TileFeature.js
function TileFeature_extends() { return TileFeature_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileFeature_extends.apply(null, arguments); }








const TileFeature = _ref => {
  let {
    data,
    isImageDeferred,
    itemIndex,
    onClick,
    onFocus,
    sizes,
    srcSetConfig,
    isZoomable,
    tabIndex
  } = _ref;
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--feature', {
      'tile--zoomable': isZoomable
    })
  }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, TileFeature_extends({
    href: data.destination
  }, data.destinationType === 'externalPage' ? {
    target: '_blank'
  } : {}, {
    className: "tile",
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail"
  }, /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.title,
    sizes: sizes,
    srcSet: {
      path: data.image
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__title"
  }, data.title), /*#__PURE__*/react.createElement("div", {
    className: "tile__secondaryTitle"
  }, data.secondaryTitle)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))))));
};
TileFeature.propTypes = {
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    headline: (prop_types_default()).string,
    metadata: (prop_types_default()).string,
    destination: (prop_types_default()).string,
    destinationType: (prop_types_default()).string
  }),
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  sizes: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool,
  tabIndex: (prop_types_default()).number
};
TileFeature.defaultProps = {
  sizes: '(min-width: 990px) 340px, (min-width: 665px) 33.3vw, (min-width: 480px) 50vw, 100vw'
};
/* harmony default export */ var Tile_TileFeature = ((0,react_redux_es/* connect */.$j)((state, ownProps) => ({
  isZoomable: !get_default()(state, 'client.userAgent.isMobile') && !get_default()(state, 'client.userAgent.isTablet') && ownProps.isZoomable
}))(TileFeature));
;// CONCATENATED MODULE: ./components/Tile/TileCharacter.js
function TileCharacter_extends() { return TileCharacter_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileCharacter_extends.apply(null, arguments); }






const TileCharacter = _ref => {
  let {
    data: {
      title,
      thumbnail,
      personImage,
      gradientStart,
      itemIndex,
      ariaLabel,
      secondaryTitle,
      roleMachineName,
      machineName,
      pathname
    },
    destination,
    srcSetConfig,
    shelfTitle,
    treatments,
    seasonNumber
  } = _ref;
  const isLeader = treatments && treatments.indexOf('leader') > -1;
  const tileImage = thumbnail || get_default()(personImage, ['path']) || '';
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--character', {
      'tile--credit-leader': isLeader
    })
  }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, TileCharacter_extends({
    href: pathname || "".concat(destination).concat(roleMachineName).concat(seasonNumber ? "/season-".concat(seasonNumber) : '', "/").concat(machineName),
    className: "tile",
    "data-index": itemIndex
  }, ariaLabel ? {
    'aria-label': ariaLabel
  } : {}, {
    state: {
      shelfTitle
    }
  }), /*#__PURE__*/react.createElement("article", TileCharacter_extends({
    className: "tile__content"
  }, gradientStart && {
    style: {
      backgroundColor: gradientStart
    }
  }), /*#__PURE__*/react.createElement("div", {
    className: classnames_default()('tile__thumbnail', {
      tile__fallback: !tileImage
    })
  }, /*#__PURE__*/react.createElement(Image/* default */.Z, {
    srcSet: tileImage,
    alt: title,
    srcSetConfig: srcSetConfig
  })), /*#__PURE__*/react.createElement("div", TileCharacter_extends({
    className: "tile__meta"
  }, gradientStart && {
    style: {
      backgroundColor: gradientStart
    }
  }), /*#__PURE__*/react.createElement("h2", {
    className: "tile__title"
  }, title), /*#__PURE__*/react.createElement("div", {
    className: "tile__description"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__description__part"
  }, secondaryTitle))))));
};
TileCharacter.propTypes = {
  data: prop_types_default().shape({
    title: (prop_types_default()).string,
    description: (prop_types_default()).string,
    thumbnail: prop_types_default().shape({
      path: (prop_types_default()).string
    }),
    pathname: (prop_types_default()).string,
    isThemselves: (prop_types_default()).bool,
    ariaLabel: (prop_types_default()).string
  }).isRequired,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }),
  seasonNumber: (prop_types_default()).string
};
/* harmony default export */ var Tile_TileCharacter = (TileCharacter);
;// CONCATENATED MODULE: ./components/Tile/TileGallery.js
function TileGallery_extends() { return TileGallery_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileGallery_extends.apply(null, arguments); }







const getthumbnail = img => img ? "url(".concat(img.path).concat(img.path.indexOf('?') > -1 ? '&' : '?', "impolicy=").concat(config/* default */.Z.get('akamai.policy'), "&imwidth=340)") : '';
const metaInfo = (category, postDate) => {
  const metaPost = postDate ? "Post Date ".concat((0,formatDate/* default */.Z)(postDate)) : '';
  let metaData;
  if (category && postDate) {
    metaData = [category, metaPost].join(' | ');
  } else {
    metaData = category || metaPost;
  }
  return metaData.length > 0 && /*#__PURE__*/react.createElement("div", {
    className: "tile__description__part"
  }, metaData);
};
const TileGallery = props => /*#__PURE__*/react.createElement("li", {
  className: classnames_default()('tile tile--gallery', {
    'tile--active': get_default()(props, 'data.id') === get_default()(props, 'data.currentGallery')
  })
}, /*#__PURE__*/react.createElement(es/* Link */.rU, TileGallery_extends({
  to: get_default()(props, 'data.pathname'),
  className: "tile",
  onClick: event => props.onClick && props.onClick(event, props),
  "data-index": props.itemIndex
}, get_default()(props.data, 'ariaLabel') ? {
  'aria-label': props.data.ariaLabel
} : {}), /*#__PURE__*/react.createElement("article", {
  className: "tile__content"
}, /*#__PURE__*/react.createElement("div", {
  className: "tile__thumbnail",
  style: {
    backgroundImage: getthumbnail(get_default()(props, 'data.thumbnail'))
  }
}), /*#__PURE__*/react.createElement("div", {
  className: "tile__meta"
}, /*#__PURE__*/react.createElement("h2", {
  className: "tile__title"
}, get_default()(props, 'data.title')), /*#__PURE__*/react.createElement("div", {
  className: "tile__description"
}, metaInfo(get_default()(props, 'data.category'), get_default()(props, 'data.postDate')))))));
TileGallery.propTypes = {
  data: prop_types_default().shape({
    id: (prop_types_default()).string,
    title: (prop_types_default()).string,
    pathname: (prop_types_default()).string,
    thumbnail: prop_types_default().shape({
      path: (prop_types_default()).string
    }),
    category: (prop_types_default()).string,
    currentGallery: (prop_types_default()).string,
    postDate: (prop_types_default()).string
  }).isRequired,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  onClick: (prop_types_default()).func
};
/* harmony default export */ var Tile_TileGallery = (TileGallery);
;// CONCATENATED MODULE: ./components/Tile/TileMarketingBand.js
function TileMarketingBand_extends() { return TileMarketingBand_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileMarketingBand_extends.apply(null, arguments); }




const TileMarketingBand = _ref => {
  let {
    data,
    treatments = [],
    itemIndex,
    onClick,
    sizes,
    tabIndex
  } = _ref;
  return /*#__PURE__*/react.createElement("li", {
    className: "tile tile--marketing-band"
  }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, TileMarketingBand_extends({
    href: data.link,
    target: "_blank",
    className: "tile",
    onClick: onClick,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile--marketing-band__inner"
  }, treatments.includes('set') ? data.compactImage && /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.link,
    sizes: sizes,
    srcSet: {
      path: data.compactImage
    },
    srcSetConfig: {
      minWidth: 340,
      maxWidth: 1920
    },
    className: "tile--marketing-band__image"
  }) : data.primaryImage && data.compactImage && /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.link,
    sizes: sizes,
    srcSet: {
      path: data.compactImage
    },
    srcSetConfig: {
      minWidth: 340,
      maxWidth: 1920
    },
    type: "picture",
    className: "tile--marketing-band__image"
  }, /*#__PURE__*/react.createElement(Image/* Source */.H, {
    srcSet: {
      path: data.primaryImage
    },
    srcSetConfig: {
      minWidth: 665,
      maxWidth: 1920
    },
    sizes: sizes
  })))));
};
TileMarketingBand.propTypes = {
  data: prop_types_default().shape({
    primaryImage: (prop_types_default()).string,
    compactImage: (prop_types_default()).string,
    link: (prop_types_default()).string
  }),
  treatments: prop_types_default().arrayOf((prop_types_default()).string),
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  sizes: (prop_types_default()).string,
  tabIndex: (prop_types_default()).number
};
TileMarketingBand.defaultProps = {
  sizes: '100vw'
};
/* harmony default export */ var Tile_TileMarketingBand = (TileMarketingBand);
;// CONCATENATED MODULE: ./components/Tile/TileMovie.js
function TileMovie_extends() { return TileMovie_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileMovie_extends.apply(null, arguments); }












const TileMovie = _ref => {
  let {
    data,
    isAuthenticated,
    isImageDeferred,
    isMovie,
    isWhiteThemed,
    isZoomable,
    itemIndex,
    onClick,
    onFocus,
    onMouseEnter,
    onMouseLeave,
    percentViewed,
    playlistMachineName,
    shelfPlaylistMachineName,
    refGenerator,
    shelfIndex,
    sponsorName,
    shelfTitle,
    sizes,
    smartLabel,
    srcSetConfig,
    treatments,
    tabIndex,
    isActiveAllowed = true
  } = _ref;
  const isCurrent = !isMovie && treatments && treatments.includes('current');
  const path = data.permalink || (0,formatRelativePath/* default */.Z)(data.relativePath) || '/';
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--movie', {
      'tile--watched': percentViewed >= saveVideoWatched/* PERCENT_COMPLETE */.IW,
      'tile--zoomable': isZoomable,
      'tile--white-theme': isWhiteThemed,
      // @deprecated React Router v4 has an isActive prop for <Link>
      'tile--active': isCurrent && isActiveAllowed
    })
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileMovie_extends({
    to: utils_getVideoTileDestinationData(playlistMachineName || shelfPlaylistMachineName, (0,getPathname/* default */.Z)(path), data.mpxGuid, {
      shelfTitle,
      shelfIndex,
      shelfPlaylistMachineName,
      sponsorName,
      itemIndex
    }, getQueryParams(path)),
    className: "tile",
    activeClassName: !isMovie && isActiveAllowed ? 'tile--active' : '',
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail",
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: refGenerator('tileThumbnailRef')
  }, isWhiteThemed && /*#__PURE__*/react.createElement("div", {
    className: "tile__logo-background"
  }), !isCurrent && percentViewed > saveVideoWatched/* PERCENT_INITIAL */.d0 && percentViewed < saveVideoWatched/* PERCENT_COMPLETE */.IW && /*#__PURE__*/react.createElement("div", {
    className: "tile__progress"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--bar",
    style: {
      width: "".concat(percentViewed * 100, "%")
    }
  }), /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--gradient"
  }), /*#__PURE__*/react.createElement("div", {
    className: "tile__progress--background"
  })), data.labelBadge && /*#__PURE__*/react.createElement("span", {
    className: "tile__badge"
  }, data.labelBadge), /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: shelfTitle === 'Smart Tile' ? data.secondaryTitle : data.title,
    sizes: sizes,
    srcSet: {
      path: data.image
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  }), data.locked && !isAuthenticated && /*#__PURE__*/react.createElement("div", {
    className: "tile__icon icon-play--auth"
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, smartLabel && /*#__PURE__*/react.createElement("div", {
    className: "tile__smartLabel"
  }, smartLabel.toUpperCase()), /*#__PURE__*/react.createElement("div", {
    className: "tile__title"
  }, data.title), shelfTitle === 'Smart Tile' && /*#__PURE__*/react.createElement("div", {
    className: "tile__secondaryTitle"
  }, data.secondaryTitle), /*#__PURE__*/react.createElement("div", {
    className: "tile__description"
  }, data.rating && /*#__PURE__*/react.createElement("span", {
    className: "tile__meta__badge"
  }, data.rating), ' ', /*#__PURE__*/react.createElement("span", {
    className: "tile__meta__badge--description"
  }, shelfTitle === 'Smart Tile' ? data.longDescription : data.secondaryTitle))), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))))));
};
TileMovie.propTypes = {
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    locked: (prop_types_default()).bool,
    permalink: (prop_types_default()).string.isRequired,
    programmingType: (prop_types_default()).string,
    title: (prop_types_default()).string,
    secondaryTitle: (prop_types_default()).string,
    mpxGuid: (prop_types_default()).string,
    ariaLabel: (prop_types_default()).string
  }),
  isAuthenticated: (prop_types_default()).bool,
  isImageDeferred: (prop_types_default()).bool,
  isActiveAllowed: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  sponsorName: (prop_types_default()).string,
  sizes: (prop_types_default()).string,
  smartLabel: (prop_types_default()).string,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  refGenerator: (prop_types_default()).func,
  onMouseEnter: (prop_types_default()).func,
  onMouseLeave: (prop_types_default()).func,
  isZoomable: (prop_types_default()).bool,
  isMovie: (prop_types_default()).bool,
  isWhiteThemed: (prop_types_default()).bool,
  percentViewed: (prop_types_default()).number,
  playlistMachineName: (prop_types_default()).string,
  shelfPlaylistMachineName: (prop_types_default()).string,
  treatments: prop_types_default().arrayOf((prop_types_default()).string),
  tabIndex: (prop_types_default()).number
};
TileMovie.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null
};
/* harmony default export */ var Tile_TileMovie = ((0,react_redux_es/* connect */.$j)((state, ownProps) => ({
  isAuthenticated: state.adobePass.isAuthenticationChecked && state.adobePass.isAuthenticated && !state.adobePass.isTempPassAuthenticated,
  percentViewed: state.watches[ownProps.data.v4ID] || ownProps.data.percentViewed
}))(TileMovie));
;// CONCATENATED MODULE: ./components/Tile/TileMoviePoster.js
function TileMoviePoster_extends() { return TileMoviePoster_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileMoviePoster_extends.apply(null, arguments); }











const TileMoviePoster_NBC_PURPLE = get_default()((postcss_config_default()), 'plugins.postcss-simple-vars.variables.oneapp-purple');
const TileMoviePoster_ROYAL_BLUE = get_default()((postcss_config_default()), 'plugins.postcss-simple-vars.variables.oneapp-royal-blue');
const TileMoviePoster = props => {
  var _analytics$brand;
  const {
    data,
    analytics,
    isImageDeferred,
    itemIndex,
    onClick
  } = props;
  const {
    onFocus,
    sizes,
    srcSetConfig,
    refGenerator
  } = props;
  const {
    onMouseEnter,
    onMouseLeave
  } = props;
  const {
    isZoomable,
    isSearchHit,
    isLandscape,
    tabIndex
  } = props;
  const {
    showTileFavorites
  } = props;
  const {
    dispatch,
    isLoggedIn,
    userFavorites
  } = props;
  const onTrackFavoriteAction = isAdd => {
    const favoriteType = isAdd ? 'Add' : 'Remove';
    mParticle/* default */.ZP.trackEvent({
      type: 'UserPreference',
      name: 'Item Favorited',
      attributes: {
        'Favorite Type': favoriteType,
        'Brand Favorited': data.brandDisplayTitle || 'None',
        'Show Favorited': data.shortTitle || data.title
      }
    });
  };
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--title', {
      'tile--landscape': isLandscape,
      'tile--zoomable': isZoomable,
      ["tile__favorite--".concat(showTileFavorites)]: showTileFavorites !== 'default'
    })
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileMoviePoster_extends({
    to: "/".concat(data.urlAlias),
    className: "tile",
    onClick: onClick,
    onFocus: onFocus,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail",
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    ref: refGenerator('tileThumbnailRef')
  }, /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.title,
    sizes: sizes,
    srcSet: {
      path: isLandscape ? data.image : data.posterImage
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__title"
  }, data.title), isSearchHit && data.longDescription && /*#__PURE__*/react.createElement("div", {
    className: "tile__longDescription"
  }, data.longDescription)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))))), showTileFavorites !== 'default' && /*#__PURE__*/react.createElement(Favorites_FavoriteSeriesMovies, {
    metadata: {
      gradientStart: data.gradientStart || TileMoviePoster_ROYAL_BLUE,
      gradientEnd: data.gradientEnd || TileMoviePoster_NBC_PURPLE,
      whiteBrandLogo: data.whiteBrandLogo,
      brandDisplayTitle: data.brandDisplayTitle,
      brandLightPrimaryColor: data.gradientEnd,
      brandDarkPrimaryColor: data.gradientStart,
      referrer: 'Marketing',
      entityAnalytics: {
        Show: analytics === null || analytics === void 0 ? void 0 : analytics.series,
        Brand: (analytics === null || analytics === void 0 ? void 0 : (_analytics$brand = analytics.brand) === null || _analytics$brand === void 0 ? void 0 : _analytics$brand.title) || 'None'
      }
    },
    userFavorites: userFavorites,
    titleData: data,
    dispatch: dispatch,
    favoriteID: data.favoriteID,
    isLoggedIn: isLoggedIn,
    onTrackFavoriteAction: onTrackFavoriteAction,
    isMovie: true
  }));
};
TileMoviePoster.propTypes = {
  data: prop_types_default().shape({
    title: (prop_types_default()).string,
    urlAlias: (prop_types_default()).string.isRequired,
    whiteBrandLogo: (prop_types_default()).string,
    brandDisplayTitle: (prop_types_default()).string,
    portraitPreview: (prop_types_default()).string,
    posterImage: (prop_types_default()).string,
    image: (prop_types_default()).string
  }),
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  sizes: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool,
  refGenerator: (prop_types_default()).func,
  onMouseEnter: (prop_types_default()).func,
  onMouseLeave: (prop_types_default()).func,
  isSearchHit: (prop_types_default()).bool,
  isLandscape: (prop_types_default()).bool,
  tabIndex: (prop_types_default()).number,
  isPersonalizationEnabled: (prop_types_default()).bool,
  showTileFavorites: (prop_types_default()).string
};
TileMoviePoster.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null,
  isPersonalizationEnabled: true
};
/* harmony default export */ var Tile_TileMoviePoster = ((0,withFavorites/* default */.Z)(TileMoviePoster, 'userFavorites'));
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./components/Badges/LiveBadge.js
var LiveBadge = __webpack_require__(31652);
// EXTERNAL MODULE: ./utils/getLiveProgress.js
var getLiveProgress = __webpack_require__(99857);
// EXTERNAL MODULE: ./components/Badges/FreeBadge.js
var FreeBadge = __webpack_require__(53226);
;// CONCATENATED MODULE: ./components/Tile/TileOnAirNow.js
function TileOnAirNow_extends() { return TileOnAirNow_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileOnAirNow_extends.apply(null, arguments); }

function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }











class TileOnAirNow extends react.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "state", {
      isFailed: false
    });
    _defineProperty(this, "onError", () => this.setState({
      isFailed: true
    }));
  }
  render() {
    const {
      location,
      analytics,
      data,
      isImageDeferred,
      itemIndex,
      onClick,
      onFocus,
      shelfIndex,
      shelfTitle,
      sizes,
      srcSetConfig,
      refGenerator,
      treatments,
      isZoomable,
      percentViewed,
      tabIndex,
      language,
      shelfMachineName
    } = this.props;
    const isSmarterContinueWatching = treatments && treatments.indexOf('smarterContinueWatching') >= 0;
    return /*#__PURE__*/react.createElement("li", {
      className: classnames_default()('tile tile--onairnow', {
        'tile--zoomable': isZoomable,
        'tile--smarterContinueWatching': isSmarterContinueWatching
      })
    }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileOnAirNow_extends({
      to: {
        pathname: '/live',
        query: {
          brand: data.machineName,
          ...(data.callSign ? {
            callsign: data.callSign
          } : {})
        },
        state: {
          shelfTitle,
          shelfIndex,
          itemIndex,
          entryPath: location.pathname,
          shelfMachineName,
          entityAnalytics: {
            'Video ID': get_default()(analytics, 'mpxGuid', data.mpxGuid),
            Show: get_default()(analytics, 'series', data.seriesShortTitle),
            Season: get_default()(analytics, 'seasonNumber', data.seasonNumber),
            Brand: get_default()(analytics, 'brand.title', 'None')
          }
        }
      },
      className: "tile",
      onClick: onClick,
      onFocus: onFocus,
      "data-index": itemIndex
    }, data.ariaLabel ? {
      'aria-label': data.ariaLabel
    } : {}, tabIndex === -1 ? {
      tabIndex: -1
    } : {}), /*#__PURE__*/react.createElement("article", {
      className: "tile__content"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__thumbnail",
      ref: refGenerator('tileThumbnailRef'),
      "data-index": itemIndex
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__progress"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__progress--bar",
      style: {
        width: "".concat(percentViewed * 100, "%")
      }
    }), /*#__PURE__*/react.createElement("div", {
      className: "tile__progress--gradient"
    }), /*#__PURE__*/react.createElement("div", {
      className: "tile__progress--background"
    })), /*#__PURE__*/react.createElement(LiveBadge/* default */.Z, {
      label: data.badge,
      className: "tile__badge tile__badge--live"
    }), !this.state.isFailed && /*#__PURE__*/react.createElement(Image/* default */.Z, {
      className: "tile__image--blurred",
      alt: data.title,
      sizes: sizes,
      srcSet: {
        path: data.image
      },
      srcSetConfig: srcSetConfig,
      isImageDeferred: isImageDeferred
    }), !this.state.isFailed && /*#__PURE__*/react.createElement(Image/* default */.Z, {
      alt: data.title,
      sizes: sizes,
      srcSet: {
        path: data.image
      },
      srcSetConfig: srcSetConfig,
      isImageDeferred: isImageDeferred,
      onError: this.onError
    }), data.whiteBrandLogo && (this.state.isFailed || isSmarterContinueWatching) && /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
      className: "tile__thumbnail__image",
      url: data.whiteBrandLogo,
      brandTitle: data.brandDisplayTitle,
      align: "center"
    })), /*#__PURE__*/react.createElement("div", {
      className: "tile__meta tile__meta--branded"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__meta__text"
    }, data.watchTagline && /*#__PURE__*/react.createElement("div", {
      className: "tile__watchTagline"
    }, data.watchTagline), /*#__PURE__*/react.createElement("div", {
      className: "tile__title",
      "data-index": itemIndex
    }, treatments && treatments.indexOf('smarterContinueWatching') >= 0 ? data.brandDisplayTitle : data.title), data.channelId === 'nbcnews' && /*#__PURE__*/react.createElement(FreeBadge/* default */.Z, {
      language: language
    }, /*#__PURE__*/react.createElement("span", {
      className: "free-badge--description"
    }, "Live News Streaming"))), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
      className: "tile__brand-logo"
    }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
      url: data.whiteBrandLogo,
      brandTitle: data.brandDisplayTitle,
      isFallbackVisible: false
    }))))));
  }
}
TileOnAirNow.propTypes = {
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string
  }),
  analytics: prop_types_default().shape({
    mpxGuid: (prop_types_default()).string,
    series: (prop_types_default()).string,
    seasonNumber: (prop_types_default()).string,
    brand: prop_types_default().shape({
      title: (prop_types_default()).string
    })
  }),
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    percentViewed: (prop_types_default()).number,
    resourceId: (prop_types_default()).string.isRequired,
    seasonNumber: (prop_types_default()).string,
    title: (prop_types_default()).string,
    mpxGuid: (prop_types_default()).string,
    seriesShortTitle: (prop_types_default()).string,
    channelId: (prop_types_default()).string.isRequired,
    watchTagline: (prop_types_default()).string
  }),
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  sizes: (prop_types_default()).string,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  refGenerator: (prop_types_default()).func,
  treatments: prop_types_default().arrayOf((prop_types_default()).string),
  isZoomable: (prop_types_default()).bool,
  percentViewed: (prop_types_default()).number,
  tabIndex: (prop_types_default()).number
};
TileOnAirNow.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null
};
/* harmony default export */ var Tile_TileOnAirNow = ((0,react_redux_es/* connect */.$j)((state, ownProps) => {
  const startTime = ownProps.data.onAirStartTime || ownProps.data.startTime;
  const endTime = ownProps.data.onAirEndTime || ownProps.data.endTime;
  return {
    percentViewed: (0,getLiveProgress/* default */.Z)(startTime, endTime),
    isZoomable: !get_default()(state, 'client.userAgent.isMobile') && !get_default()(state, 'client.userAgent.isTablet') && ownProps.isZoomable
  };
})((0,es/* withRouter */.EN)(TileOnAirNow)));
// EXTERNAL MODULE: ./components/UpcomingLive/withUpcomingLiveData.js
var withUpcomingLiveData = __webpack_require__(43378);
// EXTERNAL MODULE: ./components/Search/SearchHit.util.js
var SearchHit_util = __webpack_require__(39843);
;// CONCATENATED MODULE: ./components/Tile/TileUpcomingLive.js
function TileUpcomingLive_extends() { return TileUpcomingLive_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileUpcomingLive_extends.apply(null, arguments); }

function TileUpcomingLive_defineProperty(e, r, t) { return (r = TileUpcomingLive_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function TileUpcomingLive_toPropertyKey(t) { var i = TileUpcomingLive_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function TileUpcomingLive_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
















const MEDAL_ICON = "".concat(config/* default */.Z.get('app.assetPath'), "images/icons/medal.png");
class TileUpcomingLive extends react.Component {
  constructor() {
    super(...arguments);
    TileUpcomingLive_defineProperty(this, "state", {
      isFailed: false
    });
    TileUpcomingLive_defineProperty(this, "onError", () => {
      this.setState({
        isFailed: true
      });
    });
    TileUpcomingLive_defineProperty(this, "isSingleLiveEvent", () => (0,programmingTypes/* isSingleLiveEventType */.RZ)(this.props.contentType));
  }
  render() {
    var _data$audioLanguage;
    const {
      data,
      isImageDeferred,
      itemIndex,
      onFocus,
      onBlur,
      srcSetConfig,
      refGenerator,
      isZoomable,
      percentViewed,
      tabIndex,
      sizes,
      localStartTime,
      isEventStarted,
      treatments,
      isStacked,
      isActiveAllowed = true,
      isProgressBarEnabled = true
    } = this.props;
    const {
      isFailed
    } = this.state;
    const {
      upcomingAriaLabel
    } = (0,SearchHit_util/* getAriaLabel */.Xw)({
      startDate: localStartTime,
      title: data === null || data === void 0 ? void 0 : data.secondaryTitle,
      league: data === null || data === void 0 ? void 0 : data.league,
      sport: data === null || data === void 0 ? void 0 : data.sport,
      brand: data.brandDisplayTitle,
      isSingleLiveEvent: true
    });
    const isCurrent = treatments && treatments.includes('current');
    const isAudioDescription = (data === null || data === void 0 ? void 0 : data.audioDescription) || (data === null || data === void 0 ? void 0 : (_data$audioLanguage = data.audioLanguage) === null || _data$audioLanguage === void 0 ? void 0 : _data$audioLanguage.includes('ad'));
    const isProgressBarVisible = isEventStarted && !(data !== null && data !== void 0 && data.isOlympics) && isProgressBarEnabled;
    const handleClick = evt => {
      // Do not route using <Link> because handleClick from withUpcomingLiveData
      // will navigate for us.
      evt.preventDefault();
      this.props.onClick(evt);
    };
    return /*#__PURE__*/react.createElement("li", {
      className: classnames_default()('tile tile--upcoming-live', {
        'tile--zoomable': isZoomable,
        'tile--event-upcoming': !isEventStarted,
        'tile--event-live': isEventStarted,
        'tile--active': isActiveAllowed && isCurrent,
        'tile--stacked': isStacked,
        'tile--has-progress': isProgressBarVisible
      })
    }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileUpcomingLive_extends({
      to: this.props.destination,
      className: "tile",
      activeClassName: isActiveAllowed ? 'tile--active' : '',
      onClick: handleClick,
      onFocus: onFocus,
      onBlur: onBlur,
      "data-index": itemIndex
    }, upcomingAriaLabel || data.liveAriaLabel || data.ariaLabel ? {
      'aria-label': isEventStarted ? data.liveAriaLabel || data.ariaLabel : upcomingAriaLabel
    } : {}, tabIndex === -1 ? {
      tabIndex: -1
    } : {}), /*#__PURE__*/react.createElement("article", {
      className: "tile__content"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__thumbnail",
      ref: refGenerator('tileThumbnailRef'),
      "data-index": itemIndex
    }, isProgressBarVisible && /*#__PURE__*/react.createElement("div", {
      className: "tile__progress"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__progress--bar",
      style: {
        width: "".concat(percentViewed * 100, "%")
      }
    }), /*#__PURE__*/react.createElement("div", {
      className: "tile__progress--gradient"
    }), /*#__PURE__*/react.createElement("div", {
      className: "tile__progress--background"
    })), isEventStarted && /*#__PURE__*/react.createElement(LiveBadge/* default */.Z, {
      label: data.liveBadge,
      className: "tile__badge tile__badge--live",
      language: this.props.language
    }), !isEventStarted && data.upcomingBadge && /*#__PURE__*/react.createElement("span", {
      className: "tile__badge"
    }, data === null || data === void 0 ? void 0 : data.upcomingBadge), !isFailed && /*#__PURE__*/react.createElement(Image/* default */.Z, {
      className: "tile__image--blurred",
      alt: data.title,
      sizes: sizes,
      srcSet: {
        path: data.image
      },
      srcSetConfig: srcSetConfig,
      isImageDeferred: isImageDeferred
    }), !isFailed && /*#__PURE__*/react.createElement(Image/* default */.Z, {
      alt: data.title,
      sizes: sizes,
      srcSet: {
        path: data.image
      },
      srcSetConfig: srcSetConfig,
      isImageDeferred: isImageDeferred,
      onError: this.onError
    })), /*#__PURE__*/react.createElement("div", {
      className: "tile__meta tile__meta--branded"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__meta__text"
    }, data.watchTagline && /*#__PURE__*/react.createElement("div", {
      className: "tile__watchTagline"
    }, data.watchTagline), /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('tile__title', {
        'tile__title--medal': data.isMedalSession
      }),
      "data-index": itemIndex
    }, /*#__PURE__*/react.createElement("span", null, data.title), data.isMedalSession && /*#__PURE__*/react.createElement("img", {
      className: "title__title--medal-icon",
      src: MEDAL_ICON,
      alt: ""
    })), /*#__PURE__*/react.createElement("div", {
      className: "tile__secondaryTitle"
    }, data.secondaryTitle), data.longDescription && /*#__PURE__*/react.createElement("div", {
      className: "tile__longDescription"
    }, data.longDescription), (data === null || data === void 0 ? void 0 : data.isOlympics) && /*#__PURE__*/react.createElement("div", {
      className: "tile__video-info"
    }, isEventStarted && /*#__PURE__*/react.createElement("span", {
      className: "tile__video-info__tertiary-title"
    }, data === null || data === void 0 ? void 0 : data.tertiaryTitle), isAudioDescription && /*#__PURE__*/react.createElement(AudioDescriptionBadge/* default */.Z, null), /*#__PURE__*/react.createElement(AudioLanguagesBadge/* default */.Z, {
      audioLanguage: data.audioLanguage || []
    }))), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
      className: "tile__brand-logo"
    }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
      url: data.whiteBrandLogo,
      brandTitle: data.brandDisplayTitle,
      isFallbackVisible: false
    }))))));
  }
}
TileUpcomingLive.propTypes = {
  dispatch: (prop_types_default()).func,
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string
  }),
  analytics: prop_types_default().shape({
    mpxGuid: (prop_types_default()).string,
    series: (prop_types_default()).string,
    seasonNumber: (prop_types_default()).string,
    brand: prop_types_default().shape({
      title: (prop_types_default()).string
    })
  }),
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    startTime: (prop_types_default()).string.isRequired,
    endTime: (prop_types_default()).string.isRequired,
    resourceId: (prop_types_default()).string.isRequired,
    title: (prop_types_default()).string,
    mpxGuid: (prop_types_default()).string,
    seriesShortTitle: (prop_types_default()).string,
    channelId: (prop_types_default()).string.isRequired,
    watchTagline: (prop_types_default()).string
  }),
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  onBlur: (prop_types_default()).func,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  sizes: (prop_types_default()).string,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  refGenerator: (prop_types_default()).func,
  treatments: prop_types_default().arrayOf((prop_types_default()).string),
  isZoomable: (prop_types_default()).bool,
  percentViewed: (prop_types_default()).number,
  tabIndex: (prop_types_default()).number,
  isStacked: (prop_types_default()).bool,
  isActiveAllowed: (prop_types_default()).bool
};
TileUpcomingLive.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null
};
/* harmony default export */ var Tile_TileUpcomingLive = ((0,react_redux_es/* connect */.$j)((state, ownProps) => {
  const startTime = ownProps.data.onAirStartTime || ownProps.data.startTime;
  const endTime = ownProps.data.onAirEndTime || ownProps.data.endTime;
  return {
    percentViewed: (0,getLiveProgress/* default */.Z)(startTime, endTime),
    isZoomable: !get_default()(state, ['client', 'userAgent', 'isMobile']) && !get_default()(state, ['client', 'userAgent', 'isTablet']) && ownProps.isZoomable,
    expiredTiles: get_default()(state.lists.expiredTiles, ['items'], []),
    language: state.client.language
  };
})((0,withUpcomingLiveData/* default */.Z)(TileUpcomingLive)));
;// CONCATENATED MODULE: ./components/Tile/TilePlaylist.js
function TilePlaylist_extends() { return TilePlaylist_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TilePlaylist_extends.apply(null, arguments); }









const TilePlaylist = _ref => {
  let {
    data,
    isImageDeferred,
    itemIndex,
    onClick,
    sizes,
    srcSetConfig,
    isZoomable,
    location,
    tabIndex,
    params
  } = _ref;
  return /*#__PURE__*/react.createElement("li", {
    className: classnames_default()('tile tile--playlist', {
      'tile--zoomable': isZoomable
    })
  }, /*#__PURE__*/react.createElement(TargetedLink/* default */.Z, TilePlaylist_extends({
    href: "/playlist/".concat(data.playlistMachineName),
    query: {
      v: data.destination
    },
    state: {
      entryPath: location.pathname,
      ...(params !== null && params !== void 0 && params.showAlias ? {
        originatingTitle: params.showAlias
      } : {})
    },
    className: "tile",
    target: data.linkTarget,
    onClick: onClick,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}, tabIndex === -1 ? {
    tabIndex: -1
  } : {}), /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__thumbnail"
  }, /*#__PURE__*/react.createElement(Image/* default */.Z, {
    alt: data.title,
    sizes: sizes,
    srcSet: {
      path: data.image
    },
    srcSetConfig: srcSetConfig,
    isImageDeferred: isImageDeferred
  })), /*#__PURE__*/react.createElement("div", {
    className: "tile__meta tile__meta--branded"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__meta__text"
  }, /*#__PURE__*/react.createElement("div", {
    className: "tile__title"
  }, data.title), /*#__PURE__*/react.createElement("div", {
    className: "tile__secondaryTitle"
  }, data.secondaryTitle)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
    className: "tile__brand-logo"
  }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
    url: data.whiteBrandLogo,
    brandTitle: data.brandDisplayTitle,
    isFallbackVisible: false
  }))))));
};
TilePlaylist.propTypes = {
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    headline: (prop_types_default()).string,
    metadata: (prop_types_default()).string,
    linkTarget: (prop_types_default()).string,
    playlistMachineName: (prop_types_default()).string,
    mpxGuid: (prop_types_default()).string
  }),
  location: prop_types_default().shape({
    pathname: (prop_types_default()).string
  }),
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  sizes: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool,
  tabIndex: (prop_types_default()).number
};
TilePlaylist.defaultProps = {
  sizes: '(min-width: 990px) 340px, (min-width: 665px) 33.3vw, (min-width: 480px) 50vw, 100vw'
};
/* harmony default export */ var Tile_TilePlaylist = ((0,react_redux_es/* connect */.$j)((state, ownProps) => ({
  isZoomable: !get_default()(state, 'client.userAgent.isMobile') && !get_default()(state, 'client.userAgent.isTablet') && ownProps.isZoomable
}))((0,es/* withRouter */.EN)(TilePlaylist)));
;// CONCATENATED MODULE: ./components/Tile/TileSmart.js
function TileSmart_extends() { return TileSmart_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileSmart_extends.apply(null, arguments); }





const getComponent = tile => {
  switch (tile.component) {
    case 'VideoTile':
      {
        return tile.data.programmingType === 'Full Episode' ? Tile_TileEpisode : tile.data.programmingType === 'Movie' ? Tile_TileMovie : Tile_TileClip;
      }
    default:
      return null;
  }
};
const TileSmart = props => {
  const Component = getComponent(props.data.tile);
  return Component && /*#__PURE__*/react.createElement(Component, TileSmart_extends({}, props, props.data.tile, {
    smartLabel: props.data.label
  }));
};
TileSmart.propTypes = {
  component: (prop_types_default()).string.isRequired,
  data: prop_types_default().shape({
    label: (prop_types_default()).string,
    tile: prop_types_default().shape({
      component: (prop_types_default()).string.isRequired,
      data: prop_types_default().shape({
        programmingType: (prop_types_default()).string.isRequired
      }).isRequired
    }).isRequired
  }).isRequired
};
/* harmony default export */ var Tile_TileSmart = (/*#__PURE__*/(0,react.memo)(TileSmart));
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.js
var web_url = __webpack_require__(78730);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.to-json.js
var web_url_to_json = __webpack_require__(19979);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url-search-params.js
var web_url_search_params = __webpack_require__(79307);
;// CONCATENATED MODULE: ./components/Tile/TileGenre.js




function TileGenre_extends() { return TileGenre_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileGenre_extends.apply(null, arguments); }





const TileGenre = _ref => {
  let {
    analytics,
    data,
    isZoomable,
    itemIndex,
    onClick,
    shelfIndex,
    shelfTitle,
    shelfMachineName
  } = _ref;
  const content = /*#__PURE__*/react.createElement("article", {
    className: "tile__content"
  }, /*#__PURE__*/react.createElement("div", TileGenre_extends({
    className: "tile__thumbnail",
    "data-index": itemIndex
  }, data.gradientStart && data.gradientEnd ? {
    style: {
      backgroundImage: "linear-gradient(to bottom right, ".concat(data.gradientStart, ", ").concat(data.gradientEnd, ")")
    }
  } : {}), /*#__PURE__*/react.createElement("div", {
    className: "tile__content-title"
  }, data.title)));
  const destination = get_default()(data.ctaLink, ['data', 'destination']);
  const pathname = new URL(destination).pathname;
  return /*#__PURE__*/react.createElement("li", {
    className: "tile"
  }, /*#__PURE__*/react.createElement(es/* Link */.rU, TileGenre_extends({
    to: {
      pathname,
      state: {
        shelfTitle,
        shelfIndex,
        shelfMachineName,
        entityAnalytics: {
          Brand: get_default()(analytics, ['brand', 'title'], 'None')
        }
      }
    },
    className: classnames_default()('tile tile--genre', {
      'tile--zoomable': isZoomable
    }),
    onClick: onClick,
    "data-index": itemIndex
  }, data.ariaLabel ? {
    'aria-label': data.ariaLabel
  } : {}), content));
};
TileGenre.propTypes = {
  analytics: prop_types_default().shape({
    brand: prop_types_default().shape({
      title: (prop_types_default()).string
    })
  }),
  data: prop_types_default().shape({
    gradientStart: (prop_types_default()).string,
    gradientEnd: (prop_types_default()).string,
    machineName: (prop_types_default()).string,
    ctaLink: prop_types_default().shape({
      data: prop_types_default().shape({
        destination: (prop_types_default()).string.isRequired
      })
    }),
    ariaLabel: (prop_types_default()).string
  }),
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  shelfIndex: (prop_types_default()).number,
  shelfTitle: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool
};
/* harmony default export */ var Tile_TileGenre = (TileGenre);
// EXTERNAL MODULE: ./utils/getTranslatedString.js + 2 modules
var getTranslatedString = __webpack_require__(33786);
;// CONCATENATED MODULE: ./components/Tile/TileBrandCategory.js
function TileBrandCategory_defineProperty(e, r, t) { return (r = TileBrandCategory_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function TileBrandCategory_toPropertyKey(t) { var i = TileBrandCategory_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function TileBrandCategory_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






class TileBrandCategory extends react.Component {
  constructor(props) {
    super(props);
    TileBrandCategory_defineProperty(this, "getDefaultSelected", () => !!(this.props.tilesSelected && this.props.tilesSelected.indexOf(get_default()(this.props, ['data', 'machineName'])) >= 0));
    TileBrandCategory_defineProperty(this, "handleClick", e => {
      this.setState(prevState => {
        const isSelected = prevState.isSelected !== null ? !prevState.isSelected : this.getDefaultSelected();
        return {
          isSelected
        };
      }, this.props.onClick && this.props.onClick(e));
      return true;
    });
    TileBrandCategory_defineProperty(this, "onError", () => {
      this.setState({
        isFailed: true
      });
    });
    this.state = {
      isFailed: false,
      isSelected: null
    };
  }
  render() {
    const {
      itemIndex,
      data,
      sizes,
      language,
      onKeyDown
    } = this.props;
    const {
      isFailed,
      isSelected
    } = this.state;
    const tileSelected = isSelected !== null ? isSelected : this.getDefaultSelected();
    const buttonLabel = "".concat((0,getTranslatedString/* default */.Z)(language, "tileBrandCategory.".concat(tileSelected ? 'selected' : 'unSelected')), " ").concat(data.title);
    return /*#__PURE__*/react.createElement("li", {
      className: "tile tile--brand-category"
    }, /*#__PURE__*/react.createElement("article", {
      className: "tile__content"
    }, /*#__PURE__*/react.createElement("button", {
      "data-index": itemIndex,
      onClick: this.handleClick,
      onKeyDown: onKeyDown,
      type: "button",
      "aria-label": data.ariaLabel,
      "data-tip": buttonLabel
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__thumbnail"
    }, !isFailed && /*#__PURE__*/react.createElement(Image/* default */.Z, {
      className: "tile__image",
      alt: data.title,
      sizes: sizes,
      srcSet: {
        path: data.image
      },
      onError: this.onError
    }), /*#__PURE__*/react.createElement("div", {
      className: "tile__gradient"
    }), /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('tile__overlay', {
        'tile__overlay--selected': tileSelected
      }),
      role: "alert",
      "aria-label": buttonLabel
    }), /*#__PURE__*/react.createElement("div", {
      className: "tile__title"
    }, data.title)))));
  }
}
TileBrandCategory.propTypes = {
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    title: (prop_types_default()).string,
    ariaLabel: (prop_types_default()).string
  }),
  tilesSelected: (prop_types_default()).array,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onKeyDown: (prop_types_default()).func,
  sizes: (prop_types_default()).string,
  language: (prop_types_default()).string
};
TileBrandCategory.defaultProps = {
  sizes: '(min-width: 990px) 340px, 100vw'
};
/* harmony default export */ var Tile_TileBrandCategory = (TileBrandCategory);
;// CONCATENATED MODULE: ./components/Tile/TileSeriesFavorite.js
function TileSeriesFavorite_extends() { return TileSeriesFavorite_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, TileSeriesFavorite_extends.apply(null, arguments); }
function TileSeriesFavorite_defineProperty(e, r, t) { return (r = TileSeriesFavorite_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function TileSeriesFavorite_toPropertyKey(t) { var i = TileSeriesFavorite_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function TileSeriesFavorite_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






class TileSeriesFavorite extends react.Component {
  constructor(props) {
    super(props);
    TileSeriesFavorite_defineProperty(this, "handleClick", e => this.setState(prevState => {
      var _this$props$data;
      const isSelected = prevState.isSelected !== null ? !prevState.isSelected : !((_this$props$data = this.props.data) !== null && _this$props$data !== void 0 && _this$props$data.favoriteID);
      return {
        isSelected
      };
    }, this.props.onClick && this.props.onClick(e)));
    this.state = {
      isSelected: null
    };
  }
  render() {
    var _this$props$data2;
    const {
      data,
      itemIndex,
      sizes,
      srcSetConfig,
      refGenerator,
      tabIndex,
      language,
      isZoomable
    } = this.props;
    const {
      onFocus,
      onKeyDown
    } = this.props;
    const {
      isImageDeferred,
      isLandscape
    } = this.props;
    const isSelected = this.state.isSelected !== null ? this.state.isSelected : !!((_this$props$data2 = this.props.data) !== null && _this$props$data2 !== void 0 && _this$props$data2.favoriteID);
    const buttonLabel = "".concat(data.title, " ").concat((0,getTranslatedString/* default */.Z)(language, "tileSeriesFavorite.".concat(isSelected ? 'favorite' : 'unFavorite')));
    return /*#__PURE__*/react.createElement("li", {
      className: classnames_default()('tile tile--title tile--series-favorite', {
        'tile--landscape': isLandscape,
        'tile--zoomable': isZoomable
      })
    }, /*#__PURE__*/react.createElement("div", TileSeriesFavorite_extends({
      className: "tile",
      onFocus: onFocus,
      "data-index": itemIndex
    }, data.ariaLabel ? {
      'aria-label': data.ariaLabel
    } : {}, tabIndex === -1 ? {
      tabIndex: -1
    } : {}), /*#__PURE__*/react.createElement("article", {
      className: "tile__content"
    }, /*#__PURE__*/react.createElement("button", {
      "data-index": itemIndex,
      onClick: this.handleClick,
      onKeyDown: onKeyDown,
      type: "button",
      "aria-label": data.ariaLabel,
      "data-tip": buttonLabel
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__thumbnail",
      ref: refGenerator('tileThumbnailRef')
    }, /*#__PURE__*/react.createElement(Image/* default */.Z, {
      alt: data.title,
      sizes: sizes,
      srcSet: {
        path: isLandscape ? data.image : data.posterImage
      },
      srcSetConfig: srcSetConfig,
      isImageDeferred: isImageDeferred
    }), /*#__PURE__*/react.createElement("div", {
      className: classnames_default()('tile__overlay', {
        'tile__overlay--selected': isSelected
      }),
      role: "alert",
      "aria-label": buttonLabel
    })), /*#__PURE__*/react.createElement("div", {
      className: "tile__meta tile__meta--branded"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__meta__text"
    }, /*#__PURE__*/react.createElement("div", {
      className: "tile__title"
    }, data.title)), data.whiteBrandLogo && /*#__PURE__*/react.createElement("div", {
      className: "tile__brand-logo"
    }, /*#__PURE__*/react.createElement(BrandLogo/* default */.Z, {
      url: data.whiteBrandLogo,
      brandTitle: data.brandDisplayTitle,
      isFallbackVisible: false
    })))))));
  }
}
TileSeriesFavorite.propTypes = {
  data: prop_types_default().shape({
    image: (prop_types_default()).string,
    title: (prop_types_default()).string,
    secondaryTitle: (prop_types_default()).string,
    urlAlias: (prop_types_default()).string.isRequired,
    longDescription: (prop_types_default()).string,
    whiteBrandLogo: (prop_types_default()).string,
    brandDisplayTitle: (prop_types_default()).string,
    portraitPreview: (prop_types_default()).string
  }),
  isImageDeferred: (prop_types_default()).bool,
  itemIndex: (prop_types_default()).number,
  onClick: (prop_types_default()).func,
  onFocus: (prop_types_default()).func,
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }).isRequired,
  sizes: (prop_types_default()).string,
  refGenerator: (prop_types_default()).func,
  isLandscape: (prop_types_default()).bool,
  tabIndex: (prop_types_default()).number,
  tilesSelected: (prop_types_default()).array,
  language: (prop_types_default()).string,
  isZoomable: (prop_types_default()).bool
};
TileSeriesFavorite.defaultProps = {
  sizes: '(min-width: 990px) 340px, 50vw',
  refGenerator: () => null
};
/* harmony default export */ var Tile_TileSeriesFavorite = (TileSeriesFavorite);
// EXTERNAL MODULE: ./utils/isUpcomingType.js
var isUpcomingType = __webpack_require__(2034);
;// CONCATENATED MODULE: ./components/Tile/Tile.js
function Tile_extends() { return Tile_extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, Tile_extends.apply(null, arguments); }























const IMAGE_CONFIG_CARD = config/* default */.Z.get('app.imageConfigs.card');
const Tile_getComponent = props => {
  switch (props.component) {
    case 'BrandTile':
    case 'BrandItemLabel':
      return Tile_TileBrand;
    case 'CategoryItemLabel':
      return Tile_TileCategory;
    case 'PersonTile':
      return Tile_TileCharacter;
    case 'FeatureTile':
      return Tile_TileFeature;
    case 'GalleryTile':
      return Tile_TileGallery;
    case 'MarketingBand':
      return Tile_TileMarketingBand;
    case 'MovieTile':
      if (props.isTileSeriesFavorite) {
        return Tile_TileSeriesFavorite;
      }
      return Tile_TileMoviePoster;
    case 'PlaylistTile':
      return Tile_TilePlaylist;
    case 'SeriesTile':
      if (props.isTileSeriesFavorite) {
        return Tile_TileSeriesFavorite;
      }
      return Tile_TileSeries;
    case 'SlideTile':
      return Tile_TileSlide;
    case 'SmartTile':
      return Tile_TileSmart;
    case 'OnAirNowTile':
      return Tile_TileOnAirNow;
    case 'UpcomingLiveTile':
      return Tile_TileUpcomingLive;
    case 'GenreTile':
      return Tile_TileGenre;
    case 'VideoTile':
      return props.data.programmingType === 'Full Episode' ? Tile_TileEpisode : props.data.programmingType === 'Movie' ? Tile_TileMovie : Tile_TileClip;
    case 'BrandCategoryTile':
      return Tile_TileBrandCategory;
    case 'ReplayTile':
      return Tile_TileEpisode;
    default:
      return null;
  }
};
const Tile = _ref => {
  let {
    isImageDeferred = false,
    srcSetConfig = IMAGE_CONFIG_CARD,
    ...props
  } = _ref;
  const Component = Tile_getComponent(props);
  return Component && /*#__PURE__*/react.createElement(Component, Tile_extends({}, props, {
    isImageDeferred: isImageDeferred,
    srcSetConfig: srcSetConfig,
    isUpcomingType: (0,isUpcomingType/* default */.Z)(props.component)
  }));
};
Tile.propTypes = {
  component: (prop_types_default()).string.isRequired,
  data: prop_types_default().shape({
    programmingType: (prop_types_default()).string
  }),
  srcSetConfig: prop_types_default().shape({
    minWidth: (prop_types_default()).number,
    maxWidth: (prop_types_default()).number
  }),
  isImageDeferred: (prop_types_default()).bool,
  isMobile: (prop_types_default()).bool,
  isWatchLinkVisible: (prop_types_default()).bool
};
/* harmony default export */ var Tile_Tile = (/*#__PURE__*/(0,react.memo)(Tile));

/***/ }),

/***/ 57905:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ TruncatedText_TruncatedText; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(45697);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ./node_modules/lodash/debounce.js
var debounce = __webpack_require__(23279);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__(57267);
// EXTERNAL MODULE: ./utils/isClientSide.js
var isClientSide = __webpack_require__(15343);
;// CONCATENATED MODULE: ./utils/getTruncateText.js


const clearElementStyles = nodeObj => {
  nodeObj.style.display = 'block';
  nodeObj.style.position = 'absolute';
  nodeObj.style.maxHeight = 'initial';
  nodeObj.style.fontSize = '';
};
const getOffsetHeight = (nodeObj, maxNumberOfLines) => {
  if ((0,isClientSide/* default */.Z)() && nodeObj) {
    const fontSize = getComputedStyle(nodeObj, null).getPropertyValue('font-size');
    const lineHeight = getComputedStyle(nodeObj, null).getPropertyValue('line-height');
    const fontSizeNum = parseFloat(fontSize);
    const lineHeightDiff = Math.abs(parseFloat(lineHeight)) - Math.abs(fontSizeNum);
    return Math.ceil(fontSizeNum * maxNumberOfLines + lineHeightDiff * maxNumberOfLines);
  }
  return null;
};

/**
 * Get Truncate text from a dom when we can not use css.
 *
 * @param {string} idElement ID element in dom to do calculations.
 * @param {string} stringData String to be truncate.
 * @param {string} concatText Text to add at the end of truncate string.
 * @param {bool} isHideElement Set to true if element was used only for calculations and we do not need it to display.
 * @param {obj} height Height of element in mobile and desktop breakpoints.
 * @param {obj} reduce Reduction value. Used to reduce font size when text overflows. Values from 0 to 1.
 * @return {string}
 *   Text truncated.
 */

function getTruncateText(_ref) {
  let {
    idElement,
    stringData,
    concatText,
    isHideElement = true,
    reduce,
    maxNumberOfLines = 1
  } = _ref;
  const nodeObj = document.querySelector(idElement);
  if (!nodeObj) return {
    isTruncated: false,
    text: stringData
  };
  clearElementStyles(nodeObj, reduce);
  const offsetHeight = getOffsetHeight(nodeObj, maxNumberOfLines);
  // REDUCTION STEP
  let reduction = 0;
  if (reduce) {
    nodeObj.innerHTML = concatText ? "".concat(stringData, "<strong>").concat(concatText || '', "</strong>") : stringData;
    if (nodeObj.offsetHeight > offsetHeight) {
      const fontSize = parseInt(window.getComputedStyle(nodeObj, false).fontSize.replace('px', ''), 10);
      reduction = fontSize * reduce;
      nodeObj.style.fontSize = "".concat(reduction, "px");
    }
    if (nodeObj.offsetHeight <= offsetHeight) {
      nodeObj.innerHTML = stringData;
      if (isHideElement) {
        nodeObj.style.display = 'none';
      }
      return {
        isTruncated: false,
        text: stringData,
        reduction
      };
    }
  }
  // TRUNCATION STEP
  for (let i = stringData.length; i > 1; i--) {
    const slicedString = stringData.slice(0, i);
    nodeObj.innerHTML = concatText ? "".concat(slicedString, "<strong>").concat(concatText || '', "</strong>") : slicedString;
    if (nodeObj.offsetHeight <= offsetHeight) {
      if (isHideElement) {
        nodeObj.style.display = 'none';
      }
      nodeObj.innerHTML = '';
      const isTruncated = slicedString.length < stringData.length;
      const text = isTruncated ? "".concat(slicedString.trim().slice(0, -1).trim()).concat(isTruncated ? '... ' : '') : stringData;
      return {
        isTruncated,
        text,
        reduction
      };
    }
  }
  return {
    isTruncated: false,
    text: stringData,
    reduction
  };
}
;// CONCATENATED MODULE: ./components/TruncatedText/TruncatedText.js





const TruncatedText = _ref => {
  let {
    className,
    text,
    reduce,
    id,
    children,
    append = ''
  } = _ref;
  const [truncatedData, setTruncatedData] = (0,react.useState)({
    brandTitleTruncated: text,
    reduction: 0,
    isTruncated: false
  });
  const applyTruncation = () => {
    const result = getTruncateText({
      idElement: "#".concat(id),
      stringData: text,
      concatText: append,
      isHideElement: true,
      reduce,
      maxNumberOfLines: 2
    });
    setTruncatedData({
      brandTitleTruncated: result.text,
      reduction: result.reduction,
      isTruncated: result.isTruncated
    });
  };
  (0,react.useEffect)(() => {
    let onResize;
    if (typeof window !== 'undefined') {
      onResize = debounce_default()(applyTruncation, 50);
      window.addEventListener('resize', onResize);
      applyTruncation();
    }
    return () => {
      window.removeEventListener('resize', onResize);
    };
  }, []);
  const fallbackSize = truncatedData.reduction > 0 ? {
    fontSize: "".concat(truncatedData.reduction, "px")
  } : {};
  return /*#__PURE__*/react.createElement("div", {
    className: "truncatedText"
  }, /*#__PURE__*/react.createElement("div", {
    className: className,
    style: fallbackSize
  }, truncatedData.brandTitleTruncated, truncatedData.isTruncated ? children : ''), /*#__PURE__*/react.createElement("div", {
    id: id,
    className: className
  }));
};
TruncatedText.propTypes = {
  className: (prop_types_default()).string,
  text: (prop_types_default()).string,
  reduce: (prop_types_default()).number,
  id: (prop_types_default()).string,
  append: (prop_types_default()).string,
  children: (prop_types_default()).node
};
/* harmony default export */ var TruncatedText_TruncatedText = (TruncatedText);

/***/ }),

/***/ 43378:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ withUpcomingLiveData; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67294);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20688);
/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(61409);
/* harmony import */ var _lib_dayjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(57979);
/* harmony import */ var _utils_formatRelativePath__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(68455);
/* harmony import */ var _utils_getLiveProgress__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(99857);
/* harmony import */ var _utils_programmingTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(20057);
/* harmony import */ var _Search_SearchHit_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(39843);
/* harmony import */ var _actions_navigation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4997);
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(26566);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }












const DIRECT_TO_LIVE_THRESHOLD_DEFAULT = 120;
function withUpcomingLiveData(WrappedComponent) {
  class Component extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor(props) {
      super(props);
      _defineProperty(this, "onEventEnded", () => (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)().isAfter(this.localEndTime));
      _defineProperty(this, "getEventBeforeThreshold", () => {
        var _this$props$data;
        const threshold = this.props.directToLiveThreshold || ((_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.directToLiveThreshold) || DIRECT_TO_LIVE_THRESHOLD_DEFAULT;
        return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)().isAfter(this.localStartTime.subtract(threshold, 'seconds'));
      });
      _defineProperty(this, "handleClick", e => {
        const isSingleLiveEvent = this.isSingleLiveEvent();
        if (isSingleLiveEvent && this.state.isEventStarted || isSingleLiveEvent && !this.state.isEventStarted && this.getEventBeforeThreshold() || !isSingleLiveEvent && this.state.isEventStarted && this.getEventBeforeThreshold()) {
          this.props.router.push(this.getRedirectData());
          this.props.onClick(e, {
            isEventStarted: true
          });
          return false;
        }
        if (!isSingleLiveEvent && !this.state.isEventStarted || isSingleLiveEvent && !this.state.isEventStarted && !this.getEventBeforeThreshold()) {
          e.preventDefault();
          this.openModal();
          this.props.onClick(e, {
            isEventStarted: false
          });
          return false;
        }
        this.props.onClick(e);
        return true;
      });
      _defineProperty(this, "openModal", () => {
        var _this$props, _this$props$data2;
        const upcomingModal = ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$data2 = _this$props.data) === null || _this$props$data2 === void 0 ? void 0 : _this$props$data2.upcomingModal) || this.props.upcomingModal;
        if (upcomingModal) {
          var _this$props$data3, _this$props$data4, _this$props2, _this$props2$data, _this$props3;
          const tsStart = new Date((_this$props$data3 = this.props.data) === null || _this$props$data3 === void 0 ? void 0 : _this$props$data3.startTime).valueOf();
          const tsEnd = new Date((_this$props$data4 = this.props.data) === null || _this$props$data4 === void 0 ? void 0 : _this$props$data4.endTime).valueOf();
          const {
            analytics,
            shelfTitle,
            shelfIndex,
            itemIndex,
            sponsorName
          } = this.props;
          this.props.dispatch((0,_actions_navigation__WEBPACK_IMPORTED_MODULE_8__/* .setLiveCalloutStatus */ .J)(true, {
            ...upcomingModal.data,
            relativePath: ((_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$data = _this$props2.data) === null || _this$props2$data === void 0 ? void 0 : _this$props2$data.relativePath) || ((_this$props3 = this.props) === null || _this$props3 === void 0 ? void 0 : _this$props3.relativePath),
            tsStart,
            tsEnd,
            analytics: {
              ...analytics,
              ...upcomingModal.analytics,
              shelfTitle,
              shelfIndex,
              itemIndex,
              sponsorName
            }
          }));
        }
      });
      _defineProperty(this, "isSingleLiveEvent", () => {
        var _this$props$data5, _this$props$data5$con, _this$props$contentTy;
        return (0,_utils_programmingTypes__WEBPACK_IMPORTED_MODULE_6__/* .isSingleLiveEventType */ .RZ)(((_this$props$data5 = this.props.data) === null || _this$props$data5 === void 0 ? void 0 : (_this$props$data5$con = _this$props$data5.contentType) === null || _this$props$data5$con === void 0 ? void 0 : _this$props$data5$con.toLowerCase()) || ((_this$props$contentTy = this.props.contentType) === null || _this$props$contentTy === void 0 ? void 0 : _this$props$contentTy.toLowerCase()));
      });
      _defineProperty(this, "getRedirectData", () => {
        const {
          data,
          analytics,
          shelfIndex,
          shelfTitle,
          shelfMachineName,
          relativePath,
          itemIndex,
          location,
          machineName,
          streamAccessName,
          index,
          isDynamicLead
        } = this.props;
        if (this.isSingleLiveEvent()) {
          var _data$locationState;
          return {
            pathname: (0,_utils_formatRelativePath__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(data === null || data === void 0 ? void 0 : data.relativePath) || (0,_utils_formatRelativePath__WEBPACK_IMPORTED_MODULE_9__/* ["default"] */ .Z)(relativePath) || '/',
            state: {
              ...((_data$locationState = data === null || data === void 0 ? void 0 : data.locationState) !== null && _data$locationState !== void 0 ? _data$locationState : {}),
              entryPath: location.pathname
            }
          };
        }
        const brand = (data === null || data === void 0 ? void 0 : data.machineName) || machineName;
        const callsign = (data === null || data === void 0 ? void 0 : data.streamAccessName) || streamAccessName;
        const pid = (data === null || data === void 0 ? void 0 : data.pid) || this.props.pid;
        if (brand && callsign) {
          var _analytics$brand;
          return {
            pathname: '/live',
            query: {
              brand,
              callsign
            },
            state: {
              shelfTitle: isDynamicLead ? 'Dynamic Lead' : shelfTitle,
              shelfIndex: isDynamicLead ? 1 : shelfIndex,
              itemIndex: itemIndex || index,
              entryPath: location.pathname,
              shelfMachineName,
              entityAnalytics: {
                'Video ID': (analytics === null || analytics === void 0 ? void 0 : analytics.mpxGuid) || (data === null || data === void 0 ? void 0 : data.mpxGuid) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_10__.NONE,
                Show: (analytics === null || analytics === void 0 ? void 0 : analytics.series) || (data === null || data === void 0 ? void 0 : data.seriesShortTitle) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_10__.NONE,
                Season: (analytics === null || analytics === void 0 ? void 0 : analytics.seasonNumber) || (data === null || data === void 0 ? void 0 : data.seasonNumber) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_10__.NONE,
                Brand: (analytics === null || analytics === void 0 ? void 0 : (_analytics$brand = analytics.brand) === null || _analytics$brand === void 0 ? void 0 : _analytics$brand.title) || _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_10__.NONE
              },
              pid
            }
          };
        }
        return {
          pathname: '/live',
          state: {
            pid
          }
        };
      });
      let isEventStarted = false;
      if (props.isUpcomingType) {
        var _props$data, _props$data2;
        this.localStartTime = _lib_dayjs__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.utc((props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.startTime) || props.startTime).local();
        this.localEndTime = _lib_dayjs__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.utc((props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.endTime) || props.endTime).local();
        isEventStarted = (0,_Search_SearchHit_util__WEBPACK_IMPORTED_MODULE_7__/* .getEventStarted */ .Vk)(this.localStartTime);
        const isEventEnded = this.onEventEnded();
        props.getSlideState && !isEventEnded && props.getSlideState(isEventStarted, props.index);
      }
      this.state = {
        isEventStarted
      };
    }
    render() {
      var _this$props$data6, _this$props$data7;
      const startTime = ((_this$props$data6 = this.props.data) === null || _this$props$data6 === void 0 ? void 0 : _this$props$data6.startTime) || this.props.startTime;
      const endTime = ((_this$props$data7 = this.props.data) === null || _this$props$data7 === void 0 ? void 0 : _this$props$data7.endTime) || this.props.endTime;
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrappedComponent, _extends({}, this.props, this.props.isUpcomingType ? {
        isEventStarted: this.state.isEventStarted,
        localStartTime: this.localStartTime,
        localEndTime: this.localEndTime,
        onClick: this.handleClick,
        percentViewed: (0,_utils_getLiveProgress__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startTime, endTime)
      } : {}, {
        destination: this.getRedirectData()
      }));
    }
  }
  _defineProperty(Component, "propTypes", {
    startTime: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string),
    endTime: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string)
  });
  Component.displayName = "WithUpcomingLiveData(".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', ")");
  return (0,react_redux__WEBPACK_IMPORTED_MODULE_2__/* .connect */ .$j)((state, ownProps) => {
    var _ownProps$data, _ownProps$data2;
    const startTime = ((_ownProps$data = ownProps.data) === null || _ownProps$data === void 0 ? void 0 : _ownProps$data.startTime) || ownProps.startTime;
    const endTime = ((_ownProps$data2 = ownProps.data) === null || _ownProps$data2 === void 0 ? void 0 : _ownProps$data2.endTime) || ownProps.endTime;
    const isLive = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(ownProps.cta, ['data', 'destination'], '').includes('/live?');
    return {
      percentViewed: ownProps.isUpcomingType || isLive ? (0,_utils_getLiveProgress__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(startTime, endTime) : ownProps.percentViewed || 0
    };
  })((0,react_router__WEBPACK_IMPORTED_MODULE_3__/* .withRouter */ .EN)(Component));
}

/***/ }),

/***/ 71496:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  IW: function() { return /* binding */ PERCENT_COMPLETE; },
  d0: function() { return /* binding */ PERCENT_INITIAL; },
  ZP: function() { return /* binding */ utils_saveVideoWatched; },
  nr: function() { return /* binding */ getStartPosition; }
});

// EXTERNAL MODULE: ./webpack-alias/park-logger.js
var park_logger = __webpack_require__(67788);
var park_logger_default = /*#__PURE__*/__webpack_require__.n(park_logger);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./lib/dayjs.js
var dayjs = __webpack_require__(57979);
// EXTERNAL MODULE: ./lib/park-api.js
var park_api = __webpack_require__(66956);
// EXTERNAL MODULE: ./actions/client.js + 1 modules
var client = __webpack_require__(67217);
// EXTERNAL MODULE: ./actions/watches.js
var watches = __webpack_require__(34780);
// EXTERNAL MODULE: ./actions/pages.js
var pages = __webpack_require__(18045);
// EXTERNAL MODULE: ./utils/getBrandFromUrlParam.js
var getBrandFromUrlParam = __webpack_require__(67689);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
;// CONCATENATED MODULE: ./utils/recordVideoWatch.js



function recordVideoWatch(payload, watchedId, isPersonalizationEnabled) {
  return new Promise((resolve, reject) => {
    try {
      const promise = isPersonalizationEnabled ? mParticle/* default */.ZP.getId() : Promise.resolve('0');
      promise.then(mParticleId => {
        payload.data.relationships.user = {
          data: {
            type: 'users',
            id: mParticleId
          }
        };
        // Check current time watched
        const typeAPI = watchedId ? (0,park_api/* parkAPIPatch */.tC)("users/".concat(mParticleId, "/watches/").concat(watchedId), payload) : (0,park_api/* parkAPIPost */.gB)("users/".concat(mParticleId, "/watches"), payload);
        typeAPI.then(resp => {
          resolve(resp);
        }).catch(err => {
          park_logger_default().error(err);
          reject(err);
        });
      });
    } catch (err) {
      park_logger_default().error(err);
      reject(err);
    }
  });
}
// EXTERNAL MODULE: ./fetches/homePage.js
var homePage = __webpack_require__(93253);
// EXTERNAL MODULE: ./fetches/brandPage.js
var brandPage = __webpack_require__(71273);
;// CONCATENATED MODULE: ./components/VideoPlayerV2/utils/saveVideoWatched.js











const SEC_VIDEO_IS_SAVED = config/* default */.Z.get('msVideoIsSaved') / 1000;
const PERCENT_INITIAL = 0.05;
const PERCENT_COMPLETE = 0.95;
const PEACOCK_PATH = '/networks/peacock';
const PEACOCK_BRAND = 'peacock';
const getStartPosition = _ref => {
  let {
    duration,
    percentViewed
  } = _ref;
  return percentViewed > 0 && percentViewed <= PERCENT_COMPLETE ? duration * percentViewed : 0;
};
const getCurrentSaveTime = positionInSeconds => Math.ceil(positionInSeconds / SEC_VIDEO_IS_SAVED);
const saveVideoWatched = async function (_ref2) {
  let {
    brandDisplayTitle,
    dispatch,
    isDayZero,
    isPersonalizationEnabled,
    mpxGuid,
    position,
    duration,
    seriesUrlAlias,
    watchId,
    watchedTime
  } = _ref2;
  let saveWatchedNow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  let skipPageClear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  const percentViewed = Number((position / duration).toFixed(2));
  const currentTime = getCurrentSaveTime(position);
  const isInitialPlayback = position === 0 && currentTime === 0;
  if (isInitialPlayback) {
    return {
      watchedTime: getCurrentSaveTime(position + 0.5),
      watchId,
      isProcessing: false
    };
  }
  if (!saveWatchedNow && (!mpxGuid || percentViewed >= PERCENT_COMPLETE || currentTime === watchedTime)) return {};
  const videoId = await (0,park_api/* getVideoId */.gJ)(mpxGuid);
  const payload = {
    data: {
      type: 'watches',
      attributes: {
        dateTimeWatched: (0,dayjs/* default */.Z)().format(),
        percentViewed
      },
      relationships: {
        video: {
          data: {
            type: 'videos',
            id: videoId
          }
        }
      }
    }
  };
  if (!watchId) {
    payload.data.attributes.created = (0,dayjs/* default */.Z)().format();
  }
  isPersonalizationEnabled && isDayZero && dispatch((0,client/* setDayZero */.Fk)(false));
  const newWatchId = await recordVideoWatch(payload, watchId, isPersonalizationEnabled).then(resp => {
    var _resp$data$meta$homep, _resp$data, _resp$data$meta, _resp$data$data$id, _resp$data2, _resp$data2$data, _resp$data3;
    // 1) Clear out placeholders on homepage so they will be refetched.
    // 2) Refresh the series page to ensure Smart Tile is accurate.
    // 3) Clear featured section on brand landing page so it will be refetched.
    // 4) If NBC content, refresh the Peacock brand landing page too.
    const delay = (_resp$data$meta$homep = (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : (_resp$data$meta = _resp$data.meta) === null || _resp$data$meta === void 0 ? void 0 : _resp$data$meta.homepagePrefetch) !== null && _resp$data$meta$homep !== void 0 ? _resp$data$meta$homep : 7;
    if (seriesUrlAlias) {
      dispatch((0,pages/* delayFetchPage */.Xh)({
        name: seriesUrlAlias,
        pathname: "/".concat(seriesUrlAlias),
        type: 'TITLE_V2',
        delay
      }));
    }
    if (!skipPageClear) {
      dispatch((0,pages/* clearPage */.rs)('/'));
      (0,homePage/* delayedHomePageFetch */.$u)();
    }

    // Fetch brand page to update featured section
    const brand = brandDisplayTitle === null || brandDisplayTitle === void 0 ? void 0 : brandDisplayTitle.toLowerCase();
    const networkName = (0,getBrandFromUrlParam/* default */.Z)(brand, 'networkName');
    if (networkName) {
      const networkPath = "/networks/".concat(networkName);
      dispatch((0,pages/* clearPage */.rs)(networkPath));
      (0,brandPage/* delayedBrandPageFetch */.sK)({
        pathname: networkPath,
        brand: networkName
      });

      // Peacock is using NBC content, too
      if (networkName === 'nbc') {
        dispatch((0,pages/* clearPage */.rs)(PEACOCK_PATH));
        (0,brandPage/* delayedBrandPageFetch */.sK)({
          pathname: PEACOCK_PATH,
          brand: PEACOCK_BRAND
        });
      }
    }
    const id = (_resp$data$data$id = resp === null || resp === void 0 ? void 0 : (_resp$data2 = resp.data) === null || _resp$data2 === void 0 ? void 0 : (_resp$data2$data = _resp$data2.data) === null || _resp$data2$data === void 0 ? void 0 : _resp$data2$data.id) !== null && _resp$data$data$id !== void 0 ? _resp$data$data$id : resp === null || resp === void 0 ? void 0 : (_resp$data3 = resp.data) === null || _resp$data3 === void 0 ? void 0 : _resp$data3.id;
    park_logger_default().log("Success: ".concat(percentViewed, "% watched of video: ").concat(mpxGuid));
    return id;
  }).catch(() => watchId);
  // Immediately update the local Redux state
  dispatch((0,watches/* storeWatch */.S4)(videoId, percentViewed));
  return {
    watchedTime: currentTime,
    watchId: newWatchId !== null && newWatchId !== void 0 ? newWatchId : watchId,
    isProcessing: false
  };
};
/* harmony default export */ var utils_saveVideoWatched = (saveVideoWatched);

/***/ }),

/***/ 39077:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ WithHelpDeskLinks; }
});

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 14 modules
var es = __webpack_require__(20688);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./package.json
var package_0 = __webpack_require__(4147);
;// CONCATENATED MODULE: ./utils/getHelpDeskLink.js




const APP_NAME = config/* default */.Z.get('app.appName');
const getDevice = (userAgent, isMobile) => {
  let device = isMobile ? 'Mobile' : 'PC';
  const items = {
    Android: /Android/i,
    'Chrome OS': /CrOS/i,
    iPad: /iPad/i,
    iPhone: /iPhone/i,
    macOS: /Macintosh/i,
    Windows: /IEMobile|Windows/i
  };
  Object.keys(items).map(data => userAgent.match(items[data]) && (device = data));
  return device;
};
/**
 * Return url link for support and FAQ help desk.
 *
 * @param {object} props
 *   Properties.
 * @param {boolean} isSupportLink
 *   Site branc.
 *
 * @return {string} encoded user params.
 */
function getHelpDeskLink(props) {
  const helpDeskUrl = {
    support: "https://help.nbc.com/hc/".concat(props.language === 'es' ? 'es' : 'en-us', "/requests/new?brand=").concat(APP_NAME, "&_q="),
    faq: "https://help.nbc.com/hc/".concat(props.language === 'es' ? 'es' : 'en-us', "?brand=").concat(APP_NAME, "&_q=")
  };
  const agent = window && window.navigator || {};
  const connection = agent.connection || agent.mozConnection || agent.webkitConnection || {};
  const getMparticleId = mParticle/* default */.ZP.getId().then(id => id !== '0' ? id : 'None').catch(() => 'None');
  const getMparticleSessionId = mParticle/* default */.ZP.getSession().then(function () {
    let sessionId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'None';
    return sessionId;
  }).catch(() => 'None');
  return Promise.all([getMparticleId, getMparticleSessionId]).then(_ref => {
    let [mParticleId, mParticleSessionId] = _ref;
    const params = window.btoa(JSON.stringify({
      'App Version': package_0.version,
      Device: getDevice(agent.userAgent, props.isMobile),
      'OS Version': agent.oscpu || 'None',
      Brand: props.brandKey || APP_NAME,
      'Call Sign': props.geoChannel || 'None',
      'Connection Type': connection.effectiveType || 'None',
      MVPD: props.mvpd || 'None',
      'Support ID': mParticleId,
      'SessionID ': mParticleSessionId || 'None',
      RecentWatchedVideo: props.previousVideo || 'None'
    }));
    helpDeskUrl.support = "".concat(helpDeskUrl.support).concat(params);
    helpDeskUrl.faq = "".concat(helpDeskUrl.faq).concat(params);
    return helpDeskUrl;
  }).catch(() => helpDeskUrl);
}
/* harmony default export */ var utils_getHelpDeskLink = (getHelpDeskLink);
;// CONCATENATED MODULE: ./components/WithHelpDeskLinks/WithHelpDeskLinks.js
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




function WithHelpDeskLinks(WrappedComponent) {
  class Component extends react.Component {
    constructor(props) {
      super(props);
      _defineProperty(this, "updateLinks", () => utils_getHelpDeskLink(this.props).then(helpDeskLinks => this.mounted && this.setState({
        helpDeskLinks
      })));
      this.state = {
        helpDeskLinks: {
          support: '',
          faq: ''
        }
      };
      this.mounted = true;
    }
    componentDidMount() {
      this.updateLinks();
    }
    componentDidUpdate(prevProps) {
      if (this.props.geoChannel && this.props.geoChannel !== prevProps.geoChannel) {
        this.updateLinks();
      }
    }
    componentWillUnmount() {
      this.mounted = false;
    }
    render() {
      return /*#__PURE__*/react.createElement(WrappedComponent, _extends({
        helpDeskLinks: this.state.helpDeskLinks
      }, this.props));
    }
  }
  Component.meta = WrappedComponent.meta;
  Component.analytics = WrappedComponent.analytics;
  Component.WrappedComponent = WrappedComponent.WrappedComponent;
  Component.displayName = "WithHelpDeskLinks(".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', ")");
  return (0,es/* connect */.$j)(state => ({
    geoChannel: get_default()(state, ['client', 'nbc', 'geoChannel']),
    language: get_default()(state, ['client', 'language'])
  }))(Component);
}

/***/ }),

/***/ 71273:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LJ: function() { return /* binding */ clientFetch; },
/* harmony export */   Pk: function() { return /* binding */ serverFetch; },
/* harmony export */   sK: function() { return /* binding */ delayedBrandPageFetch; }
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _actions_pages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18045);
/* harmony import */ var _utils_isClientSide__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(15343);
/* harmony import */ var _common_getBffVariables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92552);
/* harmony import */ var _common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19527);
/* harmony import */ var _common_fetchBonanzaMeta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(72440);






const FAVORITES_DELAY = 10000; // 10 second delay
const isClient = (0,_utils_isClientSide__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
const brandPageTimeouts = {};
function getPageValues(params) {
  return {
    name: params === null || params === void 0 ? void 0 : params.brandPage,
    type: 'BRAND_LANDING'
  };
}
async function serverFetch(_ref) {
  var _props$location, _client$geo, _client$geo2, _client$geo2$nbc, _client$geo3, _client$geo3$telemund, _client$geo4;
  let {
    props,
    store,
    isFresh
  } = _ref;
  const state = store === null || store === void 0 ? void 0 : store.getState();
  const dispatch = store === null || store === void 0 ? void 0 : store.dispatch;
  if (!state || !dispatch) {
    throw new Error('Could not connect to Redux');
  }
  const client = state === null || state === void 0 ? void 0 : state.client;
  const pathname = props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.pathname;
  const pageValues = getPageValues(props === null || props === void 0 ? void 0 : props.params);
  const serverVariables = (0,_common_getBffVariables__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
    pathname,
    userId: '-1',
    name: pageValues === null || pageValues === void 0 ? void 0 : pageValues.name,
    type: pageValues === null || pageValues === void 0 ? void 0 : pageValues.type,
    variables: {
      timeZone: client === null || client === void 0 ? void 0 : (_client$geo = client.geo) === null || _client$geo === void 0 ? void 0 : _client$geo.timeZone,
      nbcAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo2 = client.geo) === null || _client$geo2 === void 0 ? void 0 : (_client$geo2$nbc = _client$geo2.nbc) === null || _client$geo2$nbc === void 0 ? void 0 : _client$geo2$nbc.geoChannel,
      telemundoAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo3 = client.geo) === null || _client$geo3 === void 0 ? void 0 : (_client$geo3$telemund = _client$geo3.telemundo) === null || _client$geo3$telemund === void 0 ? void 0 : _client$geo3$telemund.geoChannel,
      nationalBroadcastType: client === null || client === void 0 ? void 0 : (_client$geo4 = client.geo) === null || _client$geo4 === void 0 ? void 0 : _client$geo4.nationalBroadcastType
    },
    state
  });
  if (!isFresh) {
    // Non-fresh users will get the spinner instead of a prerendered page
    // so it doesn't make sense to do a full data load.
    // Instead, just load enough data to populate the meta header tags for SEO.
    const meta = await (0,_common_fetchBonanzaMeta__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
      pathname,
      variables: serverVariables
    });
    await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeLazyPage */ .jl)({
      pathname,
      payload: meta,
      variables: serverVariables,
      source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.SERVER
    }));
    return;
  }
  const [pagePromise, featuredPromise] = await (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_3__/* .fetchFeaturedAndBonanza */ .E)({
    pathname,
    bonanzaVariables: serverVariables,
    featuredVariables: serverVariables
  });
  const {
    pageData,
    featuredSectionData,
    featuredSectionError
  } = (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_3__/* .resolveFeaturedAndBonanza */ .u)({
    pagePromise,
    featuredPromise
  });
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeLazyPage */ .jl)({
    pathname,
    payload: pageData,
    variables: serverVariables,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.SERVER
  }));
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeSubpageResponse */ .h0)({
    pathname,
    payload: featuredSectionData || {
      error: featuredSectionError
    },
    request: {
      variables: serverVariables
    },
    type: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .subpageTypes */ .ag.FEATURED_SECTION,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.SERVER
  }));
}
async function clientFetch(_ref2) {
  var _ref3, _window, _client$geo5, _client$geo6, _client$geo6$nbc, _client$geo7, _client$geo7$telemund, _client$geo8;
  let {
    params,
    location,
    store
  } = _ref2;
  if (!isClient) {
    throw new Error('Attempted to perform client-side fetch on the server');
  }
  const {
    getState,
    dispatch
  } = (_ref3 = store !== null && store !== void 0 ? store : (_window = window) === null || _window === void 0 ? void 0 : _window.TheStore) !== null && _ref3 !== void 0 ? _ref3 : {};
  if (!getState || !dispatch) {
    return;
  }
  const state = getState();
  const client = state === null || state === void 0 ? void 0 : state.client;
  const pathname = location === null || location === void 0 ? void 0 : location.pathname;

  // clear existing timeouts
  const prevTimeout = brandPageTimeouts[pathname];
  prevTimeout && clearTimeout(prevTimeout);
  const pageValues = getPageValues(params);
  const clientVariables = (0,_common_getBffVariables__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
    pathname,
    userId: client === null || client === void 0 ? void 0 : client.bffMParticleId,
    name: pageValues === null || pageValues === void 0 ? void 0 : pageValues.name,
    type: pageValues === null || pageValues === void 0 ? void 0 : pageValues.type,
    variables: {
      timeZone: client === null || client === void 0 ? void 0 : (_client$geo5 = client.geo) === null || _client$geo5 === void 0 ? void 0 : _client$geo5.timeZone,
      nbcAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo6 = client.geo) === null || _client$geo6 === void 0 ? void 0 : (_client$geo6$nbc = _client$geo6.nbc) === null || _client$geo6$nbc === void 0 ? void 0 : _client$geo6$nbc.geoChannel,
      telemundoAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo7 = client.geo) === null || _client$geo7 === void 0 ? void 0 : (_client$geo7$telemund = _client$geo7.telemundo) === null || _client$geo7$telemund === void 0 ? void 0 : _client$geo7$telemund.geoChannel,
      nationalBroadcastType: client === null || client === void 0 ? void 0 : (_client$geo8 = client.geo) === null || _client$geo8 === void 0 ? void 0 : _client$geo8.nationalBroadcastType
    },
    state
  });
  const [pagePromise, featuredPromise] = await (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_3__/* .fetchFeaturedAndBonanza */ .E)({
    pathname,
    bonanzaVariables: clientVariables,
    featuredVariables: clientVariables
  });
  const {
    pageData,
    featuredSectionData,
    featuredSectionError
  } = (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_3__/* .resolveFeaturedAndBonanza */ .u)({
    pagePromise,
    featuredPromise
  });
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeLazyPage */ .jl)({
    pathname,
    payload: pageData,
    variables: clientVariables,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.CLIENT
  }));
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeSubpageResponse */ .h0)({
    pathname,
    payload: featuredSectionData || {
      error: featuredSectionError
    },
    request: {
      variables: clientVariables
    },
    type: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .subpageTypes */ .ag.FEATURED_SECTION,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.CLIENT
  }));
}
function delayedBrandPageFetch(_ref4) {
  let {
    pathname,
    brand,
    delay = FAVORITES_DELAY
  } = _ref4;
  if (!isClient) {
    // not allowed on server
    throw new Error('Attempted to make a delayed client fetch on the server!');
  }

  // clear existing timeouts
  const prevTimeout = brandPageTimeouts[pathname];
  prevTimeout && clearTimeout(prevTimeout);
  const newTimeout = setTimeout(() => {
    clientFetch({
      params: {
        brandPage: brand
      },
      location: {
        pathname
      }
    });
  }, delay);
  brandPageTimeouts[pathname] = newTimeout;
}

/***/ }),

/***/ 72440:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ fetchBonanzaMeta; }
/* harmony export */ });
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67641);
/* harmony import */ var _utils_HTTPError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80034);



const QUERY_NAME = 'bonanzaMeta';
async function fetchBonanzaMeta(_ref) {
  var _payload$data, _payload$data$data, _payload$data2, _payload$data2$errors;
  let {
    variables,
    pathname,
    requiredData = []
  } = _ref;
  const payload = await (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_1__/* .gql */ .Ps)({
    query: QUERY_NAME,
    variables: {
      ...variables,
      queryName: 'bonanzaPage',
      appVersion: (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_1__/* .getAppVersion */ .Sf)(true)
    }
  });
  const data = payload === null || payload === void 0 ? void 0 : (_payload$data = payload.data) === null || _payload$data === void 0 ? void 0 : (_payload$data$data = _payload$data.data) === null || _payload$data$data === void 0 ? void 0 : _payload$data$data.bonanzaPage;

  // No data and errors means 404 page
  if (!data && payload !== null && payload !== void 0 && (_payload$data2 = payload.data) !== null && _payload$data2 !== void 0 && (_payload$data2$errors = _payload$data2.errors) !== null && _payload$data2$errors !== void 0 && _payload$data2$errors.length) {
    throw new _utils_HTTPError__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Friendship data errors found for ".concat(pathname), 404, pathname);
  }
  // Data is fine, but required data is not coming in response
  if (data && requiredData.length) {
    requiredData.map(path => {
      const requiredPathData = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(data, path);
      if (!requiredPathData) {
        throw new _utils_HTTPError__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Required data not found for ".concat(pathname), 200, pathname);
      }
      return true;
    });
  }
  return data;
}

/***/ }),

/***/ 74317:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ fetchBonanzaPage; }
/* harmony export */ });
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67641);
/* harmony import */ var _utils_HTTPError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80034);



const QUERY_NAME = 'bonanzaPage';
async function fetchBonanzaPage(_ref) {
  var _payload$data, _payload$data$data, _payload$data2, _payload$data2$errors;
  let {
    variables,
    pathname,
    requiredData = []
  } = _ref;
  const payload = await (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_1__/* .gql */ .Ps)({
    query: QUERY_NAME,
    variables: {
      ...variables,
      appVersion: (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_1__/* .getAppVersion */ .Sf)(true)
    }
  });
  const data = payload === null || payload === void 0 ? void 0 : (_payload$data = payload.data) === null || _payload$data === void 0 ? void 0 : (_payload$data$data = _payload$data.data) === null || _payload$data$data === void 0 ? void 0 : _payload$data$data.bonanzaPage;

  // No data and errors means 404 page
  if (!data && payload !== null && payload !== void 0 && (_payload$data2 = payload.data) !== null && _payload$data2 !== void 0 && (_payload$data2$errors = _payload$data2.errors) !== null && _payload$data2$errors !== void 0 && _payload$data2$errors.length) {
    throw new _utils_HTTPError__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Friendship data errors found for ".concat(pathname), 404, pathname);
  }
  // Data is fine, but required data is not coming in response
  if (data && requiredData.length) {
    requiredData.map(path => {
      const requiredPathData = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(data, path);
      if (!requiredPathData) {
        throw new _utils_HTTPError__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z("Required data not found for ".concat(pathname), 200, pathname);
      }
      return true;
    });
  }
  return data;
}

/***/ }),

/***/ 19527:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  E: function() { return /* binding */ fetchFeaturedAndBonanza; },
  u: function() { return /* binding */ resolveFeaturedAndBonanza; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/esnext.promise.all-settled.js
var esnext_promise_all_settled = __webpack_require__(218);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./webpack-alias/park-logger.js
var park_logger = __webpack_require__(67788);
var park_logger_default = /*#__PURE__*/__webpack_require__.n(park_logger);
// EXTERNAL MODULE: ./lib/friendship.js + 29 modules
var friendship = __webpack_require__(67641);
;// CONCATENATED MODULE: ./fetches/common/fetchFeaturedSection.js

const QUERY_NAME = 'featuredSection';
async function fetchFeaturedSection(variables) {
  var _payload$data, _payload$data$data;
  const payload = await (0,friendship/* gql */.Ps)({
    query: QUERY_NAME,
    variables: {
      appVersion: (0,friendship/* getAppVersion */.Sf)(true),
      ...variables
    }
  });
  return payload === null || payload === void 0 ? void 0 : (_payload$data = payload.data) === null || _payload$data === void 0 ? void 0 : (_payload$data$data = _payload$data.data) === null || _payload$data$data === void 0 ? void 0 : _payload$data$data.featuredSection;
}
// EXTERNAL MODULE: ./fetches/common/fetchBonanzaPage.js
var fetchBonanzaPage = __webpack_require__(74317);
;// CONCATENATED MODULE: ./fetches/common/fetchFeaturedAndBonanza.js





const FULFILLED = 'fulfilled';
function fetchFeaturedAndBonanza(_ref) {
  let {
    pathname,
    bonanzaVariables,
    featuredVariables
  } = _ref;
  const bonanzaRequest = (0,fetchBonanzaPage/* default */.Z)({
    pathname,
    variables: bonanzaVariables
  });
  const featuredRequest = fetchFeaturedSection(featuredVariables);
  return Promise.allSettled([bonanzaRequest, featuredRequest]);
}
function resolveFeaturedAndBonanza(_ref2) {
  let {
    pagePromise,
    featuredPromise
  } = _ref2;
  const isPageSuccessful = (pagePromise === null || pagePromise === void 0 ? void 0 : pagePromise.status) === FULFILLED;
  const isFeaturedSuccessful = (featuredPromise === null || featuredPromise === void 0 ? void 0 : featuredPromise.status) === FULFILLED;
  const pageData = pagePromise.value;
  if (!isPageSuccessful) {
    throw new Error(pagePromise.reason);
  } else if (isPageSuccessful && !pageData) {
    throw new Error('Could not fetch page data');
  }
  const featuredSectionData = isFeaturedSuccessful && featuredPromise.value || null;
  const featuredSectionError = 'Could not fetch featured data';
  if (!isFeaturedSuccessful) {
    park_logger_default().error(featuredPromise === null || featuredPromise === void 0 ? void 0 : featuredPromise.reason);
  } else if (isFeaturedSuccessful && !featuredSectionData) {
    park_logger_default().error(featuredSectionError);
  }
  return {
    pageData,
    featuredSectionData,
    featuredSectionError
  };
}

/***/ }),

/***/ 52596:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_geoServices__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28176);
/* harmony import */ var _lib_AdobePassAccessEnabler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(16381);
/* harmony import */ var _utils_getBrandFromUrlParam__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67689);




const NBC_OLYMPICS = 'nbc-olympics';
const getZipcodesByMvpdID = async adobeMvpdId => {
  let serviceZip = null;
  let encryptedZip = null;
  if (adobeMvpdId) {
    const [serviceZips, encryptedServiceZip] = await _lib_AdobePassAccessEnabler__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.getMetadata(['zip', 'encryptedZip']);
    serviceZip = Array.isArray(serviceZips) ? serviceZips[0] : serviceZips;
    encryptedZip = encryptedServiceZip !== null && encryptedServiceZip !== void 0 ? encryptedServiceZip : null;
  }
  return serviceZip || encryptedZip || null;
};
const fetchGeoData = async _ref => {
  let {
    brand,
    channelName = null,
    ip = null,
    contentType = 'live',
    pid = null,
    adobeMvpdId = null,
    channelId = null
  } = _ref;
  const serviceZip = await getZipcodesByMvpdID(adobeMvpdId);
  const networkBrand = brand === NBC_OLYMPICS ? channelId : brand;
  try {
    const {
      isRSN
    } = (0,_utils_getBrandFromUrlParam__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(brand) || {};
    if (adobeMvpdId && isRSN && !serviceZip) {
      throw new Error('This video is not available', {
        cause: 'rsnMissingZip'
      });
    }
    const payload = await (0,_lib_geoServices__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP)(networkBrand, {
      adobeMvpdId: adobeMvpdId !== null && adobeMvpdId !== void 0 ? adobeMvpdId : null,
      serviceZip,
      device: 'web',
      ...(channelName ? {
        channelName
      } : {})
    }, {
      ip,
      contentType,
      pid,
      isRSN
    });
    return payload;
  } catch (err) {
    throw err;
  }
};
/* harmony default export */ __webpack_exports__.Z = (fetchGeoData);

/***/ }),

/***/ 20924:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   q: function() { return /* binding */ fetchPlaceholderSections; }
/* harmony export */ });
/* unused harmony export fetchData */
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(67641);
/* harmony import */ var _actions_pages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18045);
/* harmony import */ var _getBffVariables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(92552);



const QUERY_NAME = 'componentsForPlaceholders';
const PLACEHOLDER_SECTION = 'PlaceholderSection';
const validateResponse = response => {
  var _response$data$compon, _response$data;
  const {
    components,
    placeholderRanges
  } = (_response$data$compon = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.componentsForPlaceholders) !== null && _response$data$compon !== void 0 ? _response$data$compon : {};
  return Array.isArray(components) && Array.isArray(placeholderRanges);
};
const fetchData = async variables => {
  const {
    data
  } = await (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_0__/* .gql */ .Ps)({
    query: QUERY_NAME,
    variables: {
      ...variables
    }
  });
  const isValid = validateResponse(data);
  if (!isValid) {
    throw new Error('Invalid componentsForPlaceholders response');
  }
  return data;
};
const findPlaceholderSections = function () {
  let sections = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  const placeholderSections = {};
  const componentConfigs = [];
  sections.forEach(section => {
    var _section$data, _section$data$queryVa, _section$data2;
    if ((section === null || section === void 0 ? void 0 : section.component) !== PLACEHOLDER_SECTION) {
      return;
    }
    const placeholderConfigs = (_section$data = section.data) === null || _section$data === void 0 ? void 0 : (_section$data$queryVa = _section$data.queryVariables) === null || _section$data$queryVa === void 0 ? void 0 : _section$data$queryVa.componentConfigs;
    const placeholderName = (_section$data2 = section.data) === null || _section$data2 === void 0 ? void 0 : _section$data2.machineName;
    if (!placeholderConfigs || !placeholderConfigs.length || !placeholderName) {
      // we can't fill this component without a config or a placeholder name
      return;
    }
    placeholderSections[placeholderName] = section;
    placeholderConfigs.forEach(componentConfig => {
      componentConfigs.push({
        placeholderName,
        componentConfig
      });
    });
  });
  return {
    placeholderSections,
    componentConfigs
  };
};
const mergePlaceholderSections = _ref => {
  var _placeholderData$data;
  let {
    placeholderSections,
    componentConfigs,
    placeholderData
  } = _ref;
  const filledPlaceholders = {};
  const {
    placeholderRanges,
    components
  } = placeholderData === null || placeholderData === void 0 ? void 0 : (_placeholderData$data = placeholderData.data) === null || _placeholderData$data === void 0 ? void 0 : _placeholderData$data.componentsForPlaceholders;
  placeholderRanges.forEach((_ref2, rangeIdx) => {
    let {
      range
    } = _ref2;
    // find the original componentConfig associated with each placeholderRange
    const config = rangeIdx < componentConfigs.length ? componentConfigs[rangeIdx] : null;
    const placeholderName = config === null || config === void 0 ? void 0 : config.placeholderName;
    // get the placeholder section by looking it up using the placeholder name
    const placeholderSection = placeholderName ? placeholderSections[placeholderName] : null;
    if (!placeholderSection || range.length !== 2) {
      // can't map it back to the BFF page response or can't parse the range
      return;
    }

    // Use a more specific key to store in redux to
    // prevent duplicate shelves of the same machineName
    const filledPlaceholdersName = "".concat(placeholderName, "-").concat(rangeIdx);
    // get all the components for this placeholder section
    if (!filledPlaceholders[filledPlaceholdersName]) {
      filledPlaceholders[filledPlaceholdersName] = [];
    }
    for (let componentIdx = range[0]; componentIdx < range[1]; componentIdx++) {
      const component = components[componentIdx];
      if (component) {
        filledPlaceholders[filledPlaceholdersName].push(component);
      }
    }
  });
  return filledPlaceholders;
};
const fetchPlaceholderSections = async _ref3 => {
  var _window, _store$getState;
  let {
    variables = {},
    pathname,
    sections,
    dispatch
  } = _ref3;
  const {
    placeholderSections,
    componentConfigs
  } = findPlaceholderSections(sections);
  const store = (_window = window) === null || _window === void 0 ? void 0 : _window.TheStore;
  const state = store === null || store === void 0 ? void 0 : (_store$getState = store.getState) === null || _store$getState === void 0 ? void 0 : _store$getState.call(store);
  const bffVariables = (0,_getBffVariables__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)({
    name: variables.name,
    type: variables.type,
    userId: variables.userId,
    variables: variables.variables,
    state
  });
  if (componentConfigs.length === 0) {
    // no placeholders to fetch
    dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeSubpageResponse */ .h0)({
      pathname,
      payload: [],
      request: {
        variables: {
          ...bffVariables,
          componentConfigs: []
        }
      },
      type: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .subpageTypes */ .ag.PLACEHOLDER_SHELVES,
      source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.CLIENT
    }));
    return;
  }
  const placeholderVariables = {
    ...bffVariables,
    componentConfigs: componentConfigs.map(section => section.componentConfig),
    appVersion: (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_0__/* .getAppVersion */ .Sf)(true)
  };
  try {
    const placeholderData = await fetchData(placeholderVariables);
    const filledPlaceholders = mergePlaceholderSections({
      placeholderSections,
      componentConfigs,
      placeholderData
    });
    dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeSubpageResponse */ .h0)({
      pathname,
      payload: filledPlaceholders,
      request: {
        variables: placeholderVariables
      },
      type: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .subpageTypes */ .ag.PLACEHOLDER_SHELVES,
      source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.CLIENT
    }));
  } catch {
    // something went wrong - collapse the placeholder shelves with empty data and
    // mark it as complete to prevent further refetches
    dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeSubpageResponse */ .h0)({
      pathname,
      payload: [],
      request: {
        variables: placeholderVariables
      },
      type: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .subpageTypes */ .ag.PLACEHOLDER_SHELVES,
      source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.CLIENT
    }));
  }
};

/***/ }),

/***/ 92552:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getBffVariables; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);
/* harmony import */ var _utils_checkIsPersonalizationEnabled__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(64108);
/* harmony import */ var _lib_friendship__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67641);
/* harmony import */ var _utils_isDayZeroUser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(36849);
/* harmony import */ var _utils_getTimezone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(69661);






const ONEAPP_FLAG = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('API.friendship.oneApp');
const LAUNCHDARKLY_FLAG = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('API.friendship.launchDarkly');
const PROFILES = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('API.friendship.defaultProfiles');
const APP = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('API.friendship.appName');
function getBffVariables(_ref) {
  var _state$client, _state$client$userAge, _state$adobePass$isAu, _state$adobePass;
  let {
    name,
    type = 'PAGE',
    userId,
    variables = {},
    app = APP || 'nbc',
    pid,
    state,
    __legacyNonPersonalized = false
  } = _ref;
  const isPersonalizationEnabled = (0,_utils_checkIsPersonalizationEnabled__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(state);
  let coreVariables = {
    userId: isPersonalizationEnabled ? userId : '0',
    device: 'web',
    platform: state !== null && state !== void 0 && (_state$client = state.client) !== null && _state$client !== void 0 && (_state$client$userAge = _state$client.userAgent) !== null && _state$client$userAge !== void 0 && _state$client$userAge.isMobile ? 'mobileWeb' : 'web',
    language: state.client.language,
    oneApp: ONEAPP_FLAG,
    authorized: (_state$adobePass$isAu = !!(state !== null && state !== void 0 && (_state$adobePass = state.adobePass) !== null && _state$adobePass !== void 0 && _state$adobePass.isAuthenticated)) !== null && _state$adobePass$isAu !== void 0 ? _state$adobePass$isAu : false,
    isDayZero: (0,_utils_isDayZeroUser__WEBPACK_IMPORTED_MODULE_3__/* .isDayZero */ .XM)()
  };
  if (type !== 'SECTION') {
    var _state$client2, _state$client2$geo;
    coreVariables = {
      ...coreVariables,
      name: name.replace(/^\/+/g, ''),
      // Remove leading slashes
      type,
      timeZone: (state === null || state === void 0 ? void 0 : (_state$client2 = state.client) === null || _state$client2 === void 0 ? void 0 : (_state$client2$geo = _state$client2.geo) === null || _state$client2$geo === void 0 ? void 0 : _state$client2$geo.timeZone) || (0,_utils_getTimezone__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)(),
      ...(LAUNCHDARKLY_FLAG ? {
        ld: true,
        profile: (0,_utils_isDayZeroUser__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .ZP)() ? PROFILES.concat(['11111']) : PROFILES
      } : '')
    };
  }
  if (typeof pid === 'number') {
    coreVariables.pid = pid;
  }

  // @TODO: app versions should be consistent once we are fully switched over
  // to personalization
  let appVersion = (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_2__/* .getAppVersion */ .Sf)(true);
  if (__legacyNonPersonalized) {
    appVersion = (0,_lib_friendship__WEBPACK_IMPORTED_MODULE_2__/* .getAppVersion */ .Sf)(false);
  }
  return {
    ...coreVariables,
    ...variables,
    app,
    appVersion
  };
}

/***/ }),

/***/ 93253:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $u: function() { return /* binding */ delayedHomePageFetch; },
/* harmony export */   LJ: function() { return /* binding */ clientFetch; },
/* harmony export */   Pk: function() { return /* binding */ serverFetch; }
/* harmony export */ });
/* harmony import */ var _landingPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73475);

const HOME_VALUES = {
  name: 'homepage',
  type: 'PAGE'
};
function serverFetch(_ref) {
  let {
    props,
    store,
    isFresh
  } = _ref;
  return (0,_landingPage__WEBPACK_IMPORTED_MODULE_0__/* .serverFetch */ .Pk)({
    pageValues: HOME_VALUES,
    props,
    store,
    isFresh
  });
}
function clientFetch(_ref2) {
  let {
    location,
    store
  } = _ref2;
  return (0,_landingPage__WEBPACK_IMPORTED_MODULE_0__/* .clientFetch */ .LJ)({
    pageValues: HOME_VALUES,
    location,
    store
  });
}
function delayedHomePageFetch(delay) {
  return (0,_landingPage__WEBPACK_IMPORTED_MODULE_0__/* .delayedClientFetch */ .pS)({
    pageValues: HOME_VALUES,
    pathname: '/',
    delay
  });
}

/***/ }),

/***/ 73475:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LJ: function() { return /* binding */ clientFetch; },
/* harmony export */   Pk: function() { return /* binding */ serverFetch; },
/* harmony export */   pS: function() { return /* binding */ delayedClientFetch; }
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _actions_pages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18045);
/* harmony import */ var _common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19527);
/* harmony import */ var _common_fetchPlaceholderSections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20924);
/* harmony import */ var _utils_isClientSide__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(15343);
/* harmony import */ var _common_getBffVariables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(92552);






const FAVORITES_DELAY = 10000; // 10 second delay
const isClient = (0,_utils_isClientSide__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
const landingPageTimeouts = {};
async function serverFetch(_ref) {
  var _props$location, _client$geo, _client$geo2, _client$geo2$nbc, _client$geo3, _client$geo3$telemund, _client$geo4;
  let {
    pageValues,
    props,
    store,
    isFresh
  } = _ref;
  if (!isFresh) {
    // do not perform any server-side render if not fresh
    // this is because we will be showing a spinner regardless, so this is a wasted call
    return;
  }
  const state = store === null || store === void 0 ? void 0 : store.getState();
  const dispatch = store === null || store === void 0 ? void 0 : store.dispatch;
  if (!state || !dispatch) {
    throw new Error('Could not connect to Redux');
  }
  const pathname = props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.pathname;
  const client = state === null || state === void 0 ? void 0 : state.client;
  const ssrFetchParams = {
    pathname,
    userId: '-1',
    name: pageValues === null || pageValues === void 0 ? void 0 : pageValues.name,
    type: pageValues === null || pageValues === void 0 ? void 0 : pageValues.type,
    variables: {
      timeZone: client === null || client === void 0 ? void 0 : (_client$geo = client.geo) === null || _client$geo === void 0 ? void 0 : _client$geo.timeZone,
      nbcAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo2 = client.geo) === null || _client$geo2 === void 0 ? void 0 : (_client$geo2$nbc = _client$geo2.nbc) === null || _client$geo2$nbc === void 0 ? void 0 : _client$geo2$nbc.geoChannel,
      telemundoAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo3 = client.geo) === null || _client$geo3 === void 0 ? void 0 : (_client$geo3$telemund = _client$geo3.telemundo) === null || _client$geo3$telemund === void 0 ? void 0 : _client$geo3$telemund.geoChannel,
      nationalBroadcastType: client === null || client === void 0 ? void 0 : (_client$geo4 = client.geo) === null || _client$geo4 === void 0 ? void 0 : _client$geo4.nationalBroadcastType
    }
  };
  const serverVariables = (0,_common_getBffVariables__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    ...ssrFetchParams,
    state
  });
  const [pagePromise, featuredPromise] = await (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_2__/* .fetchFeaturedAndBonanza */ .E)({
    pathname,
    bonanzaVariables: serverVariables,
    featuredVariables: serverVariables
  });
  const {
    pageData,
    featuredSectionData,
    featuredSectionError
  } = (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_2__/* .resolveFeaturedAndBonanza */ .u)({
    pagePromise,
    featuredPromise
  });
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeLazyPage */ .jl)({
    pathname,
    payload: pageData,
    variables: serverVariables,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.SERVER
  }));
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeSubpageResponse */ .h0)({
    pathname,
    payload: featuredSectionData || {
      error: featuredSectionError
    },
    request: {
      variables: serverVariables
    },
    type: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .subpageTypes */ .ag.FEATURED_SECTION,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.SERVER
  }));
}
async function clientFetch(_ref2) {
  var _ref3, _window, _client$geo5, _client$geo6, _client$geo6$nbc, _client$geo7, _client$geo7$telemund, _client$geo8, _pageData$data;
  let {
    pageValues,
    location,
    store
  } = _ref2;
  if (!isClient) {
    throw new Error('Attempted to perform client-side fetch on the server');
  }
  const {
    getState,
    dispatch
  } = (_ref3 = store !== null && store !== void 0 ? store : (_window = window) === null || _window === void 0 ? void 0 : _window.TheStore) !== null && _ref3 !== void 0 ? _ref3 : {};
  if (!getState || !dispatch) {
    return;
  }
  const state = getState();
  const client = state === null || state === void 0 ? void 0 : state.client;
  const pathname = location === null || location === void 0 ? void 0 : location.pathname;

  // clear any pending timeouts - this is specific for landing pages
  const prevTimeout = landingPageTimeouts[pathname];
  prevTimeout && clearTimeout(prevTimeout);
  const fetchParams = {
    pathname,
    userId: client === null || client === void 0 ? void 0 : client.bffMParticleId,
    name: pageValues === null || pageValues === void 0 ? void 0 : pageValues.name,
    type: pageValues === null || pageValues === void 0 ? void 0 : pageValues.type,
    variables: {
      timeZone: client === null || client === void 0 ? void 0 : (_client$geo5 = client.geo) === null || _client$geo5 === void 0 ? void 0 : _client$geo5.timeZone,
      nbcAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo6 = client.geo) === null || _client$geo6 === void 0 ? void 0 : (_client$geo6$nbc = _client$geo6.nbc) === null || _client$geo6$nbc === void 0 ? void 0 : _client$geo6$nbc.geoChannel,
      telemundoAffiliateName: client === null || client === void 0 ? void 0 : (_client$geo7 = client.geo) === null || _client$geo7 === void 0 ? void 0 : (_client$geo7$telemund = _client$geo7.telemundo) === null || _client$geo7$telemund === void 0 ? void 0 : _client$geo7$telemund.geoChannel,
      nationalBroadcastType: client === null || client === void 0 ? void 0 : (_client$geo8 = client.geo) === null || _client$geo8 === void 0 ? void 0 : _client$geo8.nationalBroadcastType
    }
  };
  const clientVariables = (0,_common_getBffVariables__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({
    ...fetchParams,
    state
  });
  const [pagePromise, featuredPromise] = await (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_2__/* .fetchFeaturedAndBonanza */ .E)({
    pathname,
    bonanzaVariables: clientVariables,
    featuredVariables: clientVariables
  });
  const {
    pageData,
    featuredSectionData,
    featuredSectionError
  } = (0,_common_fetchFeaturedAndBonanza__WEBPACK_IMPORTED_MODULE_2__/* .resolveFeaturedAndBonanza */ .u)({
    pagePromise,
    featuredPromise
  });
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeLazyPage */ .jl)({
    pathname,
    payload: pageData,
    variables: clientVariables,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.CLIENT
  }));
  await dispatch((0,_actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .storeSubpageResponse */ .h0)({
    pathname,
    payload: featuredSectionData || {
      error: featuredSectionError
    },
    request: {
      variables: clientVariables
    },
    type: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .subpageTypes */ .ag.FEATURED_SECTION,
    source: _actions_pages__WEBPACK_IMPORTED_MODULE_1__/* .requestSources */ .g0.CLIENT
  }));
  await (0,_common_fetchPlaceholderSections__WEBPACK_IMPORTED_MODULE_3__/* .fetchPlaceholderSections */ .q)({
    variables: fetchParams,
    pathname,
    sections: pageData === null || pageData === void 0 ? void 0 : (_pageData$data = pageData.data) === null || _pageData$data === void 0 ? void 0 : _pageData$data.sections,
    dispatch
  });
}
function delayedClientFetch(_ref4) {
  let {
    pageValues,
    pathname = '/',
    delay
  } = _ref4;
  if (!isClient) {
    // not allowed on server
    throw new Error('Attempted to make a delayed client fetch on the server!');
  }

  // clear existing timeouts
  const prevTimeout = landingPageTimeouts[pathname];
  prevTimeout && clearTimeout(prevTimeout);
  const newTimeout = setTimeout(() => {
    clientFetch({
      pageValues,
      location: {
        pathname
      }
    });
  }, delay !== null && delay !== void 0 ? delay : FAVORITES_DELAY);
  landingPageTimeouts[pathname] = newTimeout;
}

/***/ }),

/***/ 16381:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67788);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_forEach__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84486);
/* harmony import */ var lodash_forEach__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_forEach__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50308);
/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_noop__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _utils_Deferred__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(18297);
/* harmony import */ var _analytics_Omniture__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(31048);

/**
 * Helpful resources for Adobe Pass
 * - TestBed
 * https://entitlement.auth-staging.adobe.com/apitest/api.html
 * - How to Reset AdobePass (how to use TestBed)
 * https://nbcdigital.atlassian.net/wiki/pages/viewpage.action?pageId=31817976
 * - AdobePass Docs
 * https://tve.helpdocsonline.com
 */








const omniture = new _analytics_Omniture__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z();
const ACCESS_ENABLER_ID = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('adobePass.accessEnablerId');
const ACCESS_ENABLER_STATEMENT = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('adobePass.accessEnablerStatement');
const MVPD_IFRAME_CONTAINER_ID = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('adobePass.mvpdIFrameContainerId');
const MVPD_IFRAME_ID = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('adobePass.mvpdIFrameId');
const REQUESTOR_ID = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('adobePass.requestorId');
const APPLICATION_ID = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('adobePass.applicationId');
const MVPD_SELECTION = 'mvpdSelection';
const AUTHENTICATION_DETECTION = 'authenticationDetection';
const AUTHORIZATION_DETECTION = 'authorizationDetection';
const accessEnablerConfig = {
  callSetConfig: true,
  backgroundLogin: true,
  backgroundLogout: true,
  applicationId: APPLICATION_ID
};
var accessEnabler;
var mvpdConfig; // eslint-disable-line no-unused-vars
var providerSelected;
let isMvpdSelectionTracked;
var lastAuthzError = '';
var userMetaRequests = {};
var authzRequests = {};
var providerRequest = null;
var userIdFromAuthentication;
var isUserAuthenticated = false;
var trackingProps = {};
const AdobePassAccessEnabler = {};
AdobePassAccessEnabler.hooks = {
  // ({errorCode, errorDetails})
  onAuthenticationError: (lodash_noop__WEBPACK_IMPORTED_MODULE_4___default()),
  // (authenticationStatus, mvpd)
  onAuthenticationStatus: (lodash_noop__WEBPACK_IMPORTED_MODULE_4___default()),
  onLogout: (lodash_noop__WEBPACK_IMPORTED_MODULE_4___default()),
  onLogin: (lodash_noop__WEBPACK_IMPORTED_MODULE_4___default()),
  onCreateIFrame: (lodash_noop__WEBPACK_IMPORTED_MODULE_4___default()),
  onDestroyIFrame: (lodash_noop__WEBPACK_IMPORTED_MODULE_4___default()),
  onSetConfig: (lodash_noop__WEBPACK_IMPORTED_MODULE_4___default())
};
AdobePassAccessEnabler.globalHooks = ['entitlementLoaded', 'setAuthenticationStatus', 'selectedProvider', 'setToken', 'tokenRequestFailed', 'setMetadataStatus', 'setConfig', 'createIFrame', 'destroyIFrame', 'sendTrackingData', 'displayProviderDialog', 'preauthorizedResources'];
AdobePassAccessEnabler.onAuthenticationError = error => AdobePassAccessEnabler.hooks.onAuthenticationError(error);
AdobePassAccessEnabler.setup = hooks => {
  AdobePassAccessEnabler.getAccessEnabler();
  AdobePassAccessEnabler.anvatoMode = false;
  AdobePassAccessEnabler.listen(hooks);
};
AdobePassAccessEnabler.checkAuthentication = () => {
  // Initialize AdobePass with who we are and config options.
  accessEnabler.setRequestor(REQUESTOR_ID, accessEnablerConfig);
  accessEnabler.checkAuthentication();
};
AdobePassAccessEnabler.checkAuthorization = resourceId => {
  if (!authzRequests[resourceId]) {
    authzRequests[resourceId] = new _utils_Deferred__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();
    AdobePassAccessEnabler.getAccessEnabler();
    if (accessEnabler) {
      accessEnabler.checkAuthorization(resourceId);
    }
  }
  return authzRequests[resourceId];
};
AdobePassAccessEnabler.login = (providerId, redirectUrl) => {
  var redirect = redirectUrl || document.URL || window.location.href;
  AdobePassAccessEnabler.hooks.onLogin(providerId, redirect);
  providerSelected = providerId;
};
AdobePassAccessEnabler.getAuthentication = redirect => {
  AdobePassAccessEnabler.getAccessEnabler();
  accessEnabler.getAuthentication(redirect);
};
AdobePassAccessEnabler.setSelectedProvider = providerId => {
  providerSelected = providerId;
  providerRequest = null;
  accessEnabler.setSelectedProvider(providerId);
};

/**
 * Checks if current browser is IE (any version)
 * @return {boolean}
 *   True if Internet Explorer, False if other
 */
const isBrowserIE = () => {
  var ua = window.navigator.userAgent;
  var msie = ua.indexOf('MSIE ');
  return msie > 0 || !!ua.match(/Trident.*rv:11\./);
};

/**
 * Checks if provider requires a popup for login. Creates a popup frame `mvpdwindow` for adobe pass access enabler to interact with.
 * https://tve.helpdocsonline.com/popup_vs_iframe
 * @param {string} provider the provider id
 * @param {string} redirect the url redirect
 * @returns {void}
 */
AdobePassAccessEnabler.checkPopupAndLogin = (provider, redirect) => {
  AdobePassAccessEnabler.getAuthentication(redirect);
  if (provider && provider.iFrameRequired !== 'true' && !isBrowserIE()) {
    const pu = window.open('https://entitlement.auth.adobe.com', 'mvpdwindow');
    if (!pu) {
      _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_2___default().warn('MVPD popup was blocked');
    }
  }
  if (provider && provider.id) {
    AdobePassAccessEnabler.setSelectedProvider(provider.id);
  }
};
AdobePassAccessEnabler.isAnvatoMode = () => AdobePassAccessEnabler.anvatoMode;
AdobePassAccessEnabler.setAnvatoMode = isAnvato => AdobePassAccessEnabler.anvatoMode = isAnvato;
AdobePassAccessEnabler.setSelectedProviderFromAnvato = provider => providerSelected = provider;
AdobePassAccessEnabler.getUserId = () => userIdFromAuthentication;
AdobePassAccessEnabler.isUserAuthenticated = () => isUserAuthenticated;
AdobePassAccessEnabler.setTrackingProps = props => trackingProps = props;
AdobePassAccessEnabler.logout = () => {
  const contextData = {
    'tve.app': 'NBC Network App',
    'tve.passauthen': 'Not Authenticated'
  };
  omniture.trackEvent('', 'Adobe Pass:Authenticate:Deactivate', contextData);
  // Log out from Access Enabler.
  accessEnabler.logout();
  // Reflect to application.
  AdobePassAccessEnabler.hooks.onLogout();
};

/**
 * Get Metadata about the user.
 * https://tve.helpdocsonline.com/user-metadata-v2
 *
 * @param {string|string[]} key
 *   The key(s) to look up.
 * @return {promise}
 *   Resolved with requested Metadata value(s).
 *   Rejected if it is impossible to retreive the data.
 */
AdobePassAccessEnabler.getMetadata = key => {
  if (Array.isArray(key)) {
    return Promise.all(key.map(AdobePassAccessEnabler.getMetadata));
  }
  if (!userMetaRequests[key]) {
    userMetaRequests[key] = new _utils_Deferred__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();
    accessEnabler.getMetadata(key);
  }
  return userMetaRequests[key];
};

/**
 * Requests "preflight" authorization status for a list of resources.
 * http://tve.helpdocsonline.com/javascript-api-reference-v2$checkPreauthRes
 *
 * @param {string[]} resources
 *   An array of resources for which the authorization should be checked.
 *   Each element in the list should be a string representing the resource ID.
 *   The resource ID is subject to the same limitations as the resource ID in
 *   the getAuthorization() call.
 * @return {promise} @todo
 *   Resolved with requested Metadata value(s).
 *   Rejected if it is impossible to retreive the data.
 */
AdobePassAccessEnabler.checkPreauthorizedResources = resources => Array.isArray(resources) && accessEnabler.checkPreauthorizedResources(resources);

/**
 * Callback to receive preflight-authorized resources.
 * @param  {string[]} resources
 *   An array of resources for which the current user is authorized to access.
 * @return {void}
 */
AdobePassAccessEnabler.preauthorizedResources = resources => AdobePassAccessEnabler.hooks.onPreauthorizedResources(resources);

/**
 * Helper to extract a child node from a given HTMLCollection.
 *
 * @param {HTMLCollection} node
 *   An HTMLCollection
 * @param {string} childName
 *   Name of the child node to extract.
 * @return {any} The child Node, or false if not found.
 */
const extractNodeChild = (node, childName) => {
  if (node.hasChildNodes()) {
    const children = node.childNodes;
    for (let i = 0; i < children.length; i++) {
      if (children[i].nodeName === childName) {
        return children[i];
      }
    }
  }
  return false;
};

/**
 * Helper to convert a DOM API Node to JSON.
 *
 * @param {HTMLCollection} node
 *   An HTMLCollection node
 * @return {object} A JSON object.
 */
const nodeToJson = node => {
  const obj = {};
  for (var i = 0; i < node.childNodes.length; i++) {
    const attr = node.childNodes[i];
    obj[attr.tagName] = attr.textContent;
  }
  return obj;
};

/**
 * Callback to receive and process ConfigXML from AdobePass
 * @param  {string} configXml XML from AdobePass
 * @return {void}
 */
AdobePassAccessEnabler.setConfig = configXml => {
  if (window.DOMParser) {
    const parser = new DOMParser();
    const doc = parser.parseFromString(configXml, 'text/xml');
    const node = doc.getElementsByTagNameNS('*', 'config').item(0);
    const requestor = extractNodeChild(node, 'requestor');
    if (requestor) {
      const mvpds = extractNodeChild(requestor, 'mvpds');
      if (mvpds) {
        const items = [];
        for (let i = 0; i < mvpds.childNodes.length; i++) {
          items.push(nodeToJson(mvpds.childNodes[i]));
        }
        if (items.length > 0) {
          AdobePassAccessEnabler.hooks.onSetConfig(items);
        }
      }
    }
  }
};
AdobePassAccessEnabler.createIFrame = (width, height) => {
  var container = document.getElementById(MVPD_IFRAME_CONTAINER_ID);
  var iframe = document.getElementById(MVPD_IFRAME_ID);
  if (!iframe) {
    iframe = document.createElement('iframe');
    iframe.name = MVPD_IFRAME_ID;
    iframe.id = MVPD_IFRAME_ID;
  }
  iframe.style.width = "".concat(width, "px");
  iframe.style.height = "".concat(height, "px");
  container.appendChild(iframe);

  // Force the name into the DOM since it is still not refreshed, for IE.
  window.frames[MVPD_IFRAME_ID].name = MVPD_IFRAME_ID;
  AdobePassAccessEnabler.hooks.onCreateIFrame();
};
AdobePassAccessEnabler.destroyIFrame = () => {
  var container = document.getElementById(MVPD_IFRAME_CONTAINER_ID);
  var iframe = document.getElementById(MVPD_IFRAME_ID);
  if (iframe) {
    container.removeChild(iframe);
  }
  AdobePassAccessEnabler.hooks.onDestroyIFrame();
};

/**
 * Callback to Display a provider dialog, not in use but needs to be defined.
 * @see https://tve.helpdocsonline.com/7-6-2-2
 * @returns {void}
 */
AdobePassAccessEnabler.displayProviderDialog = () => {};

/**
 * Retrieve the mvpd_id of the current selected provider.
 *
 * @return {promise} fufilled when #selectedProvider is dispatched below
 */
AdobePassAccessEnabler.getSelectedProvider = () => {
  if (!providerRequest) {
    providerRequest = new _utils_Deferred__WEBPACK_IMPORTED_MODULE_7__/* ["default"] */ .Z();
    accessEnabler.getSelectedProvider();
  }
  return providerRequest;
};

/**
 * Global hook when selectedProvider is available from accessEnabler
 * @param {object} provider {
 *   MVPD - string of the selected provider or null
 *   AE_STATE - string of authentication status or new user
 * }
 * @returns {undefined}
 */
AdobePassAccessEnabler.selectedProvider = _ref => {
  let {
    MVPD = null
  } = _ref;
  if (providerRequest) {
    providerRequest.resolve(MVPD);
  }
};

/**
 * Callback that sends a tracking data event and associated data.
 *
 * @param {string} trackingEventType
 *    The type of event that triggered this tracking event.
 * @param {array} trackingData
 *    An array of all the tracking data/variables associated with the tracking event
 * @return {void}
 *
 * trackingEventType:
 *   authorizationDetection - any time an authorization token request returns
 *   authenticationDetection - any time an authentication check occurs
 *   mvpdSelection - when the user selects an mvpd in the mvpd selection dialog
 *
 * trackingData:
 * For trackingEventType 'authorizationDetection'
 *   [0] Whether the token request was successful [true/false]
 *       and if true:
 *       [1] MVPD ID [string]
 *       [2] User ID (md5 hashed) [string]
 *       [3] Whether it was cached or not [true/false]
 *
 * For trackingEventType 'authenticationDetection'
 *   [0] Whether the token request was successful (false)
 *       and if successful is true:
 *       [1] MVPD ID
 *       [2] User ID (md5 hashed)
 *       [3] Whether it was cached or not (true/false)
 *
 * For trackingEventType 'mvpdSelection'
 *  [0] MVPD ID
 *
 * MVPD Example: MVPD ID for Comcast is 'Comcast'
 */
AdobePassAccessEnabler.sendTrackingData = (trackingEventType, trackingData) => {
  // In case of an authN fail, trackingData[1] is undefined and we need to fallback to providerSelected.
  const mvpdId = trackingData[1] || providerSelected;
  const userId = trackingData[2];
  const authnContextData = {
    'tve.passmvpd': mvpdId,
    'tve.passguid': userId,
    'tve.contenthub': 'Adobe Pass',
    'tve.passnetwork': REQUESTOR_ID
  };
  if (trackingEventType === MVPD_SELECTION) {
    isMvpdSelectionTracked = true;
  }
  if (trackingEventType === AUTHENTICATION_DETECTION && isMvpdSelectionTracked) {
    const isAuthenticated = trackingData[0];
    // Set the UserId so it can be read externally
    userIdFromAuthentication = userId;
    if (isAuthenticated) {
      const contextData = {
        // eslint-disable-line quote-props
        ...authnContextData,
        'tve.passauthensuccess': true,
        'tve.passauthen': 'Authenticated'
      };
      omniture.trackEvent('', 'Adobe Pass:Authenticate:Success', contextData);
    } else {
      const contextData = {
        // eslint-disable-line quote-props
        ...authnContextData,
        'tve.passauthenfail': true,
        'tve.passauthen': 'Not Authenticated'
      };
      omniture.trackEvent('', 'Adobe Pass:Authenticate:Fail', contextData);
    }
  }
  if (trackingEventType === AUTHORIZATION_DETECTION) {
    const isAuthorized = trackingData[0];
    authnContextData['tve.passmvpd'] = trackingData[1];
    if (!AdobePassAccessEnabler.anvatoMode) {
      if (isAuthorized) {
        const contextData = {
          // eslint-disable-line quote-props
          ...authnContextData,
          'tve.passauthorizesuccess': true,
          'tve.passauthorize': 'Authorized'
        };
        omniture.trackEvent('', 'Adobe Pass:Authorize:Success', contextData);
      } else {
        const contextData = {
          // eslint-disable-line quote-props
          ...authnContextData,
          'tve.passauthorizefail': true,
          'tve.passauthorize': 'Not Authorized',
          'tve.fail': lastAuthzError || 'F1',
          'tve.network': 'NBC',
          'tve.contenthub': 'Adobe Pass'
        };
        omniture.trackEvent('', 'Adobe Pass:Authorize:Fail', contextData);
      }
    } else {
      const authProps = {
        ...authnContextData,
        'tve.dma': lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(trackingProps, 'anvato.station.dma', 'NA'),
        'tve.homecallsign': lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(trackingProps, 'anvato.station.callsign')
      };
      var title = 'Adobe Pass:Stream Auth Success';
      if (!lodash_get__WEBPACK_IMPORTED_MODULE_5___default()(trackingProps, 'anvato.tve.station.has_streaming_rights', true) || !isAuthorized) {
        title = 'Adobe Pass:Stream Auth Fail';
        authProps['tve.fail'] = isAuthorized ? config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('LivePage.promo.streamingNotAvailable') : lastAuthzError || 'F1';
        authProps['tve.localstream'] = 'false';
      } else {
        authProps['tve.localstream'] = 'true';
      }
      omniture.trackEvent('', title, authProps);
    }
  }
};
AdobePassAccessEnabler.getAccessEnabler = () => {
  if (!accessEnabler && window.Adobe) {
    accessEnabler = new window.Adobe.AccessEnabler(ACCESS_ENABLER_STATEMENT);
  }
};
AdobePassAccessEnabler.existsAccessEnabler = () => !!window.Adobe || document.getElementById(ACCESS_ENABLER_ID);
AdobePassAccessEnabler.entitlementLoaded = () => AdobePassAccessEnabler.enablerLoaded();
AdobePassAccessEnabler.enablerLoaded = () => {
  AdobePassAccessEnabler.getAccessEnabler();
  AdobePassAccessEnabler.checkAuthentication();
};
AdobePassAccessEnabler.setAuthenticationStatus = (isAuthenticated, errorCode) => {
  // Status can be read externally
  isUserAuthenticated = !!isAuthenticated;
  if (!isAuthenticated) {
    // Clear any metadata promises, they will not be happening now.
    lodash_forEach__WEBPACK_IMPORTED_MODULE_3___default()(userMetaRequests, req => req.reject());
    userMetaRequests = {};
  }
  if (errorCode) {
    // User Not Authenticated Error is expected for anonymous user.
    if (errorCode !== 'User Not Authenticated Error') {
      AdobePassAccessEnabler.onAuthenticationError(errorCode);
      return;
    }
  }
  // Wait a tick, to ensure log order is understandable.
  setTimeout(() => {
    AdobePassAccessEnabler.getSelectedProvider().then(mvpd => AdobePassAccessEnabler.hooks.onAuthenticationStatus(!!isAuthenticated, mvpd));
  }, 0);
};
AdobePassAccessEnabler.setToken = (requestedResourceId, token) => {
  if (authzRequests[requestedResourceId]) {
    authzRequests[requestedResourceId].resolve(token);
    // Reset to allow fresh tokens.
    delete authzRequests[requestedResourceId];
  }
};
AdobePassAccessEnabler.tokenRequestFailed = (requestedResourceId, errorCode, errorDetails) => {
  if (authzRequests[requestedResourceId]) {
    authzRequests[requestedResourceId].reject({
      errorCode,
      errorDetails
    });
    // Reset to allow fresh tokens.
    delete authzRequests[requestedResourceId];
  }
};

/**
 * A public setter to avoid this file needing to access Redux
 * state on window.TheStore.
 * @param {string} errorDetails
 *   The error message returned by Adobe Pass.
 * @return {void}
 */
AdobePassAccessEnabler.setLastAuthZError = errorDetails => {
  lastAuthzError = errorDetails;
};
AdobePassAccessEnabler.setMetadataStatus = (key, args, value) => {
  if (userMetaRequests[key]) {
    userMetaRequests[key].resolve(value);
    // Reset to allow fresh tokens.
    delete userMetaRequests[key];
  }
};

/**
 * Apply global hooks to listen for accessEnabler.
 *
 * @param {object} hooks functions to call after global hooks
 *
 * @param {array} globalHooks overrides the AdobePassAccessEnabler.globalHooks array
 *
 * @return {void}
 */
AdobePassAccessEnabler.listen = function (hooks) {
  let globalHooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AdobePassAccessEnabler.globalHooks;
  AdobePassAccessEnabler.hooks = {
    ...AdobePassAccessEnabler.hooks,
    ...hooks
  };
  AdobePassAccessEnabler.old = {};
  lodash_forEach__WEBPACK_IMPORTED_MODULE_3___default()(globalHooks, key => {
    const old = window[key];
    if (!globalHooks && old) {
      window[key] = function () {
        AdobePassAccessEnabler.old[key](...arguments);
        return AdobePassAccessEnabler[key](...arguments);
      };
      AdobePassAccessEnabler.old[key] = old;
    } else {
      window[key] = AdobePassAccessEnabler[key];
    }
  });
};
/**
 * REmove global hooks that listen for accessEnabler
 * @return {[type]} [description]
 */
AdobePassAccessEnabler.reset = () => {
  if (!AdobePassAccessEnabler.old) {
    return;
  }
  lodash_forEach__WEBPACK_IMPORTED_MODULE_3___default()(AdobePassAccessEnabler.globalHooks, key => {
    if (AdobePassAccessEnabler.globalHooks) {
      if (AdobePassAccessEnabler.old[key]) window[key] = AdobePassAccessEnabler.old[key];
    } else {
      delete window[key];
    }
  });
  delete AdobePassAccessEnabler.old;
};
/* harmony default export */ __webpack_exports__.Z = (AdobePassAccessEnabler);

/***/ }),

/***/ 31048:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67788);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35161);
/* harmony import */ var lodash_map__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_map__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_forEach__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(84486);
/* harmony import */ var lodash_forEach__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_forEach__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28583);
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_assign__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _dayjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(57979);
/* global s */






const isDevelopmentMode = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('omniture.isDevelopmentMode');

/**
 * Construct a new Omniture object.
 *
 * @param {array} options
 *   An array of options.
 * @constructor
 */
function Omniture(options) {
  this.settings = {
    platform: typeof navigator === 'undefined' ? 'undefined' : /android|mobile/i.test(navigator.userAgent) ? 'Mobile' : 'PC',
    requestorID: 'nbcentertainment',
    timezone: 'America/New_York',
    preservePropsKeys: ['visitorNamespace', 'trackingServer', 'trackingServerSecure', 'dc'],
    ...options
  };

  // This protected variable will hold reference to all the values we want to
  // track for Omniture. It isn't until we explicitly send data that we persist
  // these values to the `s` object (SiteCatalyst). This way, between the time
  // we "set" a value and actually persist it, we can manipulate the data for
  // other purposes (such as reporting variable names).
  this.contextData = {};
}
Omniture.prototype.initialize = () => new Promise((resolve, reject) => {
  let attempts = 0;
  function methodsLoaded() {
    if (typeof s !== 'undefined' && s.t && s.tl) {
      resolve(s);
    } else if (attempts >= 10) {
      reject(new Error('Omniture SDK failed to initialize.'));
    } else {
      attempts += 1;
      setTimeout(methodsLoaded, 1000);
    }
  }
  methodsLoaded();
});
Omniture.prototype.isAvailable = function () {
  // Drop out if the Site Catalyst global object doesn't exist.
  if (typeof s === 'undefined') {
    isDevelopmentMode && _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().error('The global object s is undefined, Omniture will not load.');
    return false;
  }
  return true;
};

/**
 * Sets context data values sent with every call.
 * This used to be in a plugin script, however we do not want these to carry over to the Adobe heartbeat calls so we are
 * adding them in this codebase instead.
 *
 * @return {object} vars
 *   An object of key/values pairs.
 */
Omniture.prototype.addDefaultVariables = function () {
  const date = (0,_dayjs__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)();
  s.server = window.location.host.toLowerCase();
  const defaultVars = {
    ...(s.pageName ? {
      'tve.title': s.pageName
    } : {}),
    'tve.domain': s.server,
    'tve.platform': /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? 'Mobile' : 'PC',
    'tve.did': s.Util.cookieRead('aam_uuid') ? s.Util.cookieRead('aam_uuid') : s.Util.cookieRead('aam_did') ? s.Util.cookieRead('aam_did') : 'demdex cookie not set',
    'tve.date': date.format('MM/DD/YYYY'),
    'tve.day': date.format('dddd'),
    'tve.hour': date.format('HH:00'),
    'tve.minute': date.format('HH:mm')
  };
  this.contextData = {
    ...this.contextData,
    ...defaultVars
  };
};

/**
 * Sets a collection of context data values.
 *
 * @param {object} vars
 *   An object of key/values pairs.
 * @return {void}
 */
Omniture.prototype.collectContextDataSet = function (vars) {
  lodash_forEach__WEBPACK_IMPORTED_MODULE_3___default()(vars, (value, key) => this.setContextData(key, value));
};

/**
 * This "sets" a key value pair which will eventually get persisted to the
 * SiteCatalyst object before sending data to the server.
 *
 * @param {string} name
 *   The name of the context data variable.
 * @param {string} value
 *   The value of the context data variable.
 * @return {void}
 */
Omniture.prototype.setContextData = function (name, value) {
  if (typeof name !== 'undefined' && typeof value !== 'undefined' && value !== '') {
    this.contextData[name] = value;
  }
};

/**
 * Copy over data to the `s` object (sitecatalyst).
 *
 * @return {void}
 */
Omniture.prototype.saveContextData = function () {
  if (this.isAvailable()) {
    lodash_assign__WEBPACK_IMPORTED_MODULE_4___default()(s.contextData, this.contextData);
  }
};

/**
 * Removes context data variables directly from the `s` object. For
 * integrity, this also clears the internal contextData object.
 *
 * @return {void}
 */
Omniture.prototype.resetContextData = function () {
  this.contextData = {};
  if (this.isAvailable()) {
    s.contextData = {};
  }
};

/**
 * Set high level props to the s object (i.e. s.prop2).
 *
 * @param {object} vars
 *   Props to set on the global s object.
 * @return {void}
 */
Omniture.prototype.setGlobalProps = function (vars) {
  lodash_forEach__WEBPACK_IMPORTED_MODULE_3___default()(vars, (value, key) => s[key] = value);
};

/**
 * Setup variables before a tracking call.
 *
 * DEPRECATED??: Run setup necessary for each call
 *  -- including switching the global s object to the current reporting suite(s).
 *
 * @return {void}
 */
Omniture.prototype.setupTracking = function () {
  // Sets a fallback page name if one isn't set during a tracking call.
  s.pageName = "".concat(this.settings.requestorID, ":").concat(this.settings.platform, ":").concat(document.title);
};

/**
 * Clean up after making a tracking call.
 *
 * @return {void}
 */
Omniture.prototype.teardownTracking = function () {
  this.resetContextData();
};

/**
 * Joins property keys of an object to a comma-delimited string. Particularly
 * useful for declaring the names of tracked links (s.linkTrackVars).
 *
 * @param  {object} vars
 *   An object of key/value pairs.
 *
 * @return {string}
 *   A comma-delimited string of keys.
 */
Omniture.prototype.stringifyKeys = function (vars) {
  return lodash_map__WEBPACK_IMPORTED_MODULE_2___default()(vars, (value, key) => "contextData.".concat(key)).join(',');
};

/**
 * Track "page", along with all the context data collected up to this point.
 *
 * @param  {string} pageName
 *   The name of the page to contribute a "page view"
 * @param  {object} variables
 *   An object of key/value pairs to track.
 * @param {object} props
 *   Properties of the global s object to set.
 *
 * @return {void}
 */
Omniture.prototype.trackPage = function (pageName, variables, props) {
  this.initialize().then(() => {
    this.setGlobalProps(props);
    this.setupTracking();
    if (variables) {
      this.collectContextDataSet({
        ...variables
      });
    }
    if (typeof pageName !== 'undefined') s.pageName = pageName;
    this.addDefaultVariables();
    this.saveContextData();
    s.linkTrackEvents = 'None';
    s.linkTrackVars = 'None';
    s.t();
    this.teardownTracking();
  }).catch(e => isDevelopmentMode && _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().error(e));
};

/**
 * Track an "event", along with passed in context data variables.
 *
 * @param  {string} events
 *   A comma-delimited string of events to track against.
 * @param  {string} linkName
 *   The name of the link to be reported.
 * @param  {object} variables
 *   An object of key/value pairs to track.
 * @param  {object} variablesFromContext
 *   A string containing contextData key references.
 *
 * @return {void}
 */
Omniture.prototype.trackEvent = function (events, linkName, variables, variablesFromContext) {
  this.initialize().then(() => {
    this.setupTracking();

    // Set variables into this.contextData.
    if (variables) {
      this.collectContextDataSet({
        ...variables
      });
    }
    this.addDefaultVariables();
    // Save this.contextData into s.contextData on the sitecatalyst object.
    this.saveContextData();
    // Get extra variables from context to be exposed in linkTrackVars according to NBCRESP-3041
    const varsFromContext = variablesFromContext || '';

    // Prep sitecatalyst vars before tracking.
    s.events = events;
    s.linkTrackEvents = events;
    s.pev2 = linkName;
    s.linkTrackVars = [this.stringifyKeys(this.contextData), varsFromContext].filter(key => key).join(',');

    // Call the track link function to track an event.
    s.tl(this, 'o', linkName);

    // Remove all contextData, in both this.contextData and s.contextData.
    this.teardownTracking();
  }).catch(e => isDevelopmentMode && _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().error(e));
};

/**
 * Set Omniture report suite.
 *
 * Use with caution. This will override the report suites set in Adobe
 * Experience Platform (Adobe Analytics extension) for all subsequent calls.
 *
 * @param {string} reportSuite
 *   The reporting suite Omniture should use for subsequent calls.
 *
 * @return {void}
 */
Omniture.prototype.setReportSuite = function (reportSuite) {
  this.initialize().then(() => s.setAccount(reportSuite)).catch(e => isDevelopmentMode && _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().error(e));
};
/* harmony default export */ __webpack_exports__.Z = (Omniture);

/***/ }),

/***/ 35877:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48403);
/* harmony import */ var lodash_capitalize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_capitalize__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);
/* harmony import */ var _mParticle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51054);
/* harmony import */ var _Omniture__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(31048);
/**
 * This is a library for adobe analytics to track identity events.
 * @see https://wiki.inbcu.com/pages/viewpage.action?spaceKey=IM&title=Non-video+Tracking+Requirements
 */





const omniture = new _Omniture__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z();
const DEFAULT_BRAND = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('app.appName').toUpperCase();
const NETWORK = DEFAULT_BRAND === 'NBC' ? 'NBC Entertainment' : DEFAULT_BRAND;
const adobeIdentity = {
  trackIdentityCheck: async function () {
    let isAuthed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    let signInType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    const contextData = {
      'tve.network': NETWORK,
      'tve.identityguid': await _mParticle__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP.getId(),
      'tve.identityauthen': isAuthed ? 'Authenticated' : 'Unauthenticated',
      'tve.identitymethod': isAuthed ? lodash_capitalize__WEBPACK_IMPORTED_MODULE_0___default()(signInType) : 'None'
    };
    omniture.trackEvent('', 'Identity Sign-In Check', contextData);
  },
  trackIdentitySignIn: async function () {
    let signInType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    const contextData = {
      'tve.contenthub': 'Identity',
      'tve.network': NETWORK,
      'tve.identityguid': await _mParticle__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP.getId(),
      'tve.identityauthen': 'Authenticated',
      'tve.identitymethod': lodash_capitalize__WEBPACK_IMPORTED_MODULE_0___default()(signInType),
      'tve.identitysignin': 'true'
    };
    omniture.trackEvent('', 'Identity Sign-In Confirmation', contextData);
  },
  trackIdentitySignUp: async function () {
    let signUpType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    const contextData = {
      'tve.contenthub': 'Identity',
      'tve.identityguid': await _mParticle__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP.getId(),
      'tve.identityauthen': 'Authenticated',
      'tve.identitymethod': lodash_capitalize__WEBPACK_IMPORTED_MODULE_0___default()(signUpType),
      'tve.identityconfirmation': 'true'
    };
    omniture.trackEvent('', 'Identity Sign-Up Confirmation', contextData);
  },
  trackIdentitySignOut: async () => {
    const contextData = {
      'tve.contenthub': 'Identity',
      'tve.network': NETWORK,
      'tve.identityguid': await _mParticle__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP.getId(),
      'tve.identityauthen': 'Unauthenticated',
      'tve.identitymethod': 'None',
      'tve.identitysignout': 'true'
    };
    omniture.trackEvent('', 'Identity Sign-Out Confirmation', contextData);
  },
  trackMvpdLink: () => {
    const contextData = {
      'tve.network': NETWORK,
      'tve.contenthub': 'Identity',
      'tve.identitymvpdlink': 'true'
    };
    omniture.trackEvent('', 'Identity MVPD Link', contextData);
  },
  trackProfileLink: () => {
    const contextData = {
      'tve.network': NETWORK,
      'tve.contenthub': 'Identity',
      'tve.identitysignuplink': 'true',
      'tve.identityorigin': 'MVPD'
    };
    omniture.trackEvent('', 'Identity Sign-Up Link', contextData);
  }
};
/* harmony default export */ __webpack_exports__.Z = (adobeIdentity);

/***/ }),

/***/ 34284:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var _utils_require_script__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(23806);
/* harmony import */ var _utils_getOptStatus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33159);
/* global ns_ */




const SDK_URL = "".concat(config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('app.assetPath'), "scripts/comScore-7.6.0.min.js");
const AD_SERVER = 'Freewheel';
const PUBLISHER_ID = '6035083';
const comscore = {
  instance: null,
  metadata: null
};
const getKeyValueFromString = str => {
  const regex = new RegExp('^[^_]+(?=_)');
  const keyMatch = str.match(regex);
  return keyMatch && keyMatch[0] ? keyMatch[0] : '';
};
comscore.initialize = () => new Promise((resolve, reject) => {
  if (comscore.instance != null) {
    resolve(comscore.instance);
    return;
  }
  (0,_utils_require_script__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(SDK_URL).then(() => {
    if (!ns_) {
      throw new Error('ComScore global ns_ not found.');
    }
    const analytics = ns_.analytics;
    const publisherConfig = new analytics.configuration.PublisherConfiguration({
      publisherId: PUBLISHER_ID,
      persistentLabels: {
        cs_ucfr: (0,_utils_getOptStatus__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP)()
      }
    });
    analytics.configuration.addClient(publisherConfig);
    analytics.PlatformApi.setPlatformAPI(analytics.PlatformApi.WebBrowser);
    comscore.instance = new analytics.StreamingAnalytics();
    analytics.start();
    resolve(comscore.instance);
  }).catch(() => reject(new Error('Failed to load ComScore SDK')));
});
comscore.loadMetadata = metadata => {
  let airDate = {};
  if (metadata.originalAirDate) {
    const date = metadata.originalAirDate.split('-');
    airDate = {
      year: date[0] || '',
      month: date[1] || '',
      day: date[2] || ''
    };
  }
  comscore.metadata = {
    id: metadata.assetId,
    length: metadata.tsStart && metadata.tsEnd ? (parseInt(metadata.tsEnd, 10) - parseInt(metadata.tsStart, 10)) * 1000 : 0,
    station: metadata.callsign,
    brand: metadata.brand,
    title: metadata.longTitle,
    genre: metadata.genres ? metadata.genres.pop() : '*null',
    episodeId: metadata.nbcuId,
    episodeNumber: metadata.episodeNumber || '*null',
    seasonNumber: metadata.seasonNumber || '*null',
    airDate,
    episodeTitle: metadata.episodeTitle
  };
  comscore.play();
};
comscore.createPlaybackSession = () => {
  comscore.initialize().then(instance => {
    instance.createPlaybackSession();
  });
};
comscore.play = () => {
  comscore.initialize().then(instance => {
    const analytics = ns_.analytics;
    const {
      id,
      length,
      station,
      brand,
      title,
      genre,
      episodeId,
      episodeNumber,
      seasonNumber,
      episodeTitle,
      airDate
    } = comscore.metadata;
    const cm = new analytics.StreamingAnalytics.ContentMetadata();
    cm.setMediaType(analytics.StreamingAnalytics.ContentMetadata.ContentType.LIVE);
    cm.setUniqueId(id);
    cm.setLength(length);
    cm.setStationTitle(brand);
    cm.setPublisherName(brand);
    cm.setProgramTitle(title);
    cm.setGenreName(genre);
    cm.setEpisodeId(episodeId);
    cm.setEpisodeNumber(episodeNumber);
    cm.setEpisodeSeasonNumber(seasonNumber);
    cm.setEpisodeTitle(episodeTitle);
    cm.setDateOfDigitalAiring(airDate.year, airDate.month, airDate.day);
    cm.setDateOfTvAiring(airDate.year, airDate.month, airDate.day);
    cm.setDictionaryClassificationC3(brand);
    cm.setDictionaryClassificationC4('*null');
    cm.setDictionaryClassificationC6(title);
    cm.classifyAsCompleteEpisode(true);
    cm.setFeedType(station);
    cm.addCustomLabels({
      ns_st_ia: '0',
      ns_st_ce: episodeNumber ? '1' : '*null'
    });
    instance.setMetadata(cm);
    instance.notifyPlay();
  });
};
comscore.stop = () => {
  comscore.initialize().then(instance => {
    instance.notifyPause();
  });
};
comscore.end = () => {
  comscore.initialize().then(instance => {
    instance.notifyEnd();
  });
};
comscore.playAd = ad => {
  comscore.initialize().then(instance => {
    const {
      breakClipId,
      creativeId,
      durationInSeconds,
      adInsights: {
        campaignName,
        ccrMeasurementBeacon,
        placementId
      }
    } = ad;
    const dimensions = "".concat(window.innerWidth, ", ").concat(window.innerHeight); // @todo
    const {
      StreamingAnalytics
    } = ns_.analytics;
    const adType = StreamingAnalytics.AdvertisementMetadata.AdvertisementType.LIVE;
    const deliveryType = StreamingAnalytics.AdvertisementMetadata.AdvertisementDeliveryType.NATIONAL;
    const am = new StreamingAnalytics.AdvertisementMetadata();
    const campaignId = campaignName ? getKeyValueFromString(campaignName) : '';
    const adPlacementId = placementId || '';
    const length = durationInSeconds ? durationInSeconds * 1000 : '';
    am.setMediaType(adType);
    am.setRelatedContentMetadata();
    am.setUniqueId(breakClipId);
    am.setLength(length);
    am.setDeliveryType(deliveryType);
    am.setServer(AD_SERVER);
    am.setVideoDimensions(dimensions);
    am.setPlacementId(adPlacementId);
    am.addCustomLabels({
      ns_st_ami: creativeId,
      ns_st_amg: campaignId,
      cs_ad_tu: ccrMeasurementBeacon,
      ns_st_ia: '*null',
      ns_st_ce: '*null'
    });
    instance.setMetadata(am);
    instance.notifyPlay();
  });
};
comscore.updateOptOutStatus = () => comscore.initialize().then(() => {
  const analytics = ns_.analytics;
  analytics.configuration.getPublisherConfiguration(PUBLISHER_ID).setPersistentLabel('cs_ucfr', (0,_utils_getOptStatus__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .ZP)());
  analytics.notifyHiddenEvent();
});

/**
 * Track a page view with comScore.
 *
 * @deprecated
 *   Switch to using the new SDK import above for page tracking.
 *
 * @param {Object} params
 *   Parameters for a Comscore beacon.
 * @param {Boolean} isFirstPageView
 *   Whether or not this is an initial page view.
 * @return {Promise}
 *   Resolved once beacon is fired.
 */
comscore.trackPage = (params, isFirstPageView) => {
  // Skip first page view.
  if (isFirstPageView) {
    return Promise.resolve();
  }
  // We probably have comscore, so skip loading.
  return (window.COMSCORE ? Promise.resolve() : (0,_utils_require_script__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)("".concat(document.location.protocol === 'https:' ? 'https://sb' : 'http://b', ".scorecardresearch.com/beacon.js"))).then(() => window.COMSCORE.beacon(params));
};
/* harmony default export */ __webpack_exports__.Z = (comscore);

/***/ }),

/***/ 51054:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  ZP: function() { return /* binding */ analytics_mParticle; },
  Mj: function() { return /* binding */ getShelvesLoadData; },
  uU: function() { return /* binding */ isShelfImpressionTracked; },
  BG: function() { return /* binding */ trackShelfImpression; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.js
var web_url = __webpack_require__(78730);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.to-json.js
var web_url_to_json = __webpack_require__(19979);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.url-search-params.js
var web_url_search_params = __webpack_require__(79307);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./webpack-alias/park-logger.js
var park_logger = __webpack_require__(67788);
var park_logger_default = /*#__PURE__*/__webpack_require__.n(park_logger);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/lodash/omit.js
var omit = __webpack_require__(57557);
var omit_default = /*#__PURE__*/__webpack_require__.n(omit);
// EXTERNAL MODULE: ./node_modules/qs/lib/index.js
var lib = __webpack_require__(80129);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);
// EXTERNAL MODULE: ./node_modules/cookies-js/dist/cookies.js
var cookies = __webpack_require__(27360);
var cookies_default = /*#__PURE__*/__webpack_require__.n(cookies);
// EXTERNAL MODULE: ./node_modules/@nbcu/nbc-mparticle-media-sdk/dist/nbc-mparticle-media-sdk.js
var nbc_mparticle_media_sdk = __webpack_require__(59622);
var nbc_mparticle_media_sdk_default = /*#__PURE__*/__webpack_require__.n(nbc_mparticle_media_sdk);
// EXTERNAL MODULE: ./package.json
var package_0 = __webpack_require__(4147);
// EXTERNAL MODULE: ./lib/identity.js + 1 modules
var identity = __webpack_require__(62899);
// EXTERNAL MODULE: ./actions/launchDarkly.js + 1 modules
var launchDarkly = __webpack_require__(62452);
// EXTERNAL MODULE: ./lib/launchDarkly.js + 1 modules
var lib_launchDarkly = __webpack_require__(67745);
// EXTERNAL MODULE: ./utils/checkIsPersonalizationEnabled.js
var checkIsPersonalizationEnabled = __webpack_require__(64108);
// EXTERNAL MODULE: ./utils/getAdobeTagging.js
var getAdobeTagging = __webpack_require__(17627);
// EXTERNAL MODULE: ./utils/getShowPath.js
var getShowPath = __webpack_require__(98090);
;// CONCATENATED MODULE: ./utils/getPageLoadDuration.js

/* harmony default export */ var getPageLoadDuration = (performance => {
  if (!performance) {
    return -1;
  }
  const fallbackTiming = performance.timing.domInteractive - performance.timing.navigationStart;
  if (!performance.getEntriesByType) {
    return fallbackTiming;
  }
  const [navigationEntry] = performance.getEntriesByType('navigation');
  return navigationEntry ? navigationEntry.domInteractive : fallbackTiming;
});
// EXTERNAL MODULE: ./utils/getPlatform.js
var getPlatform = __webpack_require__(14336);
;// CONCATENATED MODULE: ./utils/getSearchEngine.js
/**
 * Takes a referrer URL and returns if it belongs to either Google,
 * Bing, Yahoo or DuckDuckGo search engines.
 * This snippet was taken from the Mixpanel JS SDK.
 * @see https://github.com/mixpanel/mixpanel-js
 *
 * @param {string} referrer
 *   A URL, typically taken from document.referrer.
 * @return {string}
 *   The search engine name, or null.
 */
function getSearchEngine(referrer) {
  if (!referrer) {
    return null;
  }
  if (referrer.search('https?://(.*)google.([^/?]*)') === 0) {
    return 'google';
  }
  if (referrer.search('https?://(.*)bing.com') === 0) {
    return 'bing';
  }
  if (referrer.search('https?://(.*)yahoo.com') === 0) {
    return 'yahoo';
  }
  if (referrer.search('https?://(.*)duckduckgo.com') === 0) {
    return 'duckduckgo';
  }
  return null;
}
/* harmony default export */ var utils_getSearchEngine = (getSearchEngine);
// EXTERNAL MODULE: ./utils/isDayZeroUser.js
var isDayZeroUser = __webpack_require__(36849);
// EXTERNAL MODULE: ./lib/analytics/mParticle_constants.js
var mParticle_constants = __webpack_require__(26566);
;// CONCATENATED MODULE: ./lib/analytics/excludeEventProps.js
// mpc = short for mParticle Constants

const seasonShowBrand = [mParticle_constants.SEASON, mParticle_constants.SHOW, mParticle_constants.BRAND];
const attributeExclusions = {
  [mParticle_constants.PLAYER_LOAD_TIME]: [mParticle_constants.PLAYER_NAME, mParticle_constants.CC_LANGUAGE, mParticle_constants.LANGUAGE, mParticle_constants.CALLSIGN, mParticle_constants.HOME_STATION, mParticle_constants.GEO_STATION, mParticle_constants.CUSTOM_SHELF_TYPE, mParticle_constants.CLOSED_CAPTIONING, mParticle_constants.LEAGUE, mParticle_constants.SPORT],
  [mParticle_constants.SOCIAL_SHARE]: [mParticle_constants.GENRE, mParticle_constants.PREVIOUS_VIDEO_TYPE, mParticle_constants.VIDEO_TYPE, mParticle_constants.PREVIOUS_VIDEO, mParticle_constants.TOKEN_TYPE, mParticle_constants.CASTING, mParticle_constants.ENTITLEMENT, mParticle_constants.EPISODE_NUMBER, mParticle_constants.EPISODE_TITLE, mParticle_constants.VIDEO_DURATION, mParticle_constants.VIDEO_ID],
  [mParticle_constants.NBC_SIGN_OUT]: seasonShowBrand,
  [mParticle_constants.ITEM_FAVORITED]: [mParticle_constants.SEASON, mParticle_constants.LANGUAGE],
  [mParticle_constants.CONTENT_CLICK]: [mParticle_constants.SEASON],
  [mParticle_constants.PROFILE_UPDATE]: seasonShowBrand,
  [mParticle_constants.MODAL_LOAD]: seasonShowBrand,
  [mParticle_constants.AD_END]: [mParticle_constants.PREVIOUS_VIDEO, mParticle_constants.PREVIOUS_VIDEO_TYPE],
  [mParticle_constants.AD_POD_START]: [mParticle_constants.ENTITLEMENT, mParticle_constants.GENRE, mParticle_constants.TOKEN_TYPE, mParticle_constants.PREVIOUS_VIDEO, mParticle_constants.PREVIOUS_VIDEO_TYPE],
  [mParticle_constants.AD_POD_END]: [mParticle_constants.ENTITLEMENT, mParticle_constants.GENRE, mParticle_constants.TOKEN_TYPE, mParticle_constants.PREVIOUS_VIDEO, mParticle_constants.PREVIOUS_VIDEO_TYPE],
  [mParticle_constants.DYNAMIC_LEAD_IMPRESSION]: [mParticle_constants.CUSTOM_SHELF_TYPE, mParticle_constants.ITEM_CLICKED_PLAYLIST_NAME, mParticle_constants.ITEM_CLICKED_URL, mParticle_constants.SEASON, mParticle_constants.SHELF_MACHINE_NAME, mParticle_constants.SMART_TILE_EPISODE_TITLE, mParticle_constants.SMART_TILE_LOGIC, mParticle_constants.SMART_TILE_SCENARIO, mParticle_constants.SMART_TILE_TITLE, mParticle_constants.SMART_TILE_VIDEO_ID],
  [mParticle_constants.LINEAR_AD_POD_START]: [mParticle_constants.GENRE, mParticle_constants.CALLSIGN, mParticle_constants.HOME_STATION, mParticle_constants.GEO_STATION, mParticle_constants.TOKEN_TYPE, mParticle_constants.ENTITLEMENT],
  [mParticle_constants.LINEAR_AD_POD_END]: [mParticle_constants.GENRE, mParticle_constants.CALLSIGN, mParticle_constants.HOME_STATION, mParticle_constants.GEO_STATION, mParticle_constants.TOKEN_TYPE, mParticle_constants.ENTITLEMENT],
  [mParticle_constants.LINEAR_END]: [mParticle_constants.VIDEO_DURATION],
  [mParticle_constants.LINEAR_PROGRAM_END]: [mParticle_constants.VIDEO_DURATION],
  [mParticle_constants.LIVE_TO_VOD_IMPRESSION]: [mParticle_constants.BRAND, mParticle_constants.ITEM_CLICKED_NAME, mParticle_constants.SHOW, mParticle_constants.SEASON],
  [mParticle_constants.PLAYER_LOAD_ABANDONED]: [mParticle_constants.CUSTOM_SHELF_TYPE, mParticle_constants.LANGUAGE, mParticle_constants.SPORT, mParticle_constants.LEAGUE]
};
function excludeEventProps(eventName, attributesRef) {
  var _attributeExclusions$;
  if (attributeExclusions !== null && attributeExclusions !== void 0 && (_attributeExclusions$ = attributeExclusions[eventName]) !== null && _attributeExclusions$ !== void 0 && _attributeExclusions$.length) {
    attributeExclusions[eventName].forEach(attr => {
      if (typeof attributesRef[attr] !== 'undefined') {
        delete attributesRef[attr];
      }
    });
  }
}
/* harmony default export */ var analytics_excludeEventProps = (excludeEventProps);
// EXTERNAL MODULE: ./lib/patterns/pllContainer/pllLoadSteps.js
var pllLoadSteps = __webpack_require__(87096);
// EXTERNAL MODULE: ./utils/isClientSide.js
var isClientSide = __webpack_require__(15343);
;// CONCATENATED MODULE: ./utils/waitForPersonalization.js


const STORE_INTERVAL = 50;
const STORE_MAX_WAIT = 1000;
const PERSONALIZATION_MAX_WAIT = 30000;
const waitForStore = () => {
  var _window;
  if ((_window = window) !== null && _window !== void 0 && _window.TheStore) {
    return Promise.resolve(window.TheStore);
  }
  return new Promise((resolve, reject) => {
    let elapsedDuration = 0;
    const interval = setInterval(() => {
      var _window2;
      elapsedDuration += STORE_INTERVAL;
      if ((_window2 = window) !== null && _window2 !== void 0 && _window2.TheStore) {
        clearInterval(interval);
        resolve(window.TheStore);
      } else if (elapsedDuration > STORE_MAX_WAIT) {
        clearInterval(interval);
        reject();
      }
    }, STORE_INTERVAL);
  });
};
const checkIfPersonalized = state => {
  var _state$launchDarkly, _state$launchDarkly$c, _state$client;
  const isReportingServerFeatureFlag = (state === null || state === void 0 ? void 0 : (_state$launchDarkly = state.launchDarkly) === null || _state$launchDarkly === void 0 ? void 0 : (_state$launchDarkly$c = _state$launchDarkly.client) === null || _state$launchDarkly$c === void 0 ? void 0 : _state$launchDarkly$c.isSendingServerFlagsEnabled) === true;

  // if the reporting server feature flag LD is enabled, wait for both personalization to complete
  // as well as the server feature flags to be reported.
  // otherwise, just wait for personalization
  const completedLoadSteps = state === null || state === void 0 ? void 0 : (_state$client = state.client) === null || _state$client === void 0 ? void 0 : _state$client.completedLoadSteps;
  return (completedLoadSteps === null || completedLoadSteps === void 0 ? void 0 : completedLoadSteps[pllLoadSteps/* INITIAL_PERSONALIZATION */.zS]) === true && (isReportingServerFeatureFlag ? (completedLoadSteps === null || completedLoadSteps === void 0 ? void 0 : completedLoadSteps[pllLoadSteps/* REPORTED_SERVER_FEATURE_FLAGS */.aS]) === true : true);
};
const globalPersonalizationMonitor = () => {
  var _window3, _store, _store$getState;
  let store = (_window3 = window) === null || _window3 === void 0 ? void 0 : _window3.TheStore;
  let state = (_store = store) === null || _store === void 0 ? void 0 : (_store$getState = _store.getState) === null || _store$getState === void 0 ? void 0 : _store$getState.call(_store);
  let isPersonalized = state ? checkIfPersonalized(state) : false;
  let isPersonalizationFailed = false;
  const subscribers = [];
  let errorTimer;

  // this handles clearing out the mParticle queue in three cases:
  // 1. Personalization load step completed
  // 2. Personalization data failed
  // 3. Someone wants to manually force the queued mParticle events to fire immediately
  const onPersonalizationComplete = function () {
    let isEarlyRelease = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    let isFailure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    isPersonalized = false;
    if (!isEarlyRelease && !isFailure) {
      isPersonalized = true;
      isPersonalizationFailed = false;
    } else if (isFailure) {
      isPersonalizationFailed = true;
    }

    // run the callback on each subscriber
    subscribers.forEach(subscriberCb => {
      subscriberCb === null || subscriberCb === void 0 ? void 0 : subscriberCb({
        isPersonalized,
        isFailure
      });
    });
    errorTimer && clearTimeout(errorTimer);

    // clear all the subscribers to avoid holding references to them
    subscribers.splice(0, subscribers.length);
  };
  const subscribe = subscriberCallback => {
    if (isPersonalized || isPersonalizationFailed) {
      // We have already reached a stable state: either personalization is already ready
      // or it has already failed. We can respond immediately.
      subscriberCallback(isPersonalized);
      return;
    }
    subscribers.push(subscriberCallback);
  };

  // this will release the mParticle queue immediately in a non-failure state
  // but it will not change the global personalization readiness state to true
  const release = releaseCallback => {
    onPersonalizationComplete(true);
    releaseCallback && releaseCallback();
  };

  // Redux store may not be available depending on when the file is run
  // in that case, wait for it to become available
  waitForStore().then(resolvedStore => {
    var _store$getState2, _store2;
    store = resolvedStore;
    state = (_store$getState2 = (_store2 = store).getState) === null || _store$getState2 === void 0 ? void 0 : _store$getState2.call(_store2);
    isPersonalized = state ? checkIfPersonalized(state) : false;

    // if the store is already personalized, we can stop here
    if (isPersonalized) {
      onPersonalizationComplete();
      return;
    }

    // otherwise, subscribe to all updates in the Redux store and check
    // if the personalization load step is complete at the end of each
    store.subscribe(() => {
      const newState = store.getState();
      const isPersonalizationComplete = checkIfPersonalized(newState);
      if (isPersonalizationComplete === isPersonalized) {
        // state has not changed
        return;
      }

      // moving from unpersonalized state to personalized
      if (isPersonalizationComplete) {
        onPersonalizationComplete();
      } else {
        // moving from personalized state to unpersonalized
        // this happens during the login process - we will unset the load steps
        // to trigger the user data fetches
        isPersonalized = false;
      }
    });

    // if the personalization load step isn't complete within 30 seconds, release
    // the mParticle queue so they are recorded, but in an error state
    errorTimer = setTimeout(() => onPersonalizationComplete(true, true), PERSONALIZATION_MAX_WAIT);
  }).catch(() => {
    // if an error occurs, also release the mParticle queue in an error state
    onPersonalizationComplete(true, true);
  });
  return {
    subscribe,
    release
  };
};
const singletonMonitor = (0,isClientSide/* default */.Z)() ? globalPersonalizationMonitor() : undefined;

// this wraps the singleton monitor subscription into a Promise, which allows
// listeners to simply await for personalization
const waitForPersonalization = () => {
  if (!singletonMonitor) {
    return Promise.reject();
  }
  return new Promise((resolve, reject) => {
    singletonMonitor.subscribe(_ref => {
      let {
        isPersonalized,
        isFailure
      } = _ref;
      if (isFailure) {
        reject();
      } else {
        resolve(isPersonalized);
      }
    });
  });
};
/* harmony default export */ var utils_waitForPersonalization = (waitForPersonalization);
;// CONCATENATED MODULE: ./lib/analytics/mParticle.js




/**
 * This file creates a wrapper to expose the mParticle API.
 * @see http://docs.mparticle.com/developers/sdk/javascript/getting-started/
 * @see https://github.com/mParticle/mparticle-sdk-javascript
 */






















const defaultApiKey = config/* default */.Z.get('mParticle.apiKey');
const isDevelopmentMode = config/* default */.Z.get('mParticle.isDevelopmentMode');
const productName = config/* default */.Z.get('mParticle.productName');
const cookieDomain = config/* default */.Z.get('app.cookieDomain');
const appName = config/* default */.Z.get('app.appName');
const mParticleConfig = {
  isDevelopmentMode,
  dataPlan: {
    planId: config/* default */.Z.get('mParticle.planId')
  },
  v1SecureServiceUrl: config/* default */.Z.get('mParticle.v1SecureServiceUrl'),
  v2SecureServiceUrl: config/* default */.Z.get('mParticle.v2SecureServiceUrl'),
  v3SecureServiceUrl: config/* default */.Z.get('mParticle.v3SecureServiceUrl'),
  configUrl: config/* default */.Z.get('mParticle.configUrl'),
  identityUrl: config/* default */.Z.get('mParticle.identityUrl'),
  aliasUrl: config/* default */.Z.get('mParticle.aliasUrl'),
  appVersion: package_0.version
};
const mParticleOptions = config/* default */.Z.get('mParticle.options', {});
const mParticle = {
  SDK: new (nbc_mparticle_media_sdk_default())()
};
const DEFAULT_VALUE = mParticle_constants.NONE;

/**
 * Initialise the mParticle SDK. Ensure this is called prior to using any of
 * the functions which directly access the window.mParticle object.
 *
 * @return {Promise}
 *   Returns a handle to window.mParticle once resolved.
 */
mParticle.initialize = () => new Promise((resolve, reject) => {
  let attempts = 0;
  function methodsLoaded() {
    if (!window.TheStore) {
      reject(new Error('Reference to Redux store not found.'));
    }
    if (!mParticle.SDK.isInitialized) {
      const apiKey = get_default()(window.TheStore.getState(), ['client', 'mParticleApiKey'], defaultApiKey);
      mParticle.SDK.init(apiKey, mParticleConfig, mParticleOptions);
    }
    const instance = mParticle.SDK.getInstance();
    if (instance && instance.Identity.getCurrentUser()) {
      resolve(instance);
    } else if (attempts >= 100) {
      reject(new Error('mParticle SDK failed to init user Identity.'));
    } else {
      attempts += 1;
      setTimeout(methodsLoaded, 100);
    }
  }
  methodsLoaded();
});

/**
 * Login a user to mParticle using their email address.
 *
 * @param {string} email
 *   The users email address.
 *
 * @return {Promise}
 *   Resolves with the new mParticle ID as a string.
 */
mParticle.login = email => new Promise((resolve, reject) => {
  mParticle.initialize().then(mp => mp.Identity.login({
    userIdentities: {
      email,
      ...(0,getAdobeTagging/* getAudience */.KG)()
    }
  }, result => {
    if (result.httpCode === 200) {
      const mParticleId = get_default()(result, 'body.mpid');
      mParticle.setIdCookie(mParticleId);
      return resolve(mParticleId);
    }
    return reject();
  })).catch(e => isDevelopmentMode && park_logger_default().error(e));
});

/**
 * Logout a user from mParticle and reset their mParticle ID.
 *
 * @return {Promise}
 *   Resolves with the new mParticle ID as a string.
 */
mParticle.logout = () => new Promise(resolve => {
  mParticle.initialize().then(mp => mp.Identity.logout({}, result => {
    const mParticleId = get_default()(result, 'body.mpid');
    mParticle.setIdCookie(mParticleId);
    return resolve(mParticleId);
  })).catch(e => isDevelopmentMode && park_logger_default().error(e));
});
mParticle.setIdCookie = mParticleId => cookies_default().set('mParticleId', mParticleId, {
  domain: cookieDomain,
  expires: 10 * 365 * 24 * 3600 // 10 years
});

/**
 * Grab the current users unique mParticle ID.
 *
 * @return {Promise}
 *   Resolves with the mParticle ID as a string.
 */
mParticle.getId = () => mParticle.initialize().then(mp => {
  const mParticleId = mp.Identity.getCurrentUser().getMPID().toString();

  // We might as well ensure the cookie is up to date whenever we interact
  // with mParticle.
  mParticle.setIdCookie(mParticleId);
  return mParticleId;
}).catch(e => {
  if (isDevelopmentMode) {
    park_logger_default().error(e);
  }

  // Treat the user as a first-time visitor.
  cookies_default().expire('mParticleId', {
    domain: cookieDomain
  });

  // If mParticle fails, fallback to 0 to offer a degraded experience.
  return '0';
});

/**
 * Tracks an event in mParticle.
 *
 * @param {Object} properties
 *   Describes the event to track.
 * @param {string} properties.type
 *   The type of the event, e.g. 'UserPreference'. Reference the official docs
 *   for the complete list.
 * @param {string} properties.name
 *   The name of the event to be tracked.
 * @param {Object} properties.attributes
 *   Attributes to be sent along with the event. You can also use this to
 *   overwrite "core" attributes (e.g. Platform, MVPD etc).
 *
 * @return {Promise}
 *   Resolves when event is logged.
 */
mParticle.trackEvent = async _ref => {
  let {
    type,
    name,
    attributes,
    pathname
  } = _ref;
  try {
    var _mp$sessionManager, _mp$sessionManager$ge, _analytics$series, _analytics$seasonNumb, _state$adobePass, _state$adobePass$mvpd, _analytics$brand$titl, _analytics$brand, _params$utm_source, _params$utm_medium, _params$utm_campaign, _params$utm_term, _params$utm_content, _mpReferrer3, _mpReferrer$pageType, _mpReferrer4, _mpReferrer$previousP, _mpReferrer5, _branch$feature, _branch$campaign, _branch$channel, _branch$tags, _getSearchEngine;
    const mp = await mParticle.initialize();
    const mParticleSessionId = await (mp === null || mp === void 0 ? void 0 : (_mp$sessionManager = mp.sessionManager) === null || _mp$sessionManager === void 0 ? void 0 : (_mp$sessionManager$ge = _mp$sessionManager.getSession) === null || _mp$sessionManager$ge === void 0 ? void 0 : _mp$sessionManager$ge.call(_mp$sessionManager));
    if (!window.TheStore) {
      throw new Error('Reference to Redux store not found.');
    }

    // Core attributes are attached to ALL mParticle events that we track.
    // CAUTION: Check your Redux state before altering any logic here.
    const state = window.TheStore.getState();
    const currentPath = pathname || window.location.pathname;
    const bffData = get_default()(state.pages, "[".concat(currentPath, "]")) || get_default()(state.pages, "[".concat((0,getShowPath/* default */.Z)(currentPath), "]"));
    let mpReferrer = JSON.parse(window.sessionStorage.getItem('mpReferrer'));
    const analytics = get_default()(bffData, 'analytics');
    const branch = get_default()(state.branch, 'branch');
    const params = lib_default().parse(window.location.search.substring(1));
    const isFirstPageLoad = get_default()(state, ['navigation', 'previousLocation', 'pathname'], '') === '';
    const referrer = isFirstPageLoad && document.referrer;
    const queryParams = new URL(window.location).searchParams;
    const isFirstLaunch = !referrer && !mpReferrer;
    const activationBrand = get_default()(config/* default */.Z.get('brands'), [get_default()(state.client, ['activation', 'brand']) || queryParams.get('brand') || queryParams.get('Brand'), 'brandDisplayTitle']);
    const isPersonalizationEnabled = (0,checkIsPersonalizationEnabled/* default */.Z)(state);
    const isHomePage = currentPath === '/';
    const hasProfile = (0,identity/* hasSession */.Hk)();
    const hasPeacockProfile = get_default()(state, ['account', 'isPeacockUser'], false);
    try {
      await utils_waitForPersonalization();
    } catch (err) {
      // continue on error
      park_logger_default().warn('mParticle no longer waiting for server feature flags - firing queued event');
    }

    // Store Referrer in the session for convenient use in subsequent events.
    if (name === 'Page Load' && attributes['Page Name'] && attributes['Page Type']) {
      var _mpReferrer, _mpReferrer2;
      mpReferrer = {
        pageName: attributes['Page Name'],
        pageType: attributes['Page Type'],
        previousPageName: (_mpReferrer = mpReferrer) === null || _mpReferrer === void 0 ? void 0 : _mpReferrer.pageName,
        previousPageType: (_mpReferrer2 = mpReferrer) === null || _mpReferrer2 === void 0 ? void 0 : _mpReferrer2.pageType
      };
      window.sessionStorage.setItem('mpReferrer', JSON.stringify(mpReferrer));
    }

    // We can't seem to fully rely on window.location giving us a fully synced
    // pathname and query params object. Checking Redux state is the safest
    // way to determine if we are in the activation flow.
    const isActivateFlow = state.client.activation !== null;
    const coreAttributes = {
      [mParticle_constants.PLATFORM]: (0,getPlatform/* default */.Z)(),
      [mParticle_constants.PRODUCT]: activationBrand && isActivateFlow ? "".concat(activationBrand, " App") : productName,
      [mParticle_constants.SHOW]: (_analytics$series = analytics === null || analytics === void 0 ? void 0 : analytics.series) !== null && _analytics$series !== void 0 ? _analytics$series : DEFAULT_VALUE,
      [mParticle_constants.SEASON]: (_analytics$seasonNumb = analytics === null || analytics === void 0 ? void 0 : analytics.seasonNumber) !== null && _analytics$seasonNumb !== void 0 ? _analytics$seasonNumb : DEFAULT_VALUE,
      [mParticle_constants.MVPD]: ((_state$adobePass = state.adobePass) === null || _state$adobePass === void 0 ? void 0 : (_state$adobePass$mvpd = _state$adobePass.mvpd) === null || _state$adobePass$mvpd === void 0 ? void 0 : _state$adobePass$mvpd.mvpd_id) || mParticle_constants.UNAUTHENTICATED,
      [mParticle_constants.PROFILE]: hasProfile ? mParticle_constants.FREE : mParticle_constants.UNAUTHENTICATED,
      [mParticle_constants.PEACOCK_ACCOUNT_TIER]: hasProfile && hasPeacockProfile ? 'Free' : DEFAULT_VALUE,
      [mParticle_constants.BRAND]: (_analytics$brand$titl = analytics === null || analytics === void 0 ? void 0 : (_analytics$brand = analytics.brand) === null || _analytics$brand === void 0 ? void 0 : _analytics$brand.title) !== null && _analytics$brand$titl !== void 0 ? _analytics$brand$titl : DEFAULT_VALUE,
      [mParticle_constants.UTM_SOURCE]: (_params$utm_source = params.utm_source) !== null && _params$utm_source !== void 0 ? _params$utm_source : DEFAULT_VALUE,
      [mParticle_constants.UTM_MEDIUM]: (_params$utm_medium = params.utm_medium) !== null && _params$utm_medium !== void 0 ? _params$utm_medium : DEFAULT_VALUE,
      [mParticle_constants.UTM_CAMPAIGN]: (_params$utm_campaign = params.utm_campaign) !== null && _params$utm_campaign !== void 0 ? _params$utm_campaign : DEFAULT_VALUE,
      [mParticle_constants.UTM_TERM]: (_params$utm_term = params.utm_term) !== null && _params$utm_term !== void 0 ? _params$utm_term : DEFAULT_VALUE,
      [mParticle_constants.UTM_CONTENT]: (_params$utm_content = params.utm_content) !== null && _params$utm_content !== void 0 ? _params$utm_content : DEFAULT_VALUE,
      [mParticle_constants.ORIENTATION]: state.client.userAgent.isMobile && window.innerHeight > window.innerWidth ? 'Portrait' : 'Landscape',
      [mParticle_constants.AD_BLOCKER]: state.client.adBlock ? 'True' : 'False',
      [mParticle_constants.AD_TRACKING_OPT_OUT]: 'False',
      [mParticle_constants.PAGE_NAME]: attributes['Page Name'] || ((_mpReferrer3 = mpReferrer) === null || _mpReferrer3 === void 0 ? void 0 : _mpReferrer3.pageName) || DEFAULT_VALUE,
      [mParticle_constants.PAGE_TYPE]: (_mpReferrer$pageType = (_mpReferrer4 = mpReferrer) === null || _mpReferrer4 === void 0 ? void 0 : _mpReferrer4.pageType) !== null && _mpReferrer$pageType !== void 0 ? _mpReferrer$pageType : DEFAULT_VALUE,
      [mParticle_constants.REFERRING_PAGE]: (_mpReferrer$previousP = (_mpReferrer5 = mpReferrer) === null || _mpReferrer5 === void 0 ? void 0 : _mpReferrer5.previousPageName) !== null && _mpReferrer$previousP !== void 0 ? _mpReferrer$previousP : DEFAULT_VALUE,
      [mParticle_constants.FIRST_VISIT]: (0,isDayZeroUser/* default */.ZP)(),
      [mParticle_constants.BRANCH_FEATURE]: (_branch$feature = branch === null || branch === void 0 ? void 0 : branch.feature) !== null && _branch$feature !== void 0 ? _branch$feature : DEFAULT_VALUE,
      [mParticle_constants.BRANCH_CAMPAIGN]: (_branch$campaign = branch === null || branch === void 0 ? void 0 : branch.campaign) !== null && _branch$campaign !== void 0 ? _branch$campaign : DEFAULT_VALUE,
      [mParticle_constants.BRANCH_CHANNEL]: (_branch$channel = branch === null || branch === void 0 ? void 0 : branch.channel) !== null && _branch$channel !== void 0 ? _branch$channel : DEFAULT_VALUE,
      [mParticle_constants.BRANCH_TAGS]: (_branch$tags = branch === null || branch === void 0 ? void 0 : branch.tags) !== null && _branch$tags !== void 0 ? _branch$tags : DEFAULT_VALUE,
      [mParticle_constants.BRANCH_MPARTICLE_ID]: DEFAULT_VALUE,
      [mParticle_constants.OPEN_TYPE]: branch ? 'Branch Link' : isFirstLaunch ? isHomePage ? 'Launch' : 'Deeplink' : DEFAULT_VALUE,
      [mParticle_constants.SEO]: (_getSearchEngine = utils_getSearchEngine(referrer)) !== null && _getSearchEngine !== void 0 ? _getSearchEngine : DEFAULT_VALUE,
      [mParticle_constants.MPARTICLE_SESSION_ID]: mParticleSessionId !== null && mParticleSessionId !== void 0 ? mParticleSessionId : DEFAULT_VALUE
    };

    // Sometimes events share default attributes
    // but may not need to have some default attributes reported
    // this is where to exclude those select attributes.
    analytics_excludeEventProps(name, coreAttributes);
    analytics_excludeEventProps(name, attributes);

    // Adds extra required attributes to Page Load events.
    if (name === 'Page Load') {
      var _analytics$sport, _analytics$league, _attributes$Category;
      coreAttributes['Page Load Duration'] = getPageLoadDuration(window.performance);
      coreAttributes.Sport = (_analytics$sport = analytics === null || analytics === void 0 ? void 0 : analytics.sport) !== null && _analytics$sport !== void 0 ? _analytics$sport : DEFAULT_VALUE;
      coreAttributes.League = (_analytics$league = analytics === null || analytics === void 0 ? void 0 : analytics.league) !== null && _analytics$league !== void 0 ? _analytics$league : DEFAULT_VALUE;
      coreAttributes.URL = window.location.href;
      coreAttributes.Category = (_attributes$Category = attributes === null || attributes === void 0 ? void 0 : attributes.Category) !== null && _attributes$Category !== void 0 ? _attributes$Category : DEFAULT_VALUE;
    }

    // Add global variable for activate page flow to all events.
    const isQRCode = get_default()(state, ['client', 'activation', 'isQRCode']);
    coreAttributes['QR Code'] = hasProfile && isQRCode ? 'True' : 'False';
    if (name === 'Shelf Impression') {
      var _previousReferrer$pre;
      const sessionReferrer = window.sessionStorage.getItem('mpReferrer');
      const previousReferrer = JSON.parse(sessionReferrer);
      attributes['Referring Page'] = (_previousReferrer$pre = previousReferrer === null || previousReferrer === void 0 ? void 0 : previousReferrer.previousPageName) !== null && _previousReferrer$pre !== void 0 ? _previousReferrer$pre : DEFAULT_VALUE;
    }

    // Log the event via the mParticle SDK.
    if (name === mParticle_constants.PAGE_LOAD || name === mParticle_constants.VIDEO_START || name === mParticle_constants.LINEAR_START) {
      // These events must also pass Floodlight custom flags.
      const customFlags = {
        'DoubleClick.Counter': 'standard'
      };
      mp.logEvent(name, mp.EventType[type], {
        ...coreAttributes,
        ...attributes
      }, customFlags);
      isDevelopmentMode && park_logger_default().log("mParticle: customFlags Floodlight", customFlags);
    } else {
      // Normal event without the Floodlight
      mp.logEvent(name, mp.EventType[type], {
        ...coreAttributes,
        ...attributes
      });
    }

    // Listen to these events, and refresh
    // launch darkly instance if any of those
    // is fired.
    const shouldReIdentifyUser = ['NBC Authentication Success', 'Authentication Success', 'NBC Sign Out', 'Video End'].find(triggerEvent => triggerEvent === name);
    if (shouldReIdentifyUser) {
      lib_launchDarkly/* default */.Z.reidentifyUser(isPersonalizationEnabled).then(() => window.TheStore.dispatch((0,launchDarkly/* setLaunchDarklyClientFlags */.EK)(isPersonalizationEnabled)));
    }

    // Log all attributes when in development mode.
    isDevelopmentMode && park_logger_default().log("mParticle: ".concat(name, " (").concat(type, " event)"), {
      ...coreAttributes,
      ...attributes
    });
  } catch (e) {
    isDevelopmentMode && park_logger_default().error(e);
  }
};

/**
 * Sets a user attribute in mParticle for the current user.
 *
 * @param {object} attributes
 *   Key and value pairs for user attributes.
 * @param {boolean} shouldOverwrite
 *   Optional, whether existing attributes be overwritten. Defaults to true.
 *
 * @return {Promise}
 *   Resolves when user attributes are updated.
 */
mParticle.setUserAttributes = function (attributes) {
  let shouldOverwrite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return mParticle.initialize().then(mp => {
    const currentAttributes = mp.Identity.getCurrentUser().getAllUserAttributes();
    const newAttributes = shouldOverwrite ? attributes : omit_default()(attributes, (value, key) => currentAttributes[key]);
    Object.keys(newAttributes).forEach(key => {
      if (Array.isArray(newAttributes[key])) {
        mp.Identity.getCurrentUser().setUserAttributeList(key, newAttributes[key]);
      } else {
        mp.Identity.getCurrentUser().setUserAttribute(key, newAttributes[key]);
      }
    });
    isDevelopmentMode && park_logger_default().log("mParticle: User attributes added to queue (overwrite: ".concat(shouldOverwrite, ")"), {
      ...newAttributes
    });
  }).catch(e => isDevelopmentMode && park_logger_default().error(e));
};

/**
 * Grab the current users' requested mParticle attribute from localStorage.
 * Use this method sparingly as browser caches can be cleared.
 *
 * @param {string} key
 *   The key for the user attribute.
 *
 * @return {Promise}
 *   Resolves with the requested attribute, or null if not found.
 */
mParticle.getUserAttribute = key => mParticle.initialize().then(mp => {
  const attributes = mp.Identity.getCurrentUser().getAllUserAttributes();
  return attributes && attributes[key] ? attributes[key] : null;
}).catch(e => isDevelopmentMode && park_logger_default().error(e));

/**
 * Gets the mParticle session
 *
 * @return {string} The mParticle session
 */
mParticle.getSession = () => mParticle.initialize().then(mp => mp.sessionManager.getSession()).catch(e => {
  isDevelopmentMode && park_logger_default().error(e);
  return Promise.reject(e);
});

/**
 * Modify the users mParticle Identity.
 *
 * @param {object} identityRequest
 *   The users identity attributes to modify.
 * @return {Promise}
 *   Resolves when identity attributes are modified successfully.
 */
mParticle.modifyIdentity = identityRequest => mParticle.initialize().then(mp => {
  isDevelopmentMode && park_logger_default().log("mParticle: User Identity added to queue (Modify attributes)", {
    ...identityRequest
  });
  return new Promise(resolve => {
    mp.Identity.modify({
      userIdentities: {
        ...identityRequest
      }
    }, () => {
      resolve();
    });
  });
}).catch(e => {
  isDevelopmentMode && park_logger_default().error(e);
  return Promise.reject(e);
});

/**
 * Identify the users mParticle Identity.
 *
 * @param {object} identityRequest
 *   The users identity attributes to Identify.
 * @return {Promise}
 *   Resolves when attributes are identified successfully.
 */
mParticle.identifyIdentity = identityRequest => mParticle.initialize().then(mp => {
  isDevelopmentMode && park_logger_default().log("mParticle: User Identity added to queue (Identify attributes)", {
    ...identityRequest
  });
  return new Promise(resolve => {
    mp.Identity.identify({
      userIdentities: {
        ...identityRequest
      }
    }, () => {
      resolve();
    });
  });
}).catch(e => {
  isDevelopmentMode && park_logger_default().error(e);
  return Promise.reject(e);
});

/**
 * Create a MediaSession via mParticle.
 *
 * @param {object} params
 *   Parameters to pass to the MediaSession constructor.
 * @return {object}
 *   The newly created media session.
 */
mParticle.createMediaSession = params => mParticle.SDK.createMediaSession(params);

/**
 * Force an immediate bulk upload to mParticle.
 *
 * @return {void}
 */
mParticle.upload = () => {
  const instance = mParticle.SDK.getInstance();
  if (instance !== null && instance !== void 0 && instance.upload) {
    instance.upload();
  }
};

/**
 * Check in local storage if specific shelf was already tracked
 *
 * @param {number} id
 *   Unique id of the shelf.
 * @return {boolean}
 *   Wether or not shelf was tracked.
 */
const isShelfImpressionTracked = id => {
  const ids = JSON.parse(sessionStorage.getItem("".concat(appName, ":trackedShelves"))) || [];
  return ids.includes(id);
};

/**
 * Save in local storage tracking of specific shelf
 *
 * @param {number} id
 *   Unique id of the shelf.
 * @return {void}
 */
const trackShelfImpression = id => {
  const ids = JSON.parse(sessionStorage.getItem("".concat(appName, ":trackedShelves"))) || [];
  if (!ids.includes(id)) {
    ids.push(id);
    sessionStorage.setItem("".concat(appName, ":trackedShelves"), JSON.stringify(ids));
  }
};
/**
 * Create a MediaSession via mParticle.
 *
 * @param {object} shelvesLoad
 *   List of parameters for each shelf in the page.
 * @return {object}
 *   Attributes ready for mParticle event.
 */
const getShelvesLoadData = shelvesLoad => {
  const attributes = {};
  shelvesLoad.forEach((s, i) => {
    var _s$itemsList$toString, _s$itemsList;
    attributes["Custom Shelf Title ".concat(i + 1)] = "".concat(s.listTitle ? "".concat(s.listTitle, ", ") : '').concat(s.machineName);
    attributes["Custom Shelf Items ".concat(i + 1)] = "[".concat((_s$itemsList$toString = s === null || s === void 0 ? void 0 : (_s$itemsList = s.itemsList) === null || _s$itemsList === void 0 ? void 0 : _s$itemsList.toString()) !== null && _s$itemsList$toString !== void 0 ? _s$itemsList$toString : DEFAULT_VALUE, "]");
  });
  return attributes;
};
/* harmony default export */ var analytics_mParticle = (mParticle);

/***/ }),

/***/ 26566:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AD_AUDIENCE: function() { return /* binding */ AD_AUDIENCE; },
/* harmony export */   AD_BLOCKER: function() { return /* binding */ AD_BLOCKER; },
/* harmony export */   AD_END: function() { return /* binding */ AD_END; },
/* harmony export */   AD_EXPERIMENT: function() { return /* binding */ AD_EXPERIMENT; },
/* harmony export */   AD_PARAMETER_DURATION: function() { return /* binding */ AD_PARAMETER_DURATION; },
/* harmony export */   AD_POD_DURATION: function() { return /* binding */ AD_POD_DURATION; },
/* harmony export */   AD_POD_END: function() { return /* binding */ AD_POD_END; },
/* harmony export */   AD_POD_QUANTITY: function() { return /* binding */ AD_POD_QUANTITY; },
/* harmony export */   AD_POD_START: function() { return /* binding */ AD_POD_START; },
/* harmony export */   AD_POD_TYPE: function() { return /* binding */ AD_POD_TYPE; },
/* harmony export */   AD_START: function() { return /* binding */ AD_START; },
/* harmony export */   AD_TRACKING_OPT_OUT: function() { return /* binding */ AD_TRACKING_OPT_OUT; },
/* harmony export */   AD_VARIANT: function() { return /* binding */ AD_VARIANT; },
/* harmony export */   AUTHENTICATION_DURATION: function() { return /* binding */ AUTHENTICATION_DURATION; },
/* harmony export */   AUTHENTICATION_SUCCESS: function() { return /* binding */ AUTHENTICATION_SUCCESS; },
/* harmony export */   AUTHORIZATION_DURATION: function() { return /* binding */ AUTHORIZATION_DURATION; },
/* harmony export */   AUTH_SSO: function() { return /* binding */ AUTH_SSO; },
/* harmony export */   AUTOPLAY: function() { return /* binding */ AUTOPLAY; },
/* harmony export */   BRANCH_CAMPAIGN: function() { return /* binding */ BRANCH_CAMPAIGN; },
/* harmony export */   BRANCH_CHANNEL: function() { return /* binding */ BRANCH_CHANNEL; },
/* harmony export */   BRANCH_FEATURE: function() { return /* binding */ BRANCH_FEATURE; },
/* harmony export */   BRANCH_MPARTICLE_ID: function() { return /* binding */ BRANCH_MPARTICLE_ID; },
/* harmony export */   BRANCH_TAGS: function() { return /* binding */ BRANCH_TAGS; },
/* harmony export */   BRAND: function() { return /* binding */ BRAND; },
/* harmony export */   CALLSIGN: function() { return /* binding */ CALLSIGN; },
/* harmony export */   CASTING: function() { return /* binding */ CASTING; },
/* harmony export */   CC_LANGUAGE: function() { return /* binding */ CC_LANGUAGE; },
/* harmony export */   CLICK_ACTION: function() { return /* binding */ CLICK_ACTION; },
/* harmony export */   CLOSED_CAPTIONING: function() { return /* binding */ CLOSED_CAPTIONING; },
/* harmony export */   CONTENT_CLICK: function() { return /* binding */ CONTENT_CLICK; },
/* harmony export */   CONTENT_POSITION: function() { return /* binding */ CONTENT_POSITION; },
/* harmony export */   CONVERSION: function() { return /* binding */ CONVERSION; },
/* harmony export */   CUSTOM_SHELF_POSITION: function() { return /* binding */ CUSTOM_SHELF_POSITION; },
/* harmony export */   CUSTOM_SHELF_TITLE: function() { return /* binding */ CUSTOM_SHELF_TITLE; },
/* harmony export */   CUSTOM_SHELF_TYPE: function() { return /* binding */ CUSTOM_SHELF_TYPE; },
/* harmony export */   DESTINATION: function() { return /* binding */ DESTINATION; },
/* harmony export */   DESTINATION_TYPE: function() { return /* binding */ DESTINATION_TYPE; },
/* harmony export */   DESTINATION_URL: function() { return /* binding */ DESTINATION_URL; },
/* harmony export */   DEVICE_MODEL: function() { return /* binding */ DEVICE_MODEL; },
/* harmony export */   DURATION: function() { return /* binding */ DURATION; },
/* harmony export */   DURATION_SINCE_LAUNCH: function() { return /* binding */ DURATION_SINCE_LAUNCH; },
/* harmony export */   DURATION_WATCHED: function() { return /* binding */ DURATION_WATCHED; },
/* harmony export */   DYNAMIC_LEAD_IMPRESSION: function() { return /* binding */ DYNAMIC_LEAD_IMPRESSION; },
/* harmony export */   DYNAMIC_LEAD_LOGIC: function() { return /* binding */ DYNAMIC_LEAD_LOGIC; },
/* harmony export */   END_CARD: function() { return /* binding */ END_CARD; },
/* harmony export */   END_CARD_IMPRESSION: function() { return /* binding */ END_CARD_IMPRESSION; },
/* harmony export */   END_CARD_OUTCOME: function() { return /* binding */ END_CARD_OUTCOME; },
/* harmony export */   END_CARD_SELECTED: function() { return /* binding */ END_CARD_SELECTED; },
/* harmony export */   END_CARD_TIME: function() { return /* binding */ END_CARD_TIME; },
/* harmony export */   END_TYPE: function() { return /* binding */ END_TYPE; },
/* harmony export */   ENTITLED: function() { return /* binding */ ENTITLED; },
/* harmony export */   ENTITLEMENT: function() { return /* binding */ ENTITLEMENT; },
/* harmony export */   EPISODE_CREDITS_LEFT: function() { return /* binding */ EPISODE_CREDITS_LEFT; },
/* harmony export */   EPISODE_NUMBER: function() { return /* binding */ EPISODE_NUMBER; },
/* harmony export */   EPISODE_TITLE: function() { return /* binding */ EPISODE_TITLE; },
/* harmony export */   ERROR: function() { return /* binding */ ERROR; },
/* harmony export */   ERROR_CODE: function() { return /* binding */ ERROR_CODE; },
/* harmony export */   ERROR_CONTEXT: function() { return /* binding */ ERROR_CONTEXT; },
/* harmony export */   ERROR_DESCRIPTION: function() { return /* binding */ ERROR_DESCRIPTION; },
/* harmony export */   ERROR_EXPECTED: function() { return /* binding */ ERROR_EXPECTED; },
/* harmony export */   ERROR_FATAL: function() { return /* binding */ ERROR_FATAL; },
/* harmony export */   ERROR_FEATURE_TYPE: function() { return /* binding */ ERROR_FEATURE_TYPE; },
/* harmony export */   ERROR_FRIENDLY_MESSAGE: function() { return /* binding */ ERROR_FRIENDLY_MESSAGE; },
/* harmony export */   ERROR_OMNITURE_CODE: function() { return /* binding */ ERROR_OMNITURE_CODE; },
/* harmony export */   ERROR_SOURCE_ERROR_CODE: function() { return /* binding */ ERROR_SOURCE_ERROR_CODE; },
/* harmony export */   ERROR_SOURCE_TYPE: function() { return /* binding */ ERROR_SOURCE_TYPE; },
/* harmony export */   ERROR_STACK: function() { return /* binding */ ERROR_STACK; },
/* harmony export */   ERROR_SUB_TYPE: function() { return /* binding */ ERROR_SUB_TYPE; },
/* harmony export */   ERROR_SYSTEM: function() { return /* binding */ ERROR_SYSTEM; },
/* harmony export */   ERROR_TYPE: function() { return /* binding */ ERROR_TYPE; },
/* harmony export */   EXIT: function() { return /* binding */ EXIT; },
/* harmony export */   FALSE: function() { return /* binding */ FALSE; },
/* harmony export */   FIRST_VISIT: function() { return /* binding */ FIRST_VISIT; },
/* harmony export */   FREE: function() { return /* binding */ FREE; },
/* harmony export */   GENERETIC_PAGE_VIEW: function() { return /* binding */ GENERETIC_PAGE_VIEW; },
/* harmony export */   GENRE: function() { return /* binding */ GENRE; },
/* harmony export */   GEO_STATION: function() { return /* binding */ GEO_STATION; },
/* harmony export */   GEO_ZIP: function() { return /* binding */ GEO_ZIP; },
/* harmony export */   HOME_STATION: function() { return /* binding */ HOME_STATION; },
/* harmony export */   INITIAL_BUFFER_DURATION: function() { return /* binding */ INITIAL_BUFFER_DURATION; },
/* harmony export */   ITEM_ADD_REMOVE: function() { return /* binding */ ITEM_ADD_REMOVE; },
/* harmony export */   ITEM_CLICKED_BRAND: function() { return /* binding */ ITEM_CLICKED_BRAND; },
/* harmony export */   ITEM_CLICKED_ENTITLEMENT: function() { return /* binding */ ITEM_CLICKED_ENTITLEMENT; },
/* harmony export */   ITEM_CLICKED_LEAGUE: function() { return /* binding */ ITEM_CLICKED_LEAGUE; },
/* harmony export */   ITEM_CLICKED_NAME: function() { return /* binding */ ITEM_CLICKED_NAME; },
/* harmony export */   ITEM_CLICKED_PLAYLIST_NAME: function() { return /* binding */ ITEM_CLICKED_PLAYLIST_NAME; },
/* harmony export */   ITEM_CLICKED_PLAYLIST_POSITION: function() { return /* binding */ ITEM_CLICKED_PLAYLIST_POSITION; },
/* harmony export */   ITEM_CLICKED_SEASON: function() { return /* binding */ ITEM_CLICKED_SEASON; },
/* harmony export */   ITEM_CLICKED_SHOW: function() { return /* binding */ ITEM_CLICKED_SHOW; },
/* harmony export */   ITEM_CLICKED_SPORT: function() { return /* binding */ ITEM_CLICKED_SPORT; },
/* harmony export */   ITEM_CLICKED_STATE: function() { return /* binding */ ITEM_CLICKED_STATE; },
/* harmony export */   ITEM_CLICKED_TYPE: function() { return /* binding */ ITEM_CLICKED_TYPE; },
/* harmony export */   ITEM_CLICKED_URL: function() { return /* binding */ ITEM_CLICKED_URL; },
/* harmony export */   ITEM_CLICKED_VIDEO_ID: function() { return /* binding */ ITEM_CLICKED_VIDEO_ID; },
/* harmony export */   ITEM_FAVORITED: function() { return /* binding */ ITEM_FAVORITED; },
/* harmony export */   ITEM_SHARED_NAME: function() { return /* binding */ ITEM_SHARED_NAME; },
/* harmony export */   LANGUAGE: function() { return /* binding */ LANGUAGE; },
/* harmony export */   LEAGUE: function() { return /* binding */ LEAGUE; },
/* harmony export */   LINEAR_AD_END: function() { return /* binding */ LINEAR_AD_END; },
/* harmony export */   LINEAR_AD_POD_END: function() { return /* binding */ LINEAR_AD_POD_END; },
/* harmony export */   LINEAR_AD_POD_START: function() { return /* binding */ LINEAR_AD_POD_START; },
/* harmony export */   LINEAR_AD_START: function() { return /* binding */ LINEAR_AD_START; },
/* harmony export */   LINEAR_DURATION: function() { return /* binding */ LINEAR_DURATION; },
/* harmony export */   LINEAR_END: function() { return /* binding */ LINEAR_END; },
/* harmony export */   LINEAR_PROGRAM_END: function() { return /* binding */ LINEAR_PROGRAM_END; },
/* harmony export */   LINEAR_PROGRAM_START: function() { return /* binding */ LINEAR_PROGRAM_START; },
/* harmony export */   LINEAR_START: function() { return /* binding */ LINEAR_START; },
/* harmony export */   LIVE_TO_VOD_IMPRESSION: function() { return /* binding */ LIVE_TO_VOD_IMPRESSION; },
/* harmony export */   LOCKUP: function() { return /* binding */ LOCKUP; },
/* harmony export */   LOCKUP_CONTENT_POSITION: function() { return /* binding */ LOCKUP_CONTENT_POSITION; },
/* harmony export */   MARKETING_MODULE_IMPRESSION: function() { return /* binding */ MARKETING_MODULE_IMPRESSION; },
/* harmony export */   MODAL_LOAD: function() { return /* binding */ MODAL_LOAD; },
/* harmony export */   MODAL_NAME: function() { return /* binding */ MODAL_NAME; },
/* harmony export */   MODAL_TYPE: function() { return /* binding */ MODAL_TYPE; },
/* harmony export */   MPARTICLE_SESSION_ID: function() { return /* binding */ MPARTICLE_SESSION_ID; },
/* harmony export */   MVPD: function() { return /* binding */ MVPD; },
/* harmony export */   MVPD_EXPIRATION_DATE: function() { return /* binding */ MVPD_EXPIRATION_DATE; },
/* harmony export */   MVPD_PAGE_ABANDONED: function() { return /* binding */ MVPD_PAGE_ABANDONED; },
/* harmony export */   NAVIGATION: function() { return /* binding */ NAVIGATION; },
/* harmony export */   NBC_AUTHENTICATION_SUCCESS: function() { return /* binding */ NBC_AUTHENTICATION_SUCCESS; },
/* harmony export */   NBC_SIGN_OUT: function() { return /* binding */ NBC_SIGN_OUT; },
/* harmony export */   NONE: function() { return /* binding */ NONE; },
/* harmony export */   NOTIFICATION_TITLE: function() { return /* binding */ NOTIFICATION_TITLE; },
/* harmony export */   OPEN_TYPE: function() { return /* binding */ OPEN_TYPE; },
/* harmony export */   ORIENTATION: function() { return /* binding */ ORIENTATION; },
/* harmony export */   PAGE_LOAD: function() { return /* binding */ PAGE_LOAD; },
/* harmony export */   PAGE_NAME: function() { return /* binding */ PAGE_NAME; },
/* harmony export */   PAGE_TYPE: function() { return /* binding */ PAGE_TYPE; },
/* harmony export */   PEACOCK_ACCOUNT_TIER: function() { return /* binding */ PEACOCK_ACCOUNT_TIER; },
/* harmony export */   PERCENTAGE_COMPLETE: function() { return /* binding */ PERCENTAGE_COMPLETE; },
/* harmony export */   PLATFORM: function() { return /* binding */ PLATFORM; },
/* harmony export */   PLAYER_LOAD_ABANDONED: function() { return /* binding */ PLAYER_LOAD_ABANDONED; },
/* harmony export */   PLAYER_LOAD_TIME: function() { return /* binding */ PLAYER_LOAD_TIME; },
/* harmony export */   PLAYER_NAME: function() { return /* binding */ PLAYER_NAME; },
/* harmony export */   PLAYLIST_NAME: function() { return /* binding */ PLAYLIST_NAME; },
/* harmony export */   PLAYLIST_POSITION: function() { return /* binding */ PLAYLIST_POSITION; },
/* harmony export */   PREPARATION_DURATION: function() { return /* binding */ PREPARATION_DURATION; },
/* harmony export */   PREVIOUS_VIDEO: function() { return /* binding */ PREVIOUS_VIDEO; },
/* harmony export */   PREVIOUS_VIDEO_TYPE: function() { return /* binding */ PREVIOUS_VIDEO_TYPE; },
/* harmony export */   PRODUCT: function() { return /* binding */ PRODUCT; },
/* harmony export */   PROFILE: function() { return /* binding */ PROFILE; },
/* harmony export */   PROFILE_UPDATE: function() { return /* binding */ PROFILE_UPDATE; },
/* harmony export */   PROGRAM_ORDER: function() { return /* binding */ PROGRAM_ORDER; },
/* harmony export */   PUSH_OPT_OUT: function() { return /* binding */ PUSH_OPT_OUT; },
/* harmony export */   REFERRING_PAGE: function() { return /* binding */ REFERRING_PAGE; },
/* harmony export */   REGISTRATION_REFERRER: function() { return /* binding */ REGISTRATION_REFERRER; },
/* harmony export */   REGISTRATION_SOURCE: function() { return /* binding */ REGISTRATION_SOURCE; },
/* harmony export */   REGISTRATION_SUCCESS: function() { return /* binding */ REGISTRATION_SUCCESS; },
/* harmony export */   REGULAR: function() { return /* binding */ REGULAR; },
/* harmony export */   RESTRICTED: function() { return /* binding */ RESTRICTED; },
/* harmony export */   RESULT_COUNT: function() { return /* binding */ RESULT_COUNT; },
/* harmony export */   RESUME: function() { return /* binding */ RESUME; },
/* harmony export */   RESUME_TIME: function() { return /* binding */ RESUME_TIME; },
/* harmony export */   RETRANS_DURATION: function() { return /* binding */ RETRANS_DURATION; },
/* harmony export */   SCREEN_HEIGHT: function() { return /* binding */ SCREEN_HEIGHT; },
/* harmony export */   SCREEN_WIDTH: function() { return /* binding */ SCREEN_WIDTH; },
/* harmony export */   SEARCH_OUTCOME: function() { return /* binding */ SEARCH_OUTCOME; },
/* harmony export */   SEARCH_RESULT: function() { return /* binding */ SEARCH_RESULT; },
/* harmony export */   SEARCH_TERM: function() { return /* binding */ SEARCH_TERM; },
/* harmony export */   SEASON: function() { return /* binding */ SEASON; },
/* harmony export */   SECONDARY_GENRE: function() { return /* binding */ SECONDARY_GENRE; },
/* harmony export */   SELECTION_TYPE: function() { return /* binding */ SELECTION_TYPE; },
/* harmony export */   SEO: function() { return /* binding */ SEO; },
/* harmony export */   SERIES_URL_ALIAS: function() { return /* binding */ SERIES_URL_ALIAS; },
/* harmony export */   SHELF_IMPRESSION: function() { return /* binding */ SHELF_IMPRESSION; },
/* harmony export */   SHELF_MACHINE_NAME: function() { return /* binding */ SHELF_MACHINE_NAME; },
/* harmony export */   SHOW: function() { return /* binding */ SHOW; },
/* harmony export */   SIGN_IN_TYPE: function() { return /* binding */ SIGN_IN_TYPE; },
/* harmony export */   SMART_TILE_EPISODE_TITLE: function() { return /* binding */ SMART_TILE_EPISODE_TITLE; },
/* harmony export */   SMART_TILE_LOGIC: function() { return /* binding */ SMART_TILE_LOGIC; },
/* harmony export */   SMART_TILE_SCENARIO: function() { return /* binding */ SMART_TILE_SCENARIO; },
/* harmony export */   SMART_TILE_TITLE: function() { return /* binding */ SMART_TILE_TITLE; },
/* harmony export */   SMART_TILE_VIDEO_ID: function() { return /* binding */ SMART_TILE_VIDEO_ID; },
/* harmony export */   SOCIAL_ACTION: function() { return /* binding */ SOCIAL_ACTION; },
/* harmony export */   SOCIAL_NETWORK: function() { return /* binding */ SOCIAL_NETWORK; },
/* harmony export */   SOCIAL_SHARE: function() { return /* binding */ SOCIAL_SHARE; },
/* harmony export */   SPONSOR: function() { return /* binding */ SPONSOR; },
/* harmony export */   SPORT: function() { return /* binding */ SPORT; },
/* harmony export */   STREAM_TYPE: function() { return /* binding */ STREAM_TYPE; },
/* harmony export */   SWEEPSTAKES_NAME: function() { return /* binding */ SWEEPSTAKES_NAME; },
/* harmony export */   TOGGLE: function() { return /* binding */ TOGGLE; },
/* harmony export */   TOKEN_TYPE: function() { return /* binding */ TOKEN_TYPE; },
/* harmony export */   TRIAL_ACCESS_DURATION: function() { return /* binding */ TRIAL_ACCESS_DURATION; },
/* harmony export */   TRUE: function() { return /* binding */ TRUE; },
/* harmony export */   UNAUTHENTICATED: function() { return /* binding */ UNAUTHENTICATED; },
/* harmony export */   UNRESTRICTED: function() { return /* binding */ UNRESTRICTED; },
/* harmony export */   USER_CONTENT: function() { return /* binding */ USER_CONTENT; },
/* harmony export */   USER_EPISODE_CREDITS_LEFT: function() { return /* binding */ USER_EPISODE_CREDITS_LEFT; },
/* harmony export */   USER_MVPD: function() { return /* binding */ USER_MVPD; },
/* harmony export */   USER_PREFERENCE: function() { return /* binding */ USER_PREFERENCE; },
/* harmony export */   USER_PROFILE: function() { return /* binding */ USER_PROFILE; },
/* harmony export */   USER_REGISTRATION_REFERRER: function() { return /* binding */ USER_REGISTRATION_REFERRER; },
/* harmony export */   USER_SOCIAL_NETWORK: function() { return /* binding */ USER_SOCIAL_NETWORK; },
/* harmony export */   UTM_CAMPAIGN: function() { return /* binding */ UTM_CAMPAIGN; },
/* harmony export */   UTM_CONTENT: function() { return /* binding */ UTM_CONTENT; },
/* harmony export */   UTM_MEDIUM: function() { return /* binding */ UTM_MEDIUM; },
/* harmony export */   UTM_SOURCE: function() { return /* binding */ UTM_SOURCE; },
/* harmony export */   UTM_TERM: function() { return /* binding */ UTM_TERM; },
/* harmony export */   VIDEO_DURATION: function() { return /* binding */ VIDEO_DURATION; },
/* harmony export */   VIDEO_END: function() { return /* binding */ VIDEO_END; },
/* harmony export */   VIDEO_END_TYPE: function() { return /* binding */ VIDEO_END_TYPE; },
/* harmony export */   VIDEO_ID: function() { return /* binding */ VIDEO_ID; },
/* harmony export */   VIDEO_PREVIEW: function() { return /* binding */ VIDEO_PREVIEW; },
/* harmony export */   VIDEO_START: function() { return /* binding */ VIDEO_START; },
/* harmony export */   VIDEO_TYPE: function() { return /* binding */ VIDEO_TYPE; }
/* harmony export */ });
// event name constants
const AUTHENTICATION_SUCCESS = 'Authentication Success';
const AD_AUDIENCE = 'Ad Audience';
const AD_END = 'Ad End';
const AD_EXPERIMENT = 'Ad Experiment';
const AD_POD_END = 'Ad Pod End';
const AD_POD_START = 'Ad Pod Start';
const AD_START = 'Ad Start';
const AD_VARIANT = 'Ad Variant';
const CLICK_ACTION = 'Click Action';
const CONTENT_CLICK = 'Content Click';
const DYNAMIC_LEAD_IMPRESSION = 'Dynamic Lead Impression';
const END_CARD = 'End Card';
const END_CARD_IMPRESSION = 'End Card Impression';
const ERROR = 'Error';
const EXIT = 'Exit';
const ITEM_FAVORITED = 'Item Favorited';
const LINEAR_AD_END = 'Linear Ad End';
const LINEAR_AD_POD_END = 'Linear Ad Pod End';
const LINEAR_AD_POD_START = 'Linear Ad Pod Start';
const LINEAR_AD_START = 'Linear Ad Start';
const LINEAR_END = 'Linear End';
const LINEAR_PROGRAM_END = 'Linear Program End';
const LINEAR_PROGRAM_START = 'Linear Program Start';
const LINEAR_START = 'Linear Start';
const LIVE_TO_VOD_IMPRESSION = 'Live to VOD Impression';
const MARKETING_MODULE_IMPRESSION = 'Marketing Module Impression';
const MODAL_LOAD = 'Modal Load';
const MVPD_PAGE_ABANDONED = 'MVPD Page Abandoned';
const NBC_AUTHENTICATION_SUCCESS = 'NBC Authentication Success';
const NBC_SIGN_OUT = 'NBC Sign Out';
const PAGE_LOAD = 'Page Load';
const PLAYER_LOAD_ABANDONED = 'Player Load Abandoned';
const PLAYER_LOAD_TIME = 'Player Load Time';
const PROFILE_UPDATE = 'Profile Update';
const REGISTRATION_SUCCESS = 'Registration Success';
const SEARCH_RESULT = 'Search Result';
const SHELF_IMPRESSION = 'Shelf Impression';
const SOCIAL_SHARE = 'Social Share';
const VIDEO_END = 'Video End';
const VIDEO_PREVIEW = 'Video Preview';
const VIDEO_START = 'Video Start';

// event type constants
const NAVIGATION = 'Navigation';
const USER_CONTENT = 'UserContent';
const USER_PREFERENCE = 'UserPreference';

// attribute name constants
const AD_BLOCKER = 'Ad Blocker';
const AD_PARAMETER_DURATION = 'Ad Parameter Duration';
const AD_POD_DURATION = 'Ad Pod Duration';
const AD_POD_QUANTITY = 'Ad Pod Quantity';
const AD_POD_TYPE = 'Ad Pod Type';
const AD_TRACKING_OPT_OUT = 'Ad Tracking Opt-Out';
const AUTHENTICATION_DURATION = 'Authentication Duration';
const AUTHORIZATION_DURATION = 'Authorization Duration';
const AUTH_SSO = 'Auth SSO';
const AUTOPLAY = 'Autoplay';
const BRANCH_CAMPAIGN = 'Branch Campaign';
const BRANCH_CHANNEL = 'Branch Channel';
const BRANCH_FEATURE = 'Branch Feature';
const BRANCH_MPARTICLE_ID = 'Branch mParticle ID';
const BRANCH_TAGS = 'Branch Tags';
const BRAND = 'Brand';
const CALLSIGN = 'Callsign';
const CASTING = 'Casting';
const CC_LANGUAGE = 'CC Language';
const CLOSED_CAPTIONING = 'Closed Captioning';
const CONTENT_POSITION = 'Content Position';
const CONVERSION = 'Conversion';
const CUSTOM_SHELF_POSITION = 'Custom Shelf Position';
const CUSTOM_SHELF_TITLE = 'Custom Shelf Title';
const CUSTOM_SHELF_TYPE = 'Custom Shelf Type';
const DESTINATION = 'Destination';
const DESTINATION_TYPE = 'Destination Type';
const DESTINATION_URL = 'Destination URL';
const DEVICE_MODEL = 'Device Model';
const DURATION = 'Duration';
const DURATION_WATCHED = 'Duration Watched';
const DURATION_SINCE_LAUNCH = 'Duration Since Launch';
const DYNAMIC_LEAD_LOGIC = 'Dynamic Lead Logic';
const END_CARD_OUTCOME = 'End Card Outcome';
const END_CARD_SELECTED = 'End Card Selected';
const END_CARD_TIME = 'End Card Time';
const END_TYPE = 'End Type';
const ENTITLEMENT = 'Entitlement';
const EPISODE_CREDITS_LEFT = 'Episode Credits Left';
const ERROR_TYPE = 'Error Type';
const ERROR_SYSTEM = 'Error System';
const ERROR_CONTEXT = 'Error Context';
const ERROR_CODE = 'Error Code';
const ERROR_DESCRIPTION = 'Error Description';
const ERROR_SUB_TYPE = 'Error Sub Type';
const ERROR_EXPECTED = 'Error Expected';
const ERROR_FATAL = 'Error Fatal';
const ERROR_FEATURE_TYPE = 'Error Feature Type';
const ERROR_FRIENDLY_MESSAGE = 'Error Friendly Message';
const ERROR_OMNITURE_CODE = 'Error Omniture Code';
const ERROR_SOURCE_ERROR_CODE = 'Error Source Error Code';
const ERROR_SOURCE_TYPE = 'Error Source Type';
const ERROR_STACK = 'Error Stack';
const EPISODE_NUMBER = 'Episode Number';
const EPISODE_TITLE = 'Episode Title';
const FIRST_VISIT = 'First Visit';
const GENRE = 'Genre';
const GEO_STATION = 'Geo Station';
const GEO_ZIP = 'Geo Zip';
const HOME_STATION = 'Home Station';
const ITEM_ADD_REMOVE = 'Item Add Remove';
const INITIAL_BUFFER_DURATION = 'Initial Buffer Duration';
const ITEM_CLICKED_BRAND = 'Item Clicked Brand';
const ITEM_CLICKED_ENTITLEMENT = 'Item Clicked Entitlement';
const ITEM_CLICKED_LEAGUE = 'Item Clicked League';
const ITEM_CLICKED_NAME = 'Item Clicked Name';
const ITEM_CLICKED_PLAYLIST_NAME = 'Item Clicked Playlist Name';
const ITEM_CLICKED_PLAYLIST_POSITION = 'Item Clicked Playlist Position';
const ITEM_CLICKED_SEASON = 'Item Clicked Season';
const ITEM_CLICKED_SHOW = 'Item Clicked Show';
const ITEM_CLICKED_SPORT = 'Item Clicked Sport';
const ITEM_CLICKED_STATE = 'Item Clicked State';
const ITEM_CLICKED_TYPE = 'Item Clicked Type';
const ITEM_CLICKED_URL = 'Item Clicked URL';
const ITEM_CLICKED_VIDEO_ID = 'Item Clicked Video ID';
const ITEM_SHARED_NAME = 'Item Shared Name';
const LANGUAGE = 'Language';
const LEAGUE = 'League';
const LINEAR_DURATION = 'Linear Duration';
const LOCKUP = 'Lockup';
const LOCKUP_CONTENT_POSITION = 'Lockup Content Position';
const MODAL_NAME = 'Modal Name';
const MODAL_TYPE = 'Modal Type';
const MPARTICLE_SESSION_ID = 'mParticleSessionId';
const MVPD = 'MVPD';
const MVPD_EXPIRATION_DATE = 'MVPD Expiration Date';
const NOTIFICATION_TITLE = 'Notification Title';
const OPEN_TYPE = 'Open Type';
const ORIENTATION = 'Orientation';
const PAGE_NAME = 'Page Name';
const PAGE_TYPE = 'Page Type';
const PEACOCK_ACCOUNT_TIER = 'Peacock Account Tier';
const PERCENTAGE_COMPLETE = '% Complete';
const PLATFORM = 'Platform';
const PLAYER_NAME = 'Player Name';
const PLAYLIST_NAME = 'Playlist Name';
const PLAYLIST_POSITION = 'Playlist Position';
const PREPARATION_DURATION = 'Preparation Duration';
const PREVIOUS_VIDEO = 'Previous Video';
const PREVIOUS_VIDEO_TYPE = 'Previous Video Type';
const PRODUCT = 'Product';
const PROFILE = 'Profile';
const PROGRAM_ORDER = 'Program Order';
const PUSH_OPT_OUT = 'Push Opt-Out';
const REFERRING_PAGE = 'Referring Page';
const REGISTRATION_REFERRER = 'Registration Referrer';
const REGISTRATION_SOURCE = 'Registration Source';
const RESULT_COUNT = 'Result Count';
const RESUME = 'Resume';
const RESUME_TIME = 'Resume Time';
const RETRANS_DURATION = 'Retrans Duration';
const SCREEN_HEIGHT = 'Screen Height';
const SCREEN_WIDTH = 'Screen Width';
const SEARCH_OUTCOME = 'Search Outcome';
const SEARCH_TERM = 'Search Term';
const SEASON = 'Season';
const SECONDARY_GENRE = 'Secondary Genre';
const SELECTION_TYPE = 'Selection Type';
const SEO = 'SEO';
const SERIES_URL_ALIAS = 'seriesUrlAlias';
const SHELF_MACHINE_NAME = 'Shelf Machine Name';
const SHOW = 'Show';
const SIGN_IN_TYPE = 'Sign In Type';
const SMART_TILE_EPISODE_TITLE = 'Smart Tile Episode Title';
const SMART_TILE_LOGIC = 'Smart Tile Logic';
const SMART_TILE_SCENARIO = 'Smart Tile Scenario';
const SMART_TILE_TITLE = 'Smart Tile Title';
const SMART_TILE_VIDEO_ID = 'Smart Tile Video ID';
const SOCIAL_ACTION = 'Social Action';
const SOCIAL_NETWORK = 'Social Network';
const SPONSOR = 'Sponsor';
const SPORT = 'Sport';
const STREAM_TYPE = 'Stream Type';
const SWEEPSTAKES_NAME = 'Sweepstakes Name';
const TOGGLE = 'Toggle';
const TOKEN_TYPE = 'Token Type';
const TRIAL_ACCESS_DURATION = 'Trial Access Duration';
const USER_MVPD = 'User MVPD';
const USER_EPISODE_CREDITS_LEFT = 'User Episodes Credits Left';
const USER_SOCIAL_NETWORK = 'User Social Network';
const UTM_CAMPAIGN = 'UTM Campaign';
const UTM_CONTENT = 'UTM Content';
const UTM_MEDIUM = 'UTM Medium';
const UTM_SOURCE = 'UTM Source';
const UTM_TERM = 'UTM Term';
const VIDEO_DURATION = 'Video Duration';
const VIDEO_END_TYPE = 'Video End Type';
const VIDEO_ID = 'Video ID';
const VIDEO_TYPE = 'Video Type';

// User Attributes constants
const USER_PROFILE = 'User Profile';
const USER_REGISTRATION_REFERRER = 'User Registration Referrer';

// Other constants
const NONE = 'None';
const REGULAR = 'Regular';
const TRUE = 'True';
const FALSE = 'False';
const GENERETIC_PAGE_VIEW = 'generetic.pageview';
const UNAUTHENTICATED = 'Unauthenticated';
const ENTITLED = 'Entitled';
const FREE = 'Free';
const RESTRICTED = 'Restricted';
const UNRESTRICTED = 'Unrestricted';

/***/ }),

/***/ 57979:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27484);
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(66607);
/* harmony import */ var dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var dayjs_plugin_isSameOrBefore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(37412);
/* harmony import */ var dayjs_plugin_isSameOrBefore__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_isSameOrBefore__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15461);
/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dayjs_plugin_isSameOrAfter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79212);
/* harmony import */ var dayjs_plugin_isSameOrAfter__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_isSameOrAfter__WEBPACK_IMPORTED_MODULE_4__);
// eslint-disable-next-line no-restricted-imports





dayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_isBetween__WEBPACK_IMPORTED_MODULE_1___default())).extend((dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_3___default())).extend((dayjs_plugin_isSameOrBefore__WEBPACK_IMPORTED_MODULE_2___default())).extend((dayjs_plugin_isSameOrAfter__WEBPACK_IMPORTED_MODULE_4___default()));
/* harmony default export */ __webpack_exports__.Z = ((dayjs__WEBPACK_IMPORTED_MODULE_0___default()));

/***/ }),

/***/ 9328:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AB: function() { return /* binding */ removeFavoriteSeries; },
/* harmony export */   Lh: function() { return /* binding */ FAVORITES_TRACK_DELAY; }
/* harmony export */ });
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(238);
/* harmony import */ var _utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36848);



const URL = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.park-v4.url');
const TIMEOUT = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.nbc.timeout');
const FAVORITES_TRACK_DELAY = 2000;

/**
 * General API POST method.
 *
 * @param {string} mParticleId User mparticle ID.
 * @param {object} seriesId Serie Id to add.
 * @param {boolean} isMovie Flag for movie type.
 *
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there's an error.
 */
function addFavoriteSeries(mParticleId, seriesId, isMovie) {
  const date = new Date();
  const headers =  false ? 0 : {
    'Content-Type': 'application/vnd.api+json'
  };
  return axios__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.post("".concat(URL, "/users/").concat(mParticleId, "/favorites"), {
    data: {
      type: 'favorites',
      attributes: {
        created: date.toISOString()
      },
      relationships: {
        favorite: {
          data: {
            type: isMovie ? 'movies' : 'series',
            id: seriesId
          }
        },
        user: {
          data: {
            type: 'users',
            id: mParticleId
          }
        }
      }
    }
  }, {
    timeout: TIMEOUT,
    headers
  }).catch(err => (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(err));
}

/**
 * General API Delete method.
 *
 * @param {string} mParticleId User mparticle ID.
 * @param {object} favoriteId Favorite ID to remove, it is a value returned from favorite action.
 *
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there's an error.
 */
function removeFavoriteSeries(mParticleId, favoriteId) {
  const headers =  false ? 0 : {
    'Content-Type': 'application/vnd.api+json'
  };
  return axios__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z.delete("".concat(URL, "/users/").concat(mParticleId, "/favorites/").concat(favoriteId), {
    timeout: TIMEOUT,
    headers
  }).catch(err => (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(err));
}
/* harmony default export */ __webpack_exports__.ZP = (addFavoriteSeries);

/***/ }),

/***/ 67641:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Sf: function() { return /* binding */ getAppVersion; },
  sO: function() { return /* binding */ getLazyComponent; },
  Ps: function() { return /* binding */ gql; }
});

// UNUSED EXPORTS: resetCache

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__(57267);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/axios/lib/axios.js + 48 modules
var axios = __webpack_require__(238);
// EXTERNAL MODULE: ./webpack-alias/park-logger.js
var park_logger = __webpack_require__(67788);
var park_logger_default = /*#__PURE__*/__webpack_require__.n(park_logger);
// EXTERNAL MODULE: ./node_modules/memory-cache/index.js
var memory_cache = __webpack_require__(7113);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/qs/lib/index.js
var lib = __webpack_require__(80129);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);
;// CONCATENATED MODULE: ./lib/queries/bonanzaPage.hash.js
/* harmony default export */ var bonanzaPage_hash = ('992bd484db75d127cbab4f25e26d3f0209ada93e7aa4e4085eff7741e1cc7f5d');
;// CONCATENATED MODULE: ./lib/queries/bonanzaMeta.hash.js
/* harmony default export */ var bonanzaMeta_hash = ('bd8601b79459c94c191dfbf81121ce146e14c7fcf8ad90512d1a451013c69d15');
;// CONCATENATED MODULE: ./lib/queries/bonanzaNav.hash.js
/* harmony default export */ var bonanzaNav_hash = ('01998d64f897ed751d0f6058cdd76705e48612ed2d0adb7c38b396d7c38c4ec6');
;// CONCATENATED MODULE: ./lib/queries/featuredShowsSection.hash.js
/* harmony default export */ var featuredShowsSection_hash = ('bfcf26028944e392b9c0ff88e8dcfa956e28d754e489ae981996ab5ff8030ccc');
;// CONCATENATED MODULE: ./lib/queries/liveMetadata.hash.js
/* harmony default export */ var liveMetadata_hash = ('d2eca3f917a8db847586303bf2040f016afbc4245719c3aeb3029772afb7ebb8');
;// CONCATENATED MODULE: ./lib/queries/videosSection.hash.js
/* harmony default export */ var videosSection_hash = ('f8e0c5dbc558fb1655355de80342878373fef355c7ccc26972b0b273466648dc');
;// CONCATENATED MODULE: ./lib/queries/endCard.hash.js
/* harmony default export */ var endCard_hash = ('458363f0a248f27d93ffa99b24afbc7c7956cb2a119a7c3be2310e9ab61c663e');
;// CONCATENATED MODULE: ./lib/queries/brandSeriesGroupedByCategory.hash.js
/* harmony default export */ var brandSeriesGroupedByCategory_hash = ('cfec45697a15b010a8141811da084b953e3a42b4f946f2e20fafd89eaca781a7');
;// CONCATENATED MODULE: ./lib/queries/daySchedule.hash.js
/* harmony default export */ var daySchedule_hash = ('8b4d352b00376c6c203ecc5cba20781ca199ab74bd8a95148d3474ad60868877');
;// CONCATENATED MODULE: ./lib/queries/onAirNowShelf.hash.js
/* harmony default export */ var onAirNowShelf_hash = ('1fedd6f767dc804a29d8440582f15173241dc181d6f4c53021ea73f7ccf323e6');
;// CONCATENATED MODULE: ./lib/queries/paginatedShelf.hash.js
/* harmony default export */ var paginatedShelf_hash = ('fa59924f7440552de23218451736fc9734e20c94f959ac5d434cf091287cb062');
;// CONCATENATED MODULE: ./lib/queries/paginatedComponent.hash.js
/* harmony default export */ var paginatedComponent_hash = ('9a86ad169dc9dca4cb5afaca251abd6acd7569a259772c01d36c2408a2a62cdd');
;// CONCATENATED MODULE: ./lib/queries/brandTitleCategories.hash.js
/* harmony default export */ var brandTitleCategories_hash = ('f90912914bb8d24ab326190ee31d5735886fd28937353fdd7042aa09674575bc');
;// CONCATENATED MODULE: ./lib/queries/neuralNetShelf.hash.js
/* harmony default export */ var neuralNetShelf_hash = ('7e192904c7bdef8fb5f51c9116fa521749838d469f2c7e1222c442c60d08436b');
;// CONCATENATED MODULE: ./lib/queries/titleV2AboutSection.hash.js
/* harmony default export */ var titleV2AboutSection_hash = ('f88863000e69f9e7b2fbf3a0e40d13880123616616281ae736a4fb76b44739f3');
;// CONCATENATED MODULE: ./lib/queries/titleV2HomeSections.hash.js
/* harmony default export */ var titleV2HomeSections_hash = ('ecae4926c60da967bec83c745ff868068984b53ebd2558967c2cd741546e8c20');
;// CONCATENATED MODULE: ./lib/queries/titleV2MoreSections.hash.js
/* harmony default export */ var titleV2MoreSections_hash = ('5f1462937826a45d6e9a026a81efc241fee3ba7a26f2e4f6f18951291321741a');
;// CONCATENATED MODULE: ./lib/queries/mixedEditorialShelf.hash.js
/* harmony default export */ var mixedEditorialShelf_hash = ('90d8c83c07b6f6bf1b484d5d0d2b5e5ea260798f6e609a4fde13555b4a410737');
;// CONCATENATED MODULE: ./lib/queries/globalNavigation.hash.js
/* harmony default export */ var globalNavigation_hash = ('9b115645e6955de79aef7eba489e6011481aad0a37542468b0ae18a6fcb1aa73');
;// CONCATENATED MODULE: ./lib/queries/favoritesShelf.hash.js
/* harmony default export */ var favoritesShelf_hash = ('b4da4f187f9f3ca1f38349192e1ae3f63a8685fdcbc6d1e24a791ebb41ff8795');
;// CONCATENATED MODULE: ./lib/queries/onboardingBrandCategories.hash.js
/* harmony default export */ var onboardingBrandCategories_hash = ('654edc923a99c39b50edc37829280bf2f88b5302597e6a67006aa6d83abf9508');
;// CONCATENATED MODULE: ./lib/queries/onboardingCategoryFavorites.hash.js
/* harmony default export */ var onboardingCategoryFavorites_hash = ('abeeb76c82a3d78d7f9841aea3edea2b684ca20c326cadf251ae054cfa496458');
;// CONCATENATED MODULE: ./lib/queries/componentsForPlaceholders.hash.js
/* harmony default export */ var componentsForPlaceholders_hash = ('86cac4f362d8ba0c24313facf0db9659337ba962a4b5e271b24bd7756c52338a');
;// CONCATENATED MODULE: ./lib/queries/featuredSection.hash.js
/* harmony default export */ var featuredSection_hash = ('fe67244282765fa834ddddf2ee55b3505b9356b2e30130ba9a0b82f9280fa08d');
;// CONCATENATED MODULE: ./lib/queries/userInteractions.hash.js
/* harmony default export */ var userInteractions_hash = ('708a129e2b624ae4f490fd0d8f08c85d63d5ca34a2fd5f774a6b6dc01d860423');
;// CONCATENATED MODULE: ./lib/queries/userFavorites.hash.js
/* harmony default export */ var userFavorites_hash = ('e268d5e9dd215687da6aafd041c82e8a7a2e2d72e768edced79ccae7f0577895');
;// CONCATENATED MODULE: ./lib/queries/userWatches.hash.js
/* harmony default export */ var userWatches_hash = ('cf16a0d1fa3cd4463643add07be6a3a83e513ef81235374b06cd8a106c53a90f');
;// CONCATENATED MODULE: ./lib/queries/serverFeatureFlags.hash.js
/* harmony default export */ var serverFeatureFlags_hash = ('c1365d38cd30bdae18bb0b293caa91a4776208cb9f16cb5847edd27fae2ed893');
// EXTERNAL MODULE: ./utils/throwHTTPError.js
var throwHTTPError = __webpack_require__(36848);
// EXTERNAL MODULE: ./utils/log-requests.js
var log_requests = __webpack_require__(33359);
;// CONCATENATED MODULE: ./utils/parseAppVersion.js
/**
 * Returns version number taken from our package.json.
 *
 * @param {string} version
 *   The version number as a string.
 * @param {boolean} stripDecimals
 *   If true, decimal points are stripped from the version string.
 * @param {boolean} padZeros
 *   If true, zeros will be used to ensure 3-digit minor and major versions.
 * @return {string}
 *   The extracted version number, as a string.
 */
function parseAppVersion(version, stripDecimals, padZeros) {
  if (!stripDecimals && !padZeros) {
    return version;
  }
  let parts = version.split('.');
  if (padZeros) {
    parts = parts.map(part => part.padStart(3, '0'));
  }
  return parts.join(stripDecimals ? '' : '.');
}
// EXTERNAL MODULE: ./utils/isDayZeroUser.js
var isDayZeroUser = __webpack_require__(36849);
// EXTERNAL MODULE: ./package.json
var package_0 = __webpack_require__(4147);
;// CONCATENATED MODULE: ./lib/friendship.js

/**
 * TO DO: Delete this comment
 * This file creates a wrapper to expose the Friendship (BFF) API.
 * @see https://github.com/nbcdotcom/friendship
 */








































const FRIENDSHIP_URL = config/* default */.Z.get('API.friendship.url');
const MAX_AGE = config/* default */.Z.get('API.friendship.maxAge');
const CACHED_REGEX = /_cached$/;

// Debug Request/Response URLs
config/* default */.Z.get('API.friendship.debug') && (0,log_requests/* default */.Z)();

/**
 * Returns the appVersion variable for BFF calls.
 * @param {Boolean} isLazyPattern True if this is a page that has been converted to personalization lazy load pattern
 * @returns {String} BFF appVersion
 */
function getAppVersion() {
  let isLazyPattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  const suffix = isLazyPattern ? '-personalization' : '';
  return ["".concat(parseInt(parseAppVersion(package_0.version, true, true), 10)), suffix].join('');
}

/**
 * Grabs a query file asynchronously using require.ensure (i.e. code splitting).
 * Our query files can become quite large. Users only need to POST the schema
 * if a persisted query was not found. This is fairly rare in production.
 *
 * @param {string} query
 *   The query file name to be loaded.
 * @return {Promise}
 *   Resolves when the chunk has been loaded and contains the schema as a string.
 */
function getQuerySchema(query) {
  return new Promise(resolve => __webpack_require__.e(/* require.ensure */ 3570).then((require => resolve( /* eslint-disable import/no-dynamic-require */
  __webpack_require__(23570)("./".concat(query.replace(CACHED_REGEX, ''), ".gql.js")).default
  /* eslint-enable import/no-dynamic-require */)).bind(null, __webpack_require__))['catch'](__webpack_require__.oe));
}

/**
 * Helper to get imported hash files based on query name.
 *
 * @param {string} query
 *   The query hash name to be loaded.
 * @return {string}
 *   The hash string for the respective query name.
 */
const getHash = query => {
  const map = {
    bonanzaPage: bonanzaPage_hash,
    bonanzaMeta: bonanzaMeta_hash,
    bonanzaNav: bonanzaNav_hash,
    componentsForPlaceholders: componentsForPlaceholders_hash,
    endCard: endCard_hash,
    featuredSection: featuredSection_hash,
    featuredShowsSection: featuredShowsSection_hash,
    liveMetadata: liveMetadata_hash,
    videosSection: videosSection_hash,
    brandSeriesGroupedByCategory: brandSeriesGroupedByCategory_hash,
    daySchedule: daySchedule_hash,
    onAirNowShelf: onAirNowShelf_hash,
    paginatedShelf: paginatedShelf_hash,
    paginatedComponent: paginatedComponent_hash,
    brandTitleCategories: brandTitleCategories_hash,
    neuralNetShelf: neuralNetShelf_hash,
    titleV2AboutSection: titleV2AboutSection_hash,
    titleV2HomeSections: titleV2HomeSections_hash,
    titleV2MoreSections: titleV2MoreSections_hash,
    mixedEditorialShelf: mixedEditorialShelf_hash,
    globalNavigation: globalNavigation_hash,
    favoritesShelf: favoritesShelf_hash,
    onboardingBrandCategories: onboardingBrandCategories_hash,
    onboardingCategoryFavorites: onboardingCategoryFavorites_hash,
    userInteractions: userInteractions_hash,
    userFavorites: userFavorites_hash,
    userWatches: userWatches_hash,
    serverFeatureFlags: serverFeatureFlags_hash
  };
  if (!map[query]) {
    const cachedRootName = query.replace(CACHED_REGEX, '');
    if (!map[cachedRootName]) {
      park_logger_default().error("No hash file mapping found for the query ".concat(query));
    }
    return map[cachedRootName];
  }
  return map[query];
};

/**
 * GraphQL query builder.
 * Attempts to fetch the data from a persisted query using a GET request.
 * In the (uncommon) event that there is no cached query, we make a subsequent
 * POST to send the query.
 *
 * @param {Object} properties
 *   Defines the resource to retrieve.
 * @param {string} properties.query
 *   The name of our internal GraphQL query files to use.
 * @param {integer} properties.version
 *   Optional, the API version to use. Defaults to 2.
 * @param {string} properties.variables
 *   Custom query variables to send to the endpoint.
 * @param {string} properties.cacheKey
 *   Extra string to add to the cache key.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
function gql(_ref) {
  let {
    query,
    version = 2,
    variables,
    cacheKey
  } = _ref;
  const cacheKeyResult = cacheKey || variables.type && variables.name && "friendship:".concat(variables.type, ":").concat(variables.name);
  let request = variables.userId === '-1' && cacheKeyResult && memory_cache.get(cacheKeyResult);
  if (!request) {
    var _variables$queryName;
    const apiUrl = "".concat(FRIENDSHIP_URL, "/v").concat(version, "/graphql");
    const headers = {
      'Content-Type': 'application/json',
      Accept: 'application/json'
    };
    const params = {
      variables: {
        ...variables,
        queryName: (_variables$queryName = variables.queryName) !== null && _variables$queryName !== void 0 ? _variables$queryName : query
      },
      extensions: {
        persistedQuery: {
          version: 1,
          sha256Hash: getHash(query)
        }
      }
    };

    // Make GET call for persisted query.
    request = axios/* default */.Z.get(apiUrl, {
      headers,
      params,
      paramsSerializer: {
        serialize: allParams => {
          const encodedParams = Object.keys(allParams).reduce((encoded, key) => {
            encoded[key] = JSON.stringify(allParams[key]);
            return encoded;
          }, {});
          return lib_default().stringify(encodedParams);
        }
      }
    }).then(res =>
    // If PersistedQueryNotFound, POST it and return response.
    res.data.errors && res.data.errors.some(error => error.message === 'PersistedQueryNotFound') ? getQuerySchema(query).then(schema => axios/* default */.Z.post(apiUrl, JSON.stringify({
      query: schema,
      ...params
    }), {
      headers
    })) : res).catch(err => (0,throwHTTPError/* default */.Z)(err, err.status || 500, apiUrl));

    // Cache response in memory using our key.
    cacheKey && memory_cache.put(cacheKey, request, MAX_AGE);
  }
  return request;
}

/**
 * GraphQL query builder for lazy loading components.
 *
 * @param {Object} properties
 *   Defines the component to retrieve.
 * @param {string} properties.queryName
 *   The name of the query to send. Must map to a lib/queries/*.gql.js file.
 * @param {string} properties.variables
 *   Variables to pass to the BFF with the query.
 * @param {array} properties.path
 *   The path to extra data from the response payload.
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
function getLazyComponent(_ref2) {
  let {
    queryName,
    queryVariables,
    path
  } = _ref2;
  return gql({
    query: queryName,
    variables: {
      // The BFF does not return appVersion within lazy components so we have to
      // manually inject it ourselves here.
      ...queryVariables,
      appVersion: getAppVersion(),
      isDayZero: (0,isDayZeroUser/* isDayZero */.XM)()
    }
  }).then(payload => get_default()(payload.data, path, {}));
}
const resetCache = () => {
  cache.clear();
};

/***/ }),

/***/ 28176:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WL: function() { return /* binding */ geoBrands; }
/* harmony export */ });
/* unused harmony export getGeoContentType */
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(238);
/* harmony import */ var _utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36848);
/* harmony import */ var _utils_getBrandFromUrlParam__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(67689);
/* harmony import */ var _utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(20057);
/* harmony import */ var _utils_isClientSide__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(15343);
/* harmony import */ var _analytics_mParticle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(51054);







const URL = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.geoServices.url');
const TIMEOUT = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.geoServices.timeout');
const geoBrands = {
  nbc: 'nbc',
  telemundo: 'telemundo',
  usa: 'usa'
};

/**
 * Util function to get contentType for geolocation request.
 *
 * @param {string} programmingType value from bff analytics object
 *
 * @return {string}
 *   Returns the contentType (sle, vod, or live)
 */
const getGeoContentType = programmingType => {
  if ((0,_utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__/* .isSingleLiveEventType */ .RZ)(programmingType)) {
    return _utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__/* .SLE */ .$0;
  }
  if ((0,_utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__/* .isFullEventReplayType */ .vt)(programmingType)) {
    return _utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__/* .FER */ .hm;
  }
  if ((0,_utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__/* .isVODType */ .TB)(programmingType)) {
    return _utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__/* .VOD */ .uk;
  }
  return _utils_programmingTypes__WEBPACK_IMPORTED_MODULE_3__/* .LIVE */ .wI;
};

/**
 * General API POST method.
 *
 * @param {string} network The network name to request data for.
 * @param {object} payload Payload for a POST request.
 * @param {object} options
 *   Override options for Axios.
 *
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there's an error.
 */
async function geoServices(network, payload) {
  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  const {
    livePlatformKey
  } = (0,_utils_getBrandFromUrlParam__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(network) || {};
  const headers = options.headers || {
    Accept: 'application/media.geo-v2+json',
    Authorization: "NBC-Basic key=\"".concat(livePlatformKey, "\", version=\"3.0\", type=\"cpc\""),
    'Content-Type': 'application/json',
    Client: 'oneapp'
  };
  if ((0,_utils_isClientSide__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)()) {
    const mParticleSessionId = await _analytics_mParticle__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .ZP.getSession();
    if (mParticleSessionId) {
      headers['App-Session-ID'] = mParticleSessionId;
    }
  }
  const contentType = getGeoContentType(options.contentType);
  if (options.ip) {
    headers['x-forwarded-for'] = options.ip;
  }
  const params = {};
  const hasPID = (options === null || options === void 0 ? void 0 : options.pid) && (options === null || options === void 0 ? void 0 : options.pid) !== null && (options === null || options === void 0 ? void 0 : options.pid) !== undefined;
  if (hasPID && options.isRSN) {
    params.entitlementId = options.pid;
  }
  return axios__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z.post("".concat(URL, "/").concat(contentType.toLowerCase(), "/").concat((0,_utils_getBrandFromUrlParam__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(network, 'geoServicesBrandKey')), payload, {
    timeout: options.timeout || TIMEOUT,
    headers,
    params
  }).catch(err => (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(err, err.status || 500, "".concat(URL, "/").concat(network)));
}
/* harmony default export */ __webpack_exports__.ZP = (geoServices);

/***/ }),

/***/ 62899:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  g7: function() { return /* binding */ IFRAME_BASE_URL; },
  OS: function() { return /* binding */ accountErrors; },
  ic: function() { return /* binding */ editUserInfo; },
  eq: function() { return /* binding */ fetchTrialAccess; },
  Gg: function() { return /* binding */ getSession; },
  bG: function() { return /* binding */ getUserInfo; },
  Hk: function() { return /* binding */ hasSession; },
  x4: function() { return /* binding */ login; },
  kS: function() { return /* binding */ logout; },
  J9: function() { return /* binding */ normalizeGender; },
  z2: function() { return /* binding */ register; },
  Sf: function() { return /* binding */ setIdentityIframe; },
  m0: function() { return /* binding */ setLanguage; },
  CT: function() { return /* binding */ updateSession; },
  ae: function() { return /* binding */ validateIdmCode; },
  je: function() { return /* binding */ validateSession; }
});

// UNUSED EXPORTS: getSessionToken, requestPassword, resetPassword

// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/axios/lib/axios.js + 48 modules
var lib_axios = __webpack_require__(238);
// EXTERNAL MODULE: ./node_modules/cookies-js/dist/cookies.js
var cookies = __webpack_require__(27360);
var cookies_default = /*#__PURE__*/__webpack_require__.n(cookies);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var lodash_get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(lodash_get);
// EXTERNAL MODULE: ./utils/hasLocalStorage.js
var hasLocalStorage = __webpack_require__(395);
// EXTERNAL MODULE: ./utils/uuid.js
var utils_uuid = __webpack_require__(95058);
// EXTERNAL MODULE: ./utils/getBrandFromUrlParam.js
var utils_getBrandFromUrlParam = __webpack_require__(67689);
// EXTERNAL MODULE: ./utils/normalizeAccountInfo.js
var normalizeAccountInfo = __webpack_require__(62324);
;// CONCATENATED MODULE: ./lib/IframeCommunication.js
let onMessage;
const sendMessage = (senderWindow, name, data) => {
  if (data && data instanceof Object) {
    const message = {
      type: 'customEvent',
      name,
      data
    };
    senderWindow && (senderWindow.contentWindow || senderWindow).postMessage(JSON.stringify(message), '*');
  }
};
const initMessageCallbacks = (iframeDomain, callback) => {
  if (typeof window !== 'undefined') {
    window.addEventListener('message', onMessage = e => {
      let eventData;
      try {
        eventData = e.data && typeof e.data === 'string' ? JSON.parse(e.data) : e.data;
      } catch (err) {
        eventData = e.data;
      }
      if (e.isTrusted &&
      // eslint-disable-next-line no-undef
      e.origin === iframeDomain && eventData && eventData.type === 'customEvent') {
        callback(eventData.name, eventData.data);
      }
    }, false);
  }
};
const deleteMessageListener = () => window.removeEventListener('message', onMessage);
/* harmony default export */ var IframeCommunication = ({
  sendMessage,
  initMessageCallbacks,
  deleteMessageListener
});
// EXTERNAL MODULE: ./utils/getTranslatedString.js + 2 modules
var getTranslatedString = __webpack_require__(33786);
;// CONCATENATED MODULE: ./lib/identity.js
/**
 * This file creates a wrapper to expose the OpenIDM/OpenAM (Identity) APIs.
 */











const BASE_URL = config/* default */.Z.get('identity.baseUrl');
const VPPA_BYPASS = config/* default */.Z.get('identity.allowableBrandsVPPABypass');
const SESSION_TIMEOUT = config/* default */.Z.get('identity.sessionTimeout') * 1000;
const CLIENT_TYPE = config/* default */.Z.get('identity.googleClientType');
const BRAND_SOURCE = config/* default */.Z.get('identity.defaultBrandSource');
const COOKIE_DOMAIN = config/* default */.Z.get('app.cookieDomain');
const API_VERSION = config/* default */.Z.get('identity.version');
const IFRAME_BASE_URL = config/* default */.Z.get('identity.iframeBaseUrl');
const STORAGE_KEY = 'nbcIdentity';
const accountErrors = {
  ACCOUNT_ERROR: 'ACCOUNT_ERROR',
  EMAIL_ALREADY_EXISTS: 'EMAIL_ALREADY_EXISTS',
  USERNAME_NOT_VALID: 'USERNAME_NOT_VALID',
  USER_ALREADY_EXISTS: 'USER_ALREADY_EXISTS',
  USER_NOT_FOUND: 'USER_NOT_FOUND',
  TOO_MANY_LOGIN_ATTEMPTS: 'TOO_MANY_LOGIN_ATTEMPTS',
  NO_EMAIL_PROVIDED: 'NO_EMAIL_PROVIDED',
  UNAUTHORIZED: 'UNAUTHORIZED',
  ACCOUNT_ID_ALREADY_EXISTS: 'ACCOUNT_ID_ALREADY_EXISTS',
  PRECONDITION_FAILED: 'PRECONDITION_FAILED'
};
const identityEvents = {
  STORE_IDENTITY_SESSION: 'STORE_IDENTITY_SESSION',
  CLEAR_IDENTITY_SESSION: 'CLEAR_IDENTITY_SESSION'
};
let languageCountry;
let identityIframe;
const setLanguage = lang => languageCountry = "".concat(lang, "-US");
const setIdentityIframe = data => {
  identityIframe = data;
};

/**
 * Normalizes the gender input by converting it to lowercase.
 * If the gender matches the translated string for "prefer not to say" or "non-binary",
 * it returns 'prefer-not-to-say' or 'non-binary' respectively.
 *
 * @param {string} gender - The gender input to be normalized.
 * @param {string} language - The language code for translation lookup.
 * @returns {string} - The normalized gender string.
 */
const normalizeGender = (gender, language) => {
  if (!gender) return '';
  const preferNotToSay = (0,getTranslatedString/* default */.Z)(language, 'general.preferNotToSay');
  const noneOfTheAbove = (0,getTranslatedString/* default */.Z)(language, 'general.noneOfTheAbove');
  if (gender === preferNotToSay) return 'prefer-not-to-say';
  if (gender === noneOfTheAbove) return 'none-of-the-above';
  return gender.toLowerCase();
};

/**
 * Stores session details in localStorage and a cross-domain cookie.
 *
 * @param {string} token
 *   The users session token.
 * @param {string} user
 *   The current users info.
 *
 * @return {null} nothing :-)
 */
const storeSession = _ref => {
  let {
    token,
    user,
    timestamp = Date.now()
  } = _ref;
  if ((0,hasLocalStorage/* default */.Z)()) {
    const value = JSON.stringify({
      user,
      timestamp,
      token
    });
    localStorage.setItem(STORAGE_KEY, value);
    if (identityIframe) {
      IframeCommunication.sendMessage(identityIframe, identityEvents.STORE_IDENTITY_SESSION, {
        storage: value
      });
    }
    localStorage.setItem(STORAGE_KEY, JSON.stringify({
      user,
      timestamp,
      token
    }));
  }
  cookies_default().set('park-fr', token, {
    domain: COOKIE_DOMAIN,
    expires: 365 * 24 * 3600
  }); // 1 year
};

/**
 * Helper to normalize the user's profile for 3rd party vendors.
 *
 * @param {Object} user
 *   The current user's info.
 *
 * @param {string} signInType
 *  The sign in method used (email, facebook, google, apple)
 *
 * @return {object}
 *   Returns user object with profile id
 */
const normalizeUserProfile = (user, signInType) => ({
  ...user.data.profile,
  signInType,
  vendorId: get_default()(user, ['data', 'profile', 'googleId']) ? user.data.profile.googleId : get_default()(user, ['data', 'profile', 'appleId']) ? user.data.profile.appleId : get_default()(user, ['data', 'profile', 'facebookId'])
});
const getIDMBypassVPPA = () => {
  var _window, _window$TheStore, _ref2, _state$launchDarkly$c, _state$launchDarkly, _state$launchDarkly$c2, _state$launchDarkly2, _state$launchDarkly2$;
  const state = (_window = window) === null || _window === void 0 ? void 0 : (_window$TheStore = _window.TheStore) === null || _window$TheStore === void 0 ? void 0 : _window$TheStore.getState();
  const isVppaCheckboxEnabled = (_ref2 = (_state$launchDarkly$c = (_state$launchDarkly = state.launchDarkly) === null || _state$launchDarkly === void 0 ? void 0 : (_state$launchDarkly$c2 = _state$launchDarkly.client) === null || _state$launchDarkly$c2 === void 0 ? void 0 : _state$launchDarkly$c2.isVppaCheckboxEnabled) !== null && _state$launchDarkly$c !== void 0 ? _state$launchDarkly$c : (_state$launchDarkly2 = state.launchDarkly) === null || _state$launchDarkly2 === void 0 ? void 0 : (_state$launchDarkly2$ = _state$launchDarkly2.server) === null || _state$launchDarkly2$ === void 0 ? void 0 : _state$launchDarkly2$.isVppaCheckboxEnabled) !== null && _ref2 !== void 0 ? _ref2 : true;
  return String(!isVppaCheckboxEnabled);
};

/**
 * Helper to get vppa setting from config.
 *
 * @param {object} location
 *   Location object to get brand information.
 *
 * @return {bool}
 *   Returns bypass VPPA value set in configuration.
 */
const getBypassVPPA = location => {
  const brand = get_default()(location, ['query', 'brand'], '');
  const pathname = get_default()(location, ['pathname'], '');
  const idmConfig = VPPA_BYPASS[brand];
  const isBypassVPPA = idmConfig && get_default()(idmConfig, ['pages'], []).indexOf(pathname) > -1 && get_default()(idmConfig, ['isAllowedToBypassVPPA']);
  return isBypassVPPA;
};

/**
 * Helper to retrieve the current users session data from cookies or localStorage.
 *
 *   The users session token from an app.
 * @return {string}
 *   The session date or null if not found.
 */
const getSession = () => {
  const data = (0,hasLocalStorage/* default */.Z)() && localStorage.getItem(STORAGE_KEY);
  return data ? JSON.parse(data) : null;
};

/**
 * Helper to retrieve a users session token.
 *
 * @return {string}
 *   The users session token or null if not found.
 */
const getSessionToken = () => {
  const data = getSession();
  const cookie = typeof window !== 'undefined' && cookies_default().get('park-fr');
  return data && data.token || cookie;
};

/**
 * Helper to determine if a user is authentcated with Identity. This is a best
 * guess based on the presence of cached browser data.
 *
 * @return {bool}
 *   True if the user has session data presence.
 */
const hasSession = () => {
  const data = getSession();
  const cookie = typeof window !== 'undefined' && cookies_default().get('park-fr');
  return !!(data && data.token || cookie);
};

/**
 * Retrieves user info using their session token.
 *
 * @param {object} attributes
 *   Attributes to send in headers:
 *    token: The users session token.
 *    brandSource: Used to populate the X-IDM-Brand-Source header.
 *    location: location object.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const getUserInfo = function () {
  let {
    token = getSessionToken(),
    signInType,
    brandSource,
    location = {}
  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const isBrandBypassVPPA = getBypassVPPA(location);
  const isBypassVPPA = getIDMBypassVPPA() === 'true';
  const conditionalHeaders = {};
  if (isBypassVPPA || isBrandBypassVPPA) {
    conditionalHeaders['X-IDM-Bypass-Vppa'] = 'true';
  }
  return (0,lib_axios/* default */.Z)({
    method: 'get',
    url: "".concat(BASE_URL, "/api/profile"),
    headers: {
      idmVersion: 'v2',
      fr_token: token,
      idm_tx_ref: cookies_default().get('idm_tx_ref'),
      'X-IDM-Brand-Source': brandSource || BRAND_SOURCE,
      'API-Version': API_VERSION,
      ...conditionalHeaders
    }
  }).then(response => {
    const code = get_default()(response, 'data.result.code');
    if (code !== 200) {
      throw accountErrors.ACCOUNT_ERROR;
    }
    return response;
  }).then(response => normalizeUserProfile(response, signInType)).then(user => {
    storeSession({
      token,
      user
    });
    return user;
  }).catch(err => {
    cookies_default().expire('idm_tx_ref', {
      domain: COOKIE_DOMAIN
    });
    throw err;
  });
};

/**
 * Validates if a user session is valid based on token in localStorage.
 *
 *  @param {bool} location
 *   Used to populate the x-idm-bypass-vppa in getUserInfo header.
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const validateSession = location => {
  const data = (0,hasLocalStorage/* default */.Z)() && JSON.parse(localStorage.getItem(STORAGE_KEY));
  if (data && data.token && data.timestamp) {
    if (Date.now() > data.timestamp + SESSION_TIMEOUT * 1000) {
      localStorage.removeItem(STORAGE_KEY);
      return Promise.reject('Session found in local storage has expired.');
    }
    return getUserInfo({
      token: data.token,
      signInType: get_default()(data, ['user', 'signInType']),
      location
    }).catch(err => {
      localStorage.removeItem(STORAGE_KEY);
      return Promise.reject(err);
    });
  }

  // No session found, return valid.
  return Promise.resolve();
};

/**
 * Login an user
 *
 * @param {Object} userData
 *   Contains details of the user account.
 * @param {string} userData.email
 *   The users email address if coming from email login.
 * @param {string} userData.password
 *   The users password if coming from email login.
 * @param {string} userData.token
 *   The users vendor token  if coming from vendor login.
 * @param {string} signInType
 *   The vendor name.
 * @param {bool} update
 *   Flag to make email replacement in the IDM servers.
 * @param {bool} vppaOptIn
 *   Optional. Flag to set vppa re opt in value.
 * @param {string} brandSource
 *   Optional. Used to populate the X-IDM-Brand-Source header.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */

const login = function (userData, signInType) {
  let update = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  let vppaOptIn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  let brandSource = arguments.length > 4 ? arguments[4] : undefined;
  const url = "".concat(BASE_URL, "/api/profile/").concat(signInType, "/session");
  const headers = {
    idmVersion: 'v2',
    idm_tx_ref: (0,utils_uuid/* uuid */.V)(),
    'X-IDM-Brand-Source': brandSource || BRAND_SOURCE,
    vppa_re_opt_in: vppaOptIn,
    'API-Version': API_VERSION,
    'X-IDM-Bypass-Vppa': getIDMBypassVPPA()
  };
  if (signInType === 'google') {
    headers.id_token = userData.token;
    headers.client_type = CLIENT_TYPE;
    if (update) {
      headers.update_action = 'replace-email';
    }
  }
  if (signInType === 'facebook') {
    headers.access_token = userData.token;
  }
  if (signInType === 'apple') {
    headers.id_token = userData.token;
  }
  if (signInType === 'email') {
    const password = window.btoa(userData.password.trim());
    headers['X-IDM-Username'] = userData.email;
    headers['X-IDM-Password'] = "=?UTF-8?B?".concat(password, "?=");
  }
  let token;
  return (0,lib_axios/* default */.Z)({
    method: 'get',
    url,
    headers
  }).then(response => {
    const code = get_default()(response, 'data.result.code');
    token = get_default()(response, 'data.session.tokenId');
    cookies_default().set('idm_tx_ref', get_default()(response, 'data.idm_tx_ref'), {
      domain: COOKIE_DOMAIN,
      expires: 365 * 24 * 3600
    }); // 1 year
    if (code === 200 && token) {
      return response;
    }
    switch (code) {
      case 403:
        throw accountErrors.USER_ALREADY_EXISTS;
      case 401:
        throw accountErrors.UNAUTHORIZED;
      case 404:
        {
          const description = get_default()(response, 'data.result.description');
          throw description === 'Your account has been locked.' ? accountErrors.TOO_MANY_LOGIN_ATTEMPTS : accountErrors.USER_NOT_FOUND;
        }
      case 409:
        throw accountErrors.ACCOUNT_ID_ALREADY_EXISTS;
      default:
        throw accountErrors.ACCOUNT_ERROR;
    }
  }).then(response => normalizeUserProfile(response, signInType)).then(user => {
    storeSession({
      token,
      user
    });
    return user;
  }).catch(err => {
    cookies_default().expire('idm_tx_ref', {
      domain: COOKIE_DOMAIN
    });
    throw err;
  });
};

/**
 * Registers a new user Identity account.
 *
 * @param {Object} userData
 *   Contains details of the user account.
 * @param {string} userData.email
 *   The users email address.
 * @param {string} userData.password
 *   The users password.
 * @param {string} userData.forename
 *   The users first name.
 * @param {string} userData.surname
 *   The users second name.
 * @param {string} userData.dob
 *   The age range, poor naming on API side.
 * @param {string} userData.zipCode
 *   The users service zip code.
 * @param {string} userData.gender
 *   The users gender.
 * @param {string} userData.phoneNumber
 *   The brand source.
 * @param {string} authType
 *   The type of registration - [email, facebook, google, apple]
 * @param {string} brandSource
 *   Optional. Used to populate the X-IDM-Brand-Source header.
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const register = (userData, authType, brandSource) => {
  let data;
  const url = "".concat(BASE_URL, "/api/profile/").concat(authType, "/register");
  const headers = {
    idmversion: 'v2',
    'Content-Type': 'application/json',
    'X-IDM-Brand-Source': brandSource || BRAND_SOURCE,
    idm_tx_ref: (0,utils_uuid/* uuid */.V)(),
    'API-Version': API_VERSION,
    'X-IDM-Bypass-Vppa': getIDMBypassVPPA()
  };
  if (authType === 'google') {
    headers.id_token = userData.token;
    headers.client_type = CLIENT_TYPE;
  }
  if (authType === 'facebook') {
    headers.access_token = userData.token;
  }
  if (authType === 'apple') {
    headers.id_token = userData.token;
  }
  data = {
    givenName: userData.forename || '',
    sn: userData.surname || '',
    gender: userData.gender || '',
    serviceZip: userData.zipCode || null,
    birthYear: userData.birthYear && parseInt(userData.birthYear, 10) || null
  };
  if (authType === 'email') {
    data.userName = userData.email;
    data.mail = userData.email;
    data.password = userData.password.trim();
  }
  data = JSON.stringify(data);
  return (0,lib_axios/* default */.Z)({
    method: 'post',
    url,
    data,
    headers
  }).then(response => {
    const code = get_default()(response, 'data.result.code');
    if (code !== 200) {
      switch (code) {
        case 403:
          {
            const description = get_default()(response, 'data.result.description');
            throw description === 'Registration failed because email address format is invalid.' ? accountErrors.USERNAME_NOT_VALID : accountErrors.USER_ALREADY_EXISTS;
          }
        default:
          throw accountErrors.ACCOUNT_ERROR;
      }
    }
    return response;
  }).then(response => {
    cookies_default().set('idm_tx_ref', get_default()(response, 'data.idm_tx_ref'), {
      domain: COOKIE_DOMAIN,
      expires: 365 * 24 * 3600
    }); // 1 year
    return login(userData, authType, false, false, brandSource);
  }).catch(err => {
    cookies_default().expire('idm_tx_ref', {
      domain: COOKIE_DOMAIN
    });
    throw err;
  });
};

/**
 * Log out a user by invalidating their session token.
 *
 * @param {string} token
 *   The users session token.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const logout = function () {
  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getSessionToken();
  const url = "".concat(BASE_URL, "/api/sessions/logout");
  return !token || (0,lib_axios/* default */.Z)({
    method: 'post',
    url,
    data: JSON.stringify({}),
    // Required to force Content-Type header.
    headers: {
      'Content-Type': 'application/json',
      tokenId: token,
      'API-Version': API_VERSION
    }
  }).catch(err => err) // Continue regardless; non fatal error.
  .then(() => {
    (0,hasLocalStorage/* default */.Z)() && localStorage.removeItem(STORAGE_KEY); // Cached session data
    cookies_default().expire('park-fr', {
      domain: COOKIE_DOMAIN
    });
    cookies_default().expire('idm_tx_ref', {
      domain: COOKIE_DOMAIN
    });
    if (identityIframe) {
      IframeCommunication.sendMessage(identityIframe, identityEvents.CLEAR_IDENTITY_SESSION, {});
    }
    return true;
  });
};

/**
 * Request an email to reset a users password.
 *
 * @param {string} email
 *   The email of the user account.
 * @param {string} brand
 *   The app the user is comming from
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const requestPassword = (email, brand) => {
  const url = "".concat(BASE_URL, "/api/v3/password/reset");
  return axios({
    method: 'post',
    url,
    data: {
      input: {
        queryFilter: "mail eq \"".concat(email.toLowerCase(), "\"")
      }
    },
    headers: {
      'Content-Type': 'application/json',
      'Accept-Language': languageCountry,
      idmVersion: 'v2',
      idm_tx_ref: uuid(),
      'X-IDM-Brand-Source': getBrandFromUrlParam(brand, 'brandSource') || BRAND_SOURCE
    }
  }).then(response => {
    const code = get(response, 'data.result.code');
    if (code !== 200) {
      const error = {
        response: {
          data: {
            message: get(response, 'data.result.description')
          }
        }
      };
      throw error;
    }
    Cookies.set('idm_tx_ref', get(response, 'data.idm_tx_ref'), {
      domain: COOKIE_DOMAIN,
      expires: 365 * 24 * 3600
    }); // 1 year
    return response;
  }).catch(err => {
    Cookies.expire('idm_tx_ref', {
      domain: COOKIE_DOMAIN
    });
    // Don't display an error if the user doesn't exist to block nefarious
    // attempts to find user emails.
    if (get(err, 'response.data.message') === 'Unable to find account') {
      return true;
    }
    throw err;
  });
};

/**
 * Reset a users password.
 *
 * @param {string} code
 *   Code parameter sent via email link.
 * @param {string} password
 *   The new password for the account.
 * @param {string} token
 *   Token parameter sent via email link.
 * @param {string} brandSource
 *   the brand source value from the query params
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const resetPassword = (code, password, token, brandSource) => {
  const url = "".concat(BASE_URL, "/api/v3/password/reset");
  return axios({
    method: 'post',
    url,
    data: {
      input: {
        code
      },
      token
    },
    headers: {
      'Accept-Language': languageCountry,
      'Content-Type': 'application/json',
      idmVersion: 'v2',
      idm_tx_ref: Cookies.get('idm_tx_ref'),
      'X-IDM-Brand-Source': brandSource || BRAND_SOURCE
    }
  }).then(response => {
    const statusCode = get(response, 'data.result.code');
    if (statusCode !== 200) {
      const error = {
        response: {
          data: {
            message: get(response, 'data.result.description')
          }
        }
      };
      throw error;
    }
    return axios({
      method: 'post',
      url,
      data: {
        input: {
          password: password.trim()
        },
        token: get(response.data, ['passwordreset', 'token'])
      },
      headers: {
        'Accept-Language': languageCountry,
        'Content-Type': 'application/json',
        idmVersion: 'v2',
        idm_tx_ref: Cookies.get('idm_tx_ref'),
        'X-IDM-Brand-Source': brandSource || BRAND_SOURCE
      }
    });
  }).then(response => {
    storeSession({
      token: get(response.data, ['session', 'tokenId']),
      user: get(response.data, ['profile'])
    });
  }).catch(err => {
    Cookies.expire('idm_tx_ref', {
      domain: COOKIE_DOMAIN
    });
    throw err;
  });
};
const getFieldValue = (key, value) => {
  let fieldValue = '';
  // Birth year needs to be sent as an integer
  if (key === 'birthYear') {
    fieldValue = value && parseInt(value, 10);
  } else {
    fieldValue = value === null || value === void 0 ? void 0 : value.toString();
  }
  return fieldValue;
};

/**
 * Update a user profile data.
 *
 * @param {object} userInfo
 *   New user info to update on the profile.
 * @param {object} currentUserInfo
 *   The current user info on the profile prior to update.
 * @param {object} credentials
 *   The users password and email for sensitive fields.
 * @param {string} token
 *   The users session token.
 * @param {bool} isResendEdit
 *   Send it to break recursivity.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const editUserInfo = _ref3 => {
  let {
    userInfo,
    currentUserInfo,
    credentials = null,
    token = getSessionToken(),
    location = {},
    isResendEdit = false
  } = _ref3;
  const isBypassVPPA = getBypassVPPA(location);
  const url = "".concat(BASE_URL, "/api/").concat(isBypassVPPA ? '2020-10' : 'v3', "/profile");

  // Map fields to OpenIDM
  const fields = {
    givenName: 'forename',
    sn: 'surname',
    gender: 'gender',
    ageRange: 'dob',
    serviceZip: 'zipCode',
    telephoneNumber: 'phoneNumber',
    mail: 'email',
    userName: 'email',
    birthYear: 'birthYear'
  };

  // Allow these fields to have an empty value.
  const allowEmptyValues = ['givenName', 'sn', 'gender', 'ageRange', 'serviceZip', 'telephoneNumber', 'birthYear'];
  const headers = {
    idmVersion: 'v2',
    session_token: token,
    idm_tx_ref: cookies_default().get('idm_tx_ref'),
    'Accept-Language': languageCountry,
    'X-IDM-Brand-Source': BRAND_SOURCE,
    'X-IDM-Update-Rev': currentUserInfo.rev,
    ...(isBypassVPPA ? {
      'x-idm-bypass-vppa': true
    } : {})
  };
  if (credentials) {
    headers['X-IDM-Username'] = credentials.email;
    headers['X-IDM-Password'] = credentials.password;
  }
  const operations = Object.keys(fields).filter(key => fields[key] in userInfo && fields[key] in currentUserInfo && userInfo[fields[key]] !== currentUserInfo[fields[key]] && (allowEmptyValues.indexOf(key) > -1 || userInfo[fields[key]].length > 0)).map(key => ({
    operation: 'replace',
    field: key,
    value: getFieldValue(key, userInfo[fields[key]])
  }));
  return (0,lib_axios/* default */.Z)({
    method: 'patch',
    url,
    data: operations,
    headers
  }).then(response => {
    const code = get_default()(response, 'data.result.code');
    if (code !== 200) {
      const description = get_default()(response, 'data.result.description');
      throw description === 'Email already exist in the system.' ? accountErrors.EMAIL_ALREADY_EXISTS : code === 412 ? accountErrors.PRECONDITION_FAILED : accountErrors.ACCOUNT_ERROR;
    }
    return response;
  }).then(response => {
    // Update session in localStorage.
    const data = getSession();
    const sessionToken = data.token ? data.token : getSessionToken();
    storeSession({
      ...data,
      token: sessionToken,
      user: response.data.profile
    });
    return response.data.profile;
  }).catch(error => {
    if (error === accountErrors.PRECONDITION_FAILED && !isResendEdit) {
      return getUserInfo({
        token,
        location
      }).then(user => editUserInfo({
        userInfo,
        currentUserInfo: (0,normalizeAccountInfo/* default */.Z)(user),
        credentials,
        token,
        location,
        isResendEdit: true
      }).catch(() => Promise.reject(error)));
    }
    return Promise.reject(error);
  });
};

/**
 * Validates a user code with the IDM servers.
 *
 * @param {string} code
 *   The code to validate.
 *
 * @return {Promise}
 *   Resolves with a payload when the request is fulfilled, rejects on error.
 */
const validateIdmCode = code => {
  const token = getSessionToken();
  const isBypassVPPA = getIDMBypassVPPA();
  return (0,lib_axios/* default */.Z)({
    url: '/activate/nbc/register',
    method: 'POST',
    data: {
      userCode: code,
      bypassVPPA: isBypassVPPA === 'true'
    },
    headers: {
      token
    }
  });
};
const fetchTrialAccess = _ref4 => {
  let {
    rev,
    userId,
    episodeId
  } = _ref4;
  return (0,lib_axios/* default */.Z)({
    url: '/api/v1/trial',
    method: 'POST',
    data: {
      rev,
      userId,
      episodeId
    }
  });
};
const updateSession = newValues => {
  if (!(0,hasLocalStorage/* default */.Z)()) {
    return;
  }
  const currentSession = getSession();
  localStorage.setItem(STORAGE_KEY, JSON.stringify({
    ...(currentSession || {}),
    timestamp: Date.now(),
    user: {
      ...((currentSession === null || currentSession === void 0 ? void 0 : currentSession.user) || {}),
      ...newValues
    }
  }));
};

/***/ }),

/***/ 67745:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ launchDarkly; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/launchdarkly-js-client-sdk/dist/ldclient.es.js
var ldclient_es = __webpack_require__(16201);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/axios/lib/axios.js + 48 modules
var axios = __webpack_require__(238);
;// CONCATENATED MODULE: ./lib/conveyor.js



const CONVEYOR_URL = config/* default */.Z.get('API.conveyor.url');
const TIMEOUT = config/* default */.Z.get('API.conveyor.timeout');
const getAudienceIds = mpid => axios/* default */.Z.get("".concat(CONVEYOR_URL, "?mpid=").concat(mpid), {
  timeout: TIMEOUT
}).then(response => get_default()(response, 'data.audiences', []).map(_ref => {
  let {
    audience_id: id
  } = _ref;
  return "".concat(id);
}))
// Return array to unblock promises in case we get an error back from server
.catch(() => []);
/* harmony default export */ var conveyor = ({
  getAudienceIds
});
// EXTERNAL MODULE: ./lib/identity.js + 1 modules
var identity = __webpack_require__(62899);
;// CONCATENATED MODULE: ./lib/launchDarkly.js






const CLIENT_KEY = config/* default */.Z.get('API.launchdarkly.clientId');
let instance;
const getUser = (key, audienceIds) => ({
  kind: 'user',
  key,
  'Identity Auth': (0,identity/* hasSession */.Hk)(),
  ...(audienceIds.length ? {
    MpAudiences: audienceIds
  } : {})
});
const conveyorAudiences = (isPersonalizationEnabled, key) => isPersonalizationEnabled ? conveyor.getAudienceIds(key) : [];
const initialize = function () {
  let isPersonalizationEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  return new Promise(resolve => {
    if (instance) {
      resolve(instance);
      return;
    }
    mParticle/* default */.ZP.getId().then(key => Promise.all([key, conveyorAudiences(isPersonalizationEnabled, key)])).then(_ref => {
      let [key, audienceIds] = _ref;
      const client = (0,ldclient_es/* initialize */.j2)(CLIENT_KEY, getUser(key, audienceIds));
      client.on('ready', () => {
        instance = client;
        resolve(instance);
      });
    });
  });
};
const reidentifyUser = isPersonalizationEnabled => mParticle/* default */.ZP.getId().then(key => Promise.all([key, initialize(), conveyorAudiences(isPersonalizationEnabled, key)])).then(_ref2 => {
  let [key, ld, audienceIds] = _ref2;
  return ld.identify(getUser(key, audienceIds));
});

/**
 * LaunchDarkly function to access feature flags.
 *
 * @param {string} flagName
 *   The unique key from feature flag.
 * @param {*} defaultVariation
 *   Optional, the default value from the feature flag.
 *
 * @return {promise}
 *   Return flag's value.
 */

const getFlagValue = function (flagName) {
  let defaultVariation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return mParticle/* default */.ZP.getId().then(() => initialize()).then(ld => ld.variation(flagName, defaultVariation));
};
/* harmony default export */ var launchDarkly = ({
  initialize,
  reidentifyUser,
  getFlagValue
});

/***/ }),

/***/ 7590:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ nbcAPI; }
/* harmony export */ });
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(238);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80129);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36848);
/* harmony import */ var _utils_log_requests__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33359);





const URL = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.nbc.url');
const TIMEOUT = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.nbc.timeout');

// Debug Request/Response URLs
config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.nbc.debug') && (0,_utils_log_requests__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)();

/**
 * General API GET method.
 *
 * @param {string} endpoint
 *   The relative path to fetch from the API.
 * @param {object} params
 *   Optional, query parameters
 * @param {object} options
 *   Optional, override options for Axios.
 *
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there's an error.
 */
function nbcAPI(endpoint, params) {
  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  let url = "".concat(URL, "/").concat(endpoint);
  if (params) {
    url = "".concat(url, "?").concat(qs__WEBPACK_IMPORTED_MODULE_3___default().stringify(params));
  }
  const headers = {};
  return axios__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.get(url, {
    timeout: options.timeout || TIMEOUT,
    headers
  }).catch(err => (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(err, err.status || 500, url));
}

/***/ }),

/***/ 66956:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ZP: function() { return /* binding */ parkAPI; },
/* harmony export */   gB: function() { return /* binding */ parkAPIPost; },
/* harmony export */   gJ: function() { return /* binding */ getVideoId; },
/* harmony export */   tC: function() { return /* binding */ parkAPIPatch; }
/* harmony export */ });
/* unused harmony exports resetCache, parkAPIDelete */
/* harmony import */ var core_js_modules_es_typed_array_uint8_array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28607);
/* harmony import */ var core_js_modules_es_typed_array_uint8_array_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint8_array_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_typed_array_fill_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79943);
/* harmony import */ var core_js_modules_es_typed_array_fill_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_fill_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_typed_array_set_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79976);
/* harmony import */ var core_js_modules_es_typed_array_set_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_set_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_typed_array_sort_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(93356);
/* harmony import */ var core_js_modules_es_typed_array_sort_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_sort_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(74369);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(238);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(80129);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var memory_cache__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7113);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(44229);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(41609);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(36848);
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(4147);
/* harmony import */ var _utils_log_requests__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(33359);













const URL = config__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.get('API.park.url');
const V4URL = config__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.get('API.park-v4.url');
const MAX_AGE = config__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.get('API.park.maxAge');
const TIMEOUT = config__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.get('API.park.timeout');
const {
  version
} = _package_json__WEBPACK_IMPORTED_MODULE_9__;
// Debug Request/Response URLs
config__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.get('API.park.debug') && (0,_utils_log_requests__WEBPACK_IMPORTED_MODULE_10__/* ["default"] */ .Z)();
const sha1 = async inputString => {
  let output;
  if (window && !false) {
    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#converting_a_digest_to_a_hex_string
    const data = new TextEncoder().encode(inputString);
    const buffer = await window.crypto.subtle.digest('SHA-1', data);
    const byteArray = Array.from(new Uint8Array(buffer));
    output = byteArray.map(byte => byte.toString(16).padStart(2, '0')).join('');
  } else {
    output = crypto__WEBPACK_IMPORTED_MODULE_6___default().createHash('sha1').update(inputString).digest('hex');
  }
  return output;
};

/**
 * General API GET method.
 *
 * @param {string} resourceName
 *   The relative path to fetch from the API.
 * @param {object} params
 *   GET arguments to send with the request.
 * @param {object} options
 *   Override options for Axios.
 *   header are required.
 *
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there's an error.
 */
function parkAPI(resourceName, params) {
  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  const url = "".concat(options.v4 ? V4URL : URL, "/").concat(resourceName).concat(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_7___default()(params) ? '' : "?".concat(qs__WEBPACK_IMPORTED_MODULE_11___default().stringify(params)));
  let request = memory_cache__WEBPACK_IMPORTED_MODULE_5__.get(url);
  if (!request) {
    const headers =  false ? 0 : {
      Accept: 'application/vnd.api+json'
    };
    // derivatives parameter requires a JSON-API extension.
    const ext = [];
    if (params && params.derivatives) {
      ext.push('park/derivatives');
    }
    if (ext.length) {
      headers.Accept += "; ext=\"".concat(ext.join(','), "\"");
    }

    // Prevent altering the user agent on browsers as it will raise an error.
    // CORS requests break with any custom headers
    if (typeof window === 'undefined') {
      headers['User-Agent'] = "generetic/".concat(version);
      // cache troubleshooting
      headers['x-park-requestor'] = 'nbcGeneretic';
    }
    request = axios__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z.get(url, {
      timeout: options.timeout || TIMEOUT,
      headers,
      v4: options.v4
    }).catch(err => (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(err, err.status || 500, url));
    memory_cache__WEBPACK_IMPORTED_MODULE_5__.put(url, request, options.maxAge || MAX_AGE);
  }
  return request;
}
const resetCache = () => {
  cache.clear();
};

// Helper for creating a Park v4 required video ID.
const getVideoId = async videoId => {
  const videoIdEncrypted = await sha1("map:array:2:array:2:string:44:array:2:string:11:entity.typestring:6:videosstring:".concat(videoId.length + String(videoId.length).length + 32, ":array:2:string:7:mpxGuidstring:").concat(videoId.length, ":").concat(videoId));
  return videoIdEncrypted;
};

/**
 * General API POST method.
 *
 * @param {string} resourceName
 *   The relative path to post to API.
 * @param {object} payload
 *   Data to be send.
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there is an error.
 */
const parkAPIPost = (resourceName, payload) => {
  const url = "".concat(V4URL, "/").concat(resourceName);
  const headers =  false ? 0 : {
    'Content-Type': 'application/vnd.api+json'
  };

  // Prevent altering the user agent on browsers as it will raise an error.
  // CORS requests break with any custom headers
  if (typeof window === 'undefined') {
    headers['User-Agent'] = "generetic/".concat(version);
    // cache troubleshooting
    headers['x-park-requestor'] = 'nbcGeneretic';
  }
  return (0,axios__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)({
    method: 'post',
    url,
    data: JSON.stringify(payload),
    timeout: TIMEOUT,
    headers
  }).catch(err => (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(err, err.status || 500, url));
};

/**
 * General API PATCH method.
 *
 * @param {string} resourceName
 *   The relative path to patch to API.
 * @param {object} payload
 *   Data to be send.
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there is an error.
 */

const parkAPIPatch = (resourceName, payload) => {
  const url = "".concat(V4URL, "/").concat(resourceName);
  const headers =  false ? 0 : {
    'Content-Type': 'application/vnd.api+json'
  };

  // Prevent altering the user agent on browsers as it will raise an error.
  // CORS requests break with any custom headers
  if (typeof window === 'undefined') {
    headers['User-Agent'] = "generetic/".concat(version);
    // cache troubleshooting
    headers['x-park-requestor'] = 'nbcGeneretic';
  }
  return (0,axios__WEBPACK_IMPORTED_MODULE_12__/* ["default"] */ .Z)({
    method: 'patch',
    url,
    data: JSON.stringify(payload),
    timeout: TIMEOUT,
    headers
  }).catch(err => (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_8__/* ["default"] */ .Z)(err, err.status || 500, url));
};

/**
 * General API DELETE method.
 *
 * @param {string} resourceName
 *   The relative path to post to API.
 * @return {promise}
 *   Resolves when the request is fulfilled, rejects if there is an error.
 */
const parkAPIDelete = resourceName => {
  const url = "".concat(V4URL, "/").concat(resourceName);
  const headers =  false ? 0 : {
    'Content-Type': 'application/vnd.api+json'
  };

  // Prevent altering the user agent on browsers as it will raise an error.
  // CORS requests break with any custom headers
  if (typeof window === 'undefined') {
    headers['User-Agent'] = "generetic/".concat(version);
    // cache troubleshooting
    headers['x-park-requestor'] = 'nbcGeneretic';
  }
  return axios({
    method: 'delete',
    url,
    timeout: TIMEOUT,
    headers
  }).catch(err => throwHTTPError(err, err.status || 500, url));
};

/***/ }),

/***/ 20738:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ connectContainer; }
/* harmony export */ });
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41609);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45697);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67294);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(20688);





/**
 * Creates a Container component to wrap a given compoent.
 *
 * @param {object} options
 *   Key-value options
 * @param {string} options.name
 *   Name to call this (key to use in store)
 * @param {function} options.getComponent
 *   Function that, given props, returns the ReactComponent to render
 * @param {function} options.load
 *   Function that, given params, promises to load data for this container.
 * @param {function} options.mapStateToProps
 *   https://github.com/reactjs/react-redux/blob/master/docs/api.md#arguments
 *
 * @return {Component}
 *   Component that passes down data.
 */
function connectContainer(_ref) {
  let {
    name,
    mapStateToProps,
    getComponent,
    load,
    preload
  } = _ref;
  class Container extends react__WEBPACK_IMPORTED_MODULE_1__.Component {
    constructor(props, context) {
      super(props, context);
      this.loading = null;
      this.clearLoading = this.clearLoading.bind(this);
      this.preLoaded = false;
      this.willReload = false;
    }
    UNSAFE_componentWillMount() {
      // Client: Check if load is needed
      if (typeof window !== 'undefined') {
        this.load(this.props);
      }
    }
    UNSAFE_componentWillReceiveProps(nextProps) {
      // @DEPRECATED
      // Eventually move away from basic comarisons and utilize PureComponent.
      // This likely requires React 16 and use of getDerivedStateFromProps().
      if (this.props !== nextProps) {
        this.load(nextProps);
      }
    }
    load(props) {
      if (preload && !this.preLoaded) {
        preload(props);
        this.preLoaded = true;
      }
      if (!lodash_isEmpty__WEBPACK_IMPORTED_MODULE_0___default()(props.error)) {
        // this prevents an infinite loop of refetches on error
        return;
      }
      if (!props.isPreLoading) {
        if (this.loading) {
          if (!this.willReload) {
            // Props have changed but we are in an async operation right now -
            // We will do a reload after the promise finishes.
            // Just do one reload, even if more than one prop change occurs during
            // the async operation.
            this.willReload = true;
          }
          // Load is already in flight and we've also requested a future reload
          return;
        }
        this.loading = load({
          ...props,
          getState: this.context.store.getState
        });
        if (this.loading) {
          this.loading.then(this.clearLoading).then(() => {
            if (this.willReload) {
              this.willReload = false;
              setTimeout(() => {
                // this is a trick to break out from the current Promise chain
                // and run the reload in the next execution cycle
                this.load(this.props);
              }, 0);
            }
          });
        }
      }
    }
    clearLoading() {
      this.loading = null;
    }
    render() {
      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(getComponent(this.props, this.loading), this.props);
    }
  }
  Container.contextTypes = {
    store: prop_types__WEBPACK_IMPORTED_MODULE_3___default().shape({
      getState: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func).isRequired
    })
  };
  Container.displayName = name;
  const ConnectedContainer = (0,react_redux__WEBPACK_IMPORTED_MODULE_2__/* .connect */ .$j)(mapStateToProps)(Container);
  ConnectedContainer.load = load;
  ConnectedContainer.meta = state => {
    const props = mapStateToProps(state, state);
    return getComponent(props).meta(props);
  };
  ConnectedContainer.httpHeaders = state => {
    const props = mapStateToProps(state, state);
    const component = getComponent(props);
    return component.httpHeaders ? component.httpHeaders(props) : {};
  };
  // Somewhat bad form to have BFF logic in this container but this helps us
  // gain access to.
  ConnectedContainer.getBffParams = state => {
    const props = mapStateToProps(state, state);
    return props.bffParams || {};
  };
  return ConnectedContainer;
}

/***/ }),

/***/ 87096:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Dh: function() { return /* binding */ checkLoadReady; },
/* harmony export */   Lg: function() { return /* binding */ ADOBE_AUTH_CHECK; },
/* harmony export */   aS: function() { return /* binding */ REPORTED_SERVER_FEATURE_FLAGS; },
/* harmony export */   gW: function() { return /* binding */ GEO; },
/* harmony export */   hL: function() { return /* binding */ OC_CONFIG_READY; },
/* harmony export */   sP: function() { return /* binding */ MPARTICLE_ID; },
/* harmony export */   zS: function() { return /* binding */ INITIAL_PERSONALIZATION; }
/* harmony export */ });
const GEO = 'geo';
const MPARTICLE_ID = 'mParticleId';
const ADOBE_AUTH_CHECK = 'adobeAuthCheck';
const INITIAL_PERSONALIZATION = 'initialPersonalization';
const REPORTED_SERVER_FEATURE_FLAGS = 'reportedServerFeatureFlags';
const OC_CONFIG_READY = 'ocConfigReady';
const checkLoadReady = function () {
  let requiredSteps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  let completedSteps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!(requiredSteps !== null && requiredSteps !== void 0 && requiredSteps.length)) {
    // nothing is required
    return true;
  }
  return requiredSteps.every(step => !!(completedSteps !== null && completedSteps !== void 0 && completedSteps[step]));
};

/***/ }),

/***/ 97503:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67788);
/* harmony import */ var _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1__);
/**
 * This file creates a library for tracking client performance statistics.
 */


const PERFORMANCE_DEBUGGING = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('app.performance.debug');
const performance = {};

/**
 * Track a new performance event. The event is marked using the browsers
 * Performance implementation.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark
 *
 * @param {string} name
 *   The name of the event to mark.
 * @return {null}
 *   Nothing
 */
performance.mark = name => {
  if (typeof window === 'undefined' || !window.performance || !window.performance.mark) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().error('[Performance] Must be called within a browser environment');
    return;
  }
  window.performance.mark(name);
  if (PERFORMANCE_DEBUGGING) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().log("[Performance] ".concat(Math.round(window.performance.now()), "ms - ").concat(name));
  }
};

/**
 * Clears performance marks and measures.
 *
 * @return {null}
 *   Nothing
 */
performance.clear = () => {
  if (typeof window === 'undefined' || !window.performance || !window.performance.clearMarks || !window.performance.clearMeasures) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().error('[Performance] Must be called within a browser environment');
    return;
  }
  if (PERFORMANCE_DEBUGGING) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().log('[Performance] Cleared all marks and measures');
  }
};

/**
 * Gets the duration between 2 performance events events for a given type.
 * - Do not pass markerNameB to get the time from markerNameA to now.
 * - Pass undefined for markerNameA to get time from nav start to markerNameB
 *
 * @param {string} markerNameA
 *   The name of the first event.
 * @param {string} markerNameB
 *   The name of the second event.
 * @return {int|null}
 *   The duration in milliseconds, or null if not found.
 */
performance.getDuration = (markerNameA, markerNameB) => {
  if (typeof window === 'undefined' || !window.performance || !window.performance.measure || !window.performance.getEntriesByName || !window.performance.clearMeasures) {
    _nbcu_park_logger__WEBPACK_IMPORTED_MODULE_1___default().error('[Performance] Must be called within a browser environment');
    return null;
  }
  try {
    window.performance.measure('measurement', markerNameA, markerNameB);
    const entry = window.performance.getEntriesByName('measurement', 'measure').pop();
    const duration = entry ? Math.floor(entry.duration) : null;
    window.performance.clearMeasures('measurement');
    return duration;
  } catch (e) {
    return null;
  }
};
/* harmony default export */ __webpack_exports__.Z = (performance);

/***/ }),

/***/ 89880:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(238);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36848);
/* harmony import */ var _utils_getBrandFromUrlParam__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(67689);
/* harmony import */ var _utils_hasLocalStorage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(395);






const URL = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.primetime.url');
const TIMEOUT = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.primetime.timeout');
const STORAGE_KEY = 'nbc.concurrencySession';
const getHeaders = network => ({
  Authorization: "Basic ".concat((0,_utils_getBrandFromUrlParam__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(network, 'primetimeAccessKey')),
  'Content-Type': 'application/x-www-form-urlencoded'
});
const encodedUserId = userId => typeof window !== 'undefined' && window.btoa(userId);
const primetime = {};

// Store any active axios request token for possible cancelation.
const CancelToken = axios__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.CancelToken;
let source = CancelToken.source();
let sessionData = {};

/**
 * Initializes Adobe Primetime session.
 *
 * @param {string} network The network name, used for grabbing config data (e.g. nbc).
 * @param {string} mvpd The MVPD ID to use, (e.g. Cablevision).
 * @param {string} userId The upstreamUserId taken from Adobe metadata.
 * @param {object} payload Payload for a POST request.
 * @param {object} options
 *   Override options for Axios.
 *
 * @return {promise}
 *   Resolves with an object containing the session ID and the next heartbeat delay
 *   if the request is fulfilled, rejects if there's an error.
 */
primetime.init = function (network, mvpd, userId) {
  let payload = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {
    encode: true
  };
  const {
    encode
  } = options;
  sessionData = {
    mvpd,
    network,
    userId,
    payload,
    encode
  };
  const url = "".concat(URL, "/v2/sessions/").concat(mvpd, "/").concat(encode ? encodedUserId(userId) : userId);
  if ((0,_utils_hasLocalStorage__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)() && localStorage.getItem(STORAGE_KEY)) {
    primetime.destroy({}, true);
  }
  return axios__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.post(url, payload, {
    timeout: options.timeout || TIMEOUT,
    headers: options.headers || getHeaders(network),
    validateStatus: status => status >= 200 && status <= 204,
    cancelToken: source.token
  }).then(response => {
    const session = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(response, ['headers', 'location']);
    sessionData.sessionId = session;
    (0,_utils_hasLocalStorage__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)() && localStorage.setItem(STORAGE_KEY, JSON.stringify(sessionData));
    if (!session) {
      throw new Error('Primetime session ID not found');
    }
    const now = Date.parse(lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(response, ['headers', 'date']));
    const expires = Date.parse(lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(response, ['headers', 'expires']));
    if (!now || !expires) {
      throw new Error('Primetime session dates not valid');
    }
    const heartbeatDelay = expires - now;
    if (!heartbeatDelay) {
      throw new Error('Primetime session expired');
    }
    return {
      sessionId: session,
      heartbeatDelay
    };
  }).catch(err => {
    (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(err, err.status || 500, url);
  });
};

/**
 * Destroys open Adobe Primetime sessions and requests.
 *
 * @param {object} options
 *   Override options for Axios.
 * @param {boolean} useStorage Flag to use localStorage object
 *
 * @return {promise|null}
 *   Resolves either with a promise for the DELETE request or null if not made.
 */
primetime.destroy = function () {
  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let useStorage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  source.cancel('Operation canceled by the user.');

  // Create a new source token for future requests.
  source = CancelToken.source();
  if (useStorage) {
    sessionData = JSON.parse(localStorage.getItem(STORAGE_KEY));
  }
  if (sessionData.sessionId) {
    const url = "".concat(URL, "/v2/sessions/").concat(sessionData.mvpd, "/").concat(sessionData.encode ? encodedUserId(sessionData.userId) : sessionData.userId, "/").concat(sessionData.sessionId);
    (0,_utils_hasLocalStorage__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)() && localStorage.removeItem(STORAGE_KEY);
    return axios__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.delete(url, {
      data: sessionData.payload,
      timeout: options.timeout || TIMEOUT,
      headers: options.headers || getHeaders(sessionData.network),
      validateStatus: status => status >= 200 && status <= 204 || status === 404 || status === 410
    });
  }
  return null;
};

/**
 * Sends a heartbeat for open Adobe Primetime sessions.
 *
 * @param {object} options
 *   Override options for Axios.
 *
 * @return {promise|null}
 *   Resolves either with a promise for the POST request or null if not made.
 */
primetime.heartbeat = function () {
  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  if (sessionData.sessionId) {
    const url = "".concat(URL, "/v2/sessions/").concat(sessionData.mvpd, "/").concat(sessionData.encode ? encodedUserId(sessionData.userId) : sessionData.userId, "/").concat(sessionData.sessionId);
    return axios__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z.post(url, sessionData.payload, {
      timeout: options.timeout || TIMEOUT,
      headers: options.headers || getHeaders(sessionData.network),
      validateStatus: status => status >= 200 && status <= 204,
      cancelToken: source.token
    }).then(response => {
      const now = Date.parse(lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(response, ['headers', 'date']));
      const expires = Date.parse(lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(response, ['headers', 'expires']));
      if (!now || !expires) {
        throw new Error('Primetime session dates not valid');
      }
      const heartbeatDelay = expires - now;
      if (!heartbeatDelay) {
        throw new Error('Primetime session expired');
      }
      return {
        sessionId: sessionData.sessionId,
        heartbeatDelay
      };
    }).catch(err => {
      (0,_utils_throwHTTPError__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(err, err.status || 500, url);
    });
  }
  return null;
};
/* harmony default export */ __webpack_exports__.Z = (primetime);

/***/ }),

/***/ 69823:
/***/ (function(module) {

// @DEPRECATED
// Drop all non-essential or non-global variables from this list.
const variables = {
  /* Layout */
  'canvas-offset': '80%',
  'header-nav-height-tablet': '56px',
  'header-nav-height': '62px',
  'header-nav-peacock-bar': '10px',
  'show-header-height': '50px',
  'content-max-width': '1050px',
  'content-margin': '50px',
  'container-max-width': '1920px',
  'container-max-height': '1080px',
  'content-narrow-width': '725px',
  'content-thin-width': '400px',
  'notification-bar': '70px',
  'notification-bar-tablet': '40px',
  'tile-margin': '15px',
  'slideshow-height': '150vw',
  'slideshow-height-tablet': '62vw',
  'slideshow-height-desktop': '51.2vw',
  'slideshow-height-large-desktop': '40.2vw',
  '16-9-width': '177.77vh',
  '16-9-height': '56.25vw',
  'thick-green': '#4178d0',
  'red-error': '#d0021b',
  /* OneApp re-design variables - June 2019 */
  /* http://chir.ag/projects/name-that-color */
  'oneapp-shark-dark': '#1f2127',
  'oneapp-bird-black': '#4C4D52',
  'oneapp-night-sky': '#2A2C32',
  'oneapp-tuna': '#3a3c43',
  'oneapp-shark': '#282a31',
  'oneapp-seashell': '#f1f1f1',
  'oneapp-mid-gray': '#606163',
  'oneapp-tuna-dark': '#37383F',
  'oneapp-woodsmoke': '#0D0E11',
  'oneapp-royal-blue': '#316BC9',
  'oneapp-purply-blue': '#302B63',
  'oneapp-purple': '#2d094c',
  'oneapp-tristesse': '#0F0F1C',
  'oneapp-easing': 'cubic-bezier(0.25, 0.1, 0.25, 1)',
  'oneapp-live-red': '#d5260b',
  'oneapp-dove-gray': '#6e6e6e',
  'oneapp-vulcan': '#35373d',
  'oneapp-blue-zodiac': '#42454e',
  'oneapp-fuchsia-rose': '#be4978',
  'oneapp-blue-cold': '#1c0a3a',
  'oneapp-royal': '#4078D0',
  'oneapp-slate-grey': '#6b7992',
  'oneapp-haiti': '#1f1a27',
  'oneapp-tolopea': '#1a0a3a',
  'oneapp-ford-gray': '#979797',
  'oneapp-cultured': '#f9f9f9',
  'olympics-gold': '#B4A074',
  /* USA Colors */
  'usa-red-orange': '#F83837',
  'usa-seal-brown': '#350300',
  /**
   * Site colors
   * Do not add any new colors to this list!
   * We should be aiming to move to a much smaller list of brand colors as part
   * of the OneApp color scheme above. Then, we can start to deprecate these.
   */
  black: '#2e2e2e',
  black2: '#292929',
  black3: '#000000',
  white: '#ffffff',
  red: '#f94646',
  purple: '#22223b',
  blue: '#00b2eb',
  blue2: '#4078d0',
  'cyan-blue': '#147ac2',
  'deep-blue': '#0090c8',
  'light-blue': '#e5f7fd',
  'dark-blue': '#003b79',
  'off-white': '#f1f1f1',
  'off-black': '#1e1e1e',
  'dark-grey': '#2A2C32',
  'light-grey': '#d0d0d0',
  'ui-fallback-grey': '#616e81',
  grey1: '#222',
  grey2: '#555',
  grey3: '#b0b0b0',
  grey4: '#d8d8d8',
  grey5: '#e6e6e6',
  grey6: '#efefef',
  grey7: '#fafafa',
  grey8: '#777',
  grey9: '#333',
  grey10: '#eee',
  grey11: '#f2f2f2',
  grey12: '#e2e2e2',
  grey13: '#fefefe',
  grey14: '#e5e5e5',
  grey15: '#656C80',
  /* Vendor Colors */
  facebook: '#3b5998',
  google: '#d41623',
  twitter: '#00b2eb',
  /* Breakpoints */
  mobile: '320px',
  phablet: '480px',
  tablet: '665px',
  desktop: '990px',
  desktopMid: '1060px',
  'large-desktop': '1260px',
  'big-desktop': '1440px',
  /* z-index */
  'z-index-1': '10',
  'z-index-2': '20',
  'z-index-3': '30',
  'z-index-4': '40',
  'z-index-5': '50',
  'z-index-6': '60',
  'z-index-7': '70',
  'z-index-8': '80',
  'z-index-9': '90',
  'z-index-10': '100',
  /* Animation Speed */
  'animate-slow': '500ms',
  'animate-med-slow': '300ms',
  'animate-med': '200ms',
  'animate-fast': '100ms',
  /* Tiles */
  'shelf-max-width': '1150px',
  /* mobile 16/9 */
  'tile-height-16-9': '141.75px' /* 252px * 9 / 16 */,
  'tile-small-height-16-9': '141.75px' /* 252px * 9 / 16 */,

  /* mobile 3/4 */
  'tile-width-small-3-4': '160px',
  'tile-height-3-4': '258.67px' /* 194px * 4 / 3 */,
  'tile-small-height-3-4': '213.333px' /* 160px * 4 / 3 */,

  /* tablet 16/9 */
  'tile-height-tablet-16-9': '147.9375px' /* 263px * 9 / 16 */,

  /* tablet 3/4 */
  'tile-height-tablet-3-4': '273.34px' /* 205px * 4 / 3 */,
  'tile-small-height-tablet-3-4': '213.333px' /* 160px * 4 / 3 */,

  /* desktop 16/9 */
  'tile-width-desktop-16-9': '((100vw - 70px - ($tile-margin * 2)) * 1 / 3)',
  'tile-height-desktop-16-9': '($tile-width-desktop-16-9 * 9 / 16)',
  /* desktop 3/4 */
  'tile-width-desktop-3-4': '((100vw - 70px - ($tile-margin * 3)) * 1 / 4)',
  'tile-height-desktop-3-4': '($tile-width-desktop-3-4 * 4 / 3)',
  /* max width for regular size */
  'tile-height-max-16-9': '191.25px' /* 340px * 9 / 16 */,
  'tile-height-max-3-4': '335px' /* 251.25px * 4 / 3 */,

  /* End Card */
  counterSizeHalf: '24px',
  counterBorder: '5px',
  counterSizeHalfTablet: '33px',
  counterBorderTablet: '7px',
  counterSizeHalfDesktop: '42px',
  counterBorderDesktop: '8px',
  counterCoordCxDesktop: '154px',
  counterCoordCyDesktop: '46px',
  /*
    Calculate these values based on the counterSizeHalf value for the associated breakpoint.
    Change these whenever you change the counterSizeHalf values!
    lineLength = 2 * 3.14 * counterSizeHalf (then round it)
  */
  lineLengthSmall: 150,
  lineLengthTablet: 208,
  lineLengthDesktop: 264,
  /* live player
  if More Tiles Layout is chosen this should be removed in here
  and in nbc-live-player package for the .video-player-progress class
  */
  'live-player-progress-width': '1049px'
};
module.exports = {
  plugins: {
    'postcss-mixins': {
      mixinsDir: 'css/mixins'
    },
    'postcss-simple-vars': {
      variables
    },
    'postcss-nested': {}
  }
};

/***/ }),

/***/ 30567:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  ZP: function() { return /* binding */ entities_entities; },
  k5: function() { return /* binding */ normalizeShow; }
});

// UNUSED EXPORTS: normalizeVideo

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__(57267);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./node_modules/lodash/map.js
var map = __webpack_require__(35161);
var map_default = /*#__PURE__*/__webpack_require__.n(map);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/jsonapi-relate/index.js
var jsonapi_relate = __webpack_require__(2657);
// EXTERNAL MODULE: ./utils/getVideoBadge.js
var getVideoBadge = __webpack_require__(9730);
// EXTERNAL MODULE: ./node_modules/lodash/isArray.js
var isArray = __webpack_require__(1469);
var isArray_default = /*#__PURE__*/__webpack_require__.n(isArray);
// EXTERNAL MODULE: ./utils/getAvailability.js
var getAvailability = __webpack_require__(91233);
// EXTERNAL MODULE: ./utils/derivativePath.js
var derivativePath = __webpack_require__(77);
// EXTERNAL MODULE: ./actions/actionTypes.js
var actionTypes = __webpack_require__(40671);
// EXTERNAL MODULE: ./utils/getPathname.js
var getPathname = __webpack_require__(50734);
;// CONCATENATED MODULE: ./reducers/v4/entities.js

/**
 * Reducer for the Entities Slice of the Store.
 *   384bac0b-0daf-4947-8f93-0f060fe3451b: {type: Primetime, shortTitle: The Blacklist},
 *   17e44592-0878-4d8b-b811-b373fdf30426: {type: Full Episode, title: Patriot Games},
 *
 * TODO: Evaluate if we need to be more sensitive to entity types.
 *  - Collisions? We could bucket entities by type, currently we rely on UUID.
 *  - entityType? Most entity types have their `type`, so we use `entityType`
 */

/* eslint-disable no-use-before-define */










// const ASC = (a, b) => a - b;
// const DESC = (a, b) => b - a;

function entities() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case actionTypes/* STORE_GUESTS_CALENDAR */.i9:
    case actionTypes/* STORE_VIDEO */.b2:
    case actionTypes/* STORE_VIDEO_LIST */.t7:
    case actionTypes/* APPEND_VIDEO_LIST */.$r:
    case actionTypes/* STORE_GUEST_LIST */.bh:
    case actionTypes/* STORE_GUEST */.Xx:
    case actionTypes/* STORE_SERIES */.vK:
      return storeEntities(state, action);
    default:
      return state;
  }
}
function storeEntities(state, _ref) {
  let {
    payload
  } = _ref;
  if (!payload.data.data.length) {
    return storeEntity(payload, {
      ...state
    }, payload.data.data);
  }
  return payload.data.data.reduce((newState, entity) => {
    const normalEntities = normalizeEntities(payload, entity);
    return {
      ...newState,
      ...normalEntities
    };
  }, {
    ...state
  });
}
function storeEntity(payload, newState, entity) {
  const normalEntities = normalizeEntities(payload, entity);
  return {
    ...newState,
    ...normalEntities
  };
}
function normalizeEntities(payload, entity) {
  const relationships = payload.included ? (0,jsonapi_relate/* getRelationships */.mc)(payload.data, entity) : [];
  return Object.keys(relationships).reduce((newState, rel) => {
    const relationship = relationships[rel];
    if (relationship && relationship.relationships) {
      return {
        ...newState,
        [relationship.id]: entityTypes[relationship.type] && entityTypes[relationship.type](payload, relationship),
        ...normalizeEntities(payload, relationship)
      };
    }
    if (!relationship || !relationship.length) {
      return newState;
    }
    if (relationship.length) {
      return {
        ...newState,
        ...relationship.filter(r => r).reduce((state, r) => ({
          ...state,
          [r.id]: entityTypes[r.type](payload, r)
        }), {})
      };
    }
    return {
      ...newState,
      [relationship.id]: entityTypes[relationship.type] && entityTypes[relationship.type](payload, relationship)
    };
  }, {
    [entity.id]: entityTypes[entity.type] && entityTypes[entity.type](payload, entity)
  });
}
const entityTypes = {
  videos: normalizeVideo,
  images: normalizeImage,
  keyframes: normalizeImage,
  segments: normalizeSegment,
  credits: normalizeCredit,
  series: normalizeSeries,
  episodes: normalizeEpisodes
};
function normalizeSegment(payload, segment) {
  return {
    ...segment
  };
}

/**
 * Normalize Video
 * We're going to be explicit about the exact fields we expect
 * We could also validate here, to know we have what we need.
 * @param {object} payload Full Payload from API
 * @param {object} video Video Object from API
 * @return {object} normalized Object
 */
function normalizeVideo(payload, video) {
  const keyframe = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, video, 'keyframes')[0];
  const segment = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, video, 'segment');
  const episode = segment ? (0,jsonapi_relate/* getRelationship */.Do)(payload.data, segment, 'episode') : (0,jsonapi_relate/* getRelationship */.Do)(payload.data, video, 'episode');
  const season = segment ? (0,jsonapi_relate/* getRelationship */.Do)(payload.data, segment, 'season') : (0,jsonapi_relate/* getRelationship */.Do)(payload.data, episode, 'season');
  const series = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, season, 'series');
  const availability = (0,getAvailability/* default */.Z)(video.attributes.availability);
  return {
    // Entity data
    id: video.id,
    entityType: video.type,
    // Regular Properties (keep sorted)
    airdate: get_default()(segment, 'attributes.airDate'),
    available: get_default()(availability, 'availStartDateTime'),
    description: get_default()(segment || episode, 'attributes.longDescription'),
    shortDescription: get_default()(segment || episode, 'attributes.shortDescription'),
    entitlement: get_default()(availability, 'entitlement'),
    expiration: get_default()(availability, 'availEndDateTime'),
    genre: get_default()(segment || episode, 'attributes.genres[0]', ''),
    guid: video.attributes.mpxGuid,
    internalId: void 0,
    // Missings for v4 resource
    keywords: get_default()(segment || episode, 'attributes.keywords', []),
    // Upgrade video permalink to https here until backend updated
    permalink: video.attributes.permalink.replace(/^http:/i, 'https:'),
    runTime: get_default()(video, 'attributes.duration', '').toString(),
    title: get_default()(segment || episode, 'attributes.title'),
    type: segment ? get_default()(segment, 'attributes.programmingType[0]', '') : get_default()(episode, 'attributes.episodeType', ''),
    vChipRating: get_default()(episode, 'attributes.ratings[0].ratingValue', ''),
    // Calculated properties
    // pathname: Helper location matching.
    pathname: (0,getPathname/* default */.Z)(video.attributes.permalink),
    // Normalize optional Season & Episode numbers.
    seasonNumber: !segment ? get_default()(season, 'attributes.seasonNumber', '') : '',
    episodeNumber: !segment ? get_default()(episode, 'attributes.episodeNumber', '') : '',
    // Included properties
    show: get_default()(series, 'id'),
    thumbnail: get_default()(keyframe, 'attributes.path'),
    image: {
      path: (0,derivativePath/* default */.Z)(get_default()(keyframe, 'attributes.path'), true)
    },
    imageSet: [get_default()(keyframe, 'attributes.path')],
    imageWidth: get_default()(keyframe, 'attributes.width'),
    imageHeight: get_default()(keyframe, 'attributes.height'),
    // showName is somewhat bad form, but is terribly conveniant.
    showName: get_default()(series, 'attributes.shortTitle', ''),
    // Auxilary. These are only required for VideoPage (not lists).
    selectedCountries: map_default()(video.attributes.countries),
    nbcAuthWindow: video.attributes.nbcAuthWindow || [],
    tveAuthWindow: video.attributes.tveAuthWindow || [],
    credits: video.attributes.credits || [],
    copyright: video.attributes.copyright || '',
    dayPart: video.attributes.dayPart || '',
    isSponsorExclusive: video.attributes.isSponsorExclusive,
    badgeName: (0,getVideoBadge/* default */.Z)(get_default()(availability, 'availEndDateTime'), !segment ? get_default()(episode, 'attributes.episodeNumber', '') : '', get_default()(availability, 'availStartDateTime')),
    // TODO generate embedUrl based on feedback in https://nbcdigital.atlassian.net/browse/DBB-5889
    dateTimeWatched: '',
    embedUrl: void 0 // Missing for v4 resource
  };
}
function normalizeEpisodes(payload, episode) {
  return {
    id: episode.id,
    airDate: episode.attributes.airDate,
    duration: episode.attributes.duration,
    credits: ((0,jsonapi_relate/* getRelationship */.Do)(payload.data, episode, 'credits') || []).filter(credit => credit).map(credit => ({
      id: credit.id,
      displayName: get_default()(credit, 'attributes.displayName') || get_default()((0,jsonapi_relate/* getRelationship */.Do)(payload.data, credit, 'person'), 'attributes.displayName'),
      person: get_default()((0,jsonapi_relate/* getRelationship */.Do)(payload.data, credit, 'person'), 'attributes'),
      images: ((0,jsonapi_relate/* getRelationship */.Do)(payload.data, credit, 'images') || []).filter(image => image).map(image => ({
        path: image.attributes.path,
        width: image.attributes.width,
        height: image.attributes.height
      }))
    }))
  };
}

/**
 * Normalize series
 * We're going to be explicit about the exact fields we expect
 * We could also validate here, to know we have what we need.
 * @param {object} payload Full Payload from API
 * @param {object} series series Object from API
 * @return {object} normalized Object
 */
function normalizeSeries(payload, series) {
  // const aggregates = getRelationship(payload.data, series, 'aggregates');
  // const seasons = getRelationship(payload.data, series, 'season') || [];
  // const seasonNumbers = uniq(seasons).map(season => season && season.attributes.seasonNumber);
  // const seasonContestantTitles = seasons.map(season => season && ({
  //   season: season.attributes.seasonNumber,
  //   title: season.attributes.contestantTitle
  // }));
  const image = get_default()((0,jsonapi_relate/* getRelationship */.Do)(payload.data, series, 'images'), '[0]', {});
  return {
    // Entity data
    id: series.id,
    entityType: series.type,
    // Regular Properties (keep sorted)
    brand: series.attributes.brand,
    currentTuneInText: series.attributes.tuneIn,
    genres: series.attributes.genres,
    longDescription: series.attributes.longDescription,
    premierDate: series.attributes.premierDate,
    reltioMatch: series.attributes.reltioMatch,
    roviId: series.attributes.roviId,
    seriesName: series.attributes.seriesName,
    shortDescription: series.attributes.shortDescription,
    shortTitle: series.attributes.shortTitle,
    socialMedia: series.attributes.socialMedia,
    title: series.attributes.title,
    type: series.attributes.seriesType,
    seriesImage: normalizeImage(payload, image)
  };
}

/**
 * Normalize Credit
 * We're going to be explicit about the exact fields we expect
 * We could also validate here, to know we have what we need.
 * @param {object} payload Full Payload from API
 * @param {object} credit Credit Object from API
 * @return {object} normalized Object
 */
function normalizeCredit(payload, credit) {
  const person = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, credit, 'person');
  const images = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, credit, 'images');
  let roleName = get_default()(credit, 'attributes.roleName');
  // API provide rolename as either a string "Guest" or an array in this fashion, see DBB-6160.
  roleName = isArray_default()(roleName) ? roleName.map(name => {
    const split = name.split('.');
    return split[split.length - 1];
  }).filter(name => name && name.length && name.toLowerCase() !== 'guest').join(', ') : null;
  return {
    ...credit.attributes,
    id: credit.id,
    entityType: 'credit',
    roleName: roleName || null,
    person: normalizePerson(payload, person),
    images: (images || []).map(image => normalizeImage(payload, image))
  };
}

/**
 * Normalize Person
 * We're going to be explicit about the exact fields we expect
 * We could also validate here, to know we have what we need.
 * @param {object} payload Full Payload from API
 * @param {object} person Person Object from API
 * @return {object} normalized Object
 */
function normalizePerson(payload, person) {
  if (!person) {
    return null;
  }
  const socialMedia = get_default()(person, 'attributes.socialMedia', []);
  return {
    ...person.attributes,
    id: person.id,
    type: person.type,
    socialMedia,
    socialInfo: socialMedia.reduce((newState, socialInfo) => {
      newState[socialInfo.name.toLowerCase().replace(' ', '')] = socialInfo.handle || socialInfo.url;
      return newState;
    }, {})
  };
}

/**
 * Normalize Image
 * We're going to be explicit about the exact fields we expect
 * We could also validate here, to know we have what we need.
 * @param {object} payload Full Payload from API
 * @param {object} image Image Object from API
 * @return {object} normalized Object
 */
function normalizeImage(payload, image) {
  if (!image) {
    return null;
  }
  const normalImage = {
    ...image.attributes,
    id: image.id,
    type: image.type
  };
  return {
    ...normalImage
  };
}
// EXTERNAL MODULE: ./utils/imageSrc.js
var imageSrc = __webpack_require__(26939);
;// CONCATENATED MODULE: ./reducers/entities.js

/**
 * Reducer for the Entities Slice of the Store.
 *   384bac0b-0daf-4947-8f93-0f060fe3451b: {type: Primetime, shortTitle: The Blacklist},
 *   17e44592-0878-4d8b-b811-b373fdf30426: {type: Full Episode, title: Patriot Games},
 *
 * TODO: Evaluate if we need to be more sensitive to entity types.
 *  - Collisions? We could bucket entities by type, currently we rely on UUID.
 *  - entityType? Most entity types have their `type`, so we use `entityType`
 */

/* eslint-disable no-use-before-define */






// V4 API reducers




const permalinkBase = config/* default */.Z.get('permalinkBase');
const ASC = (a, b) => a - b;
const DESC = (a, b) => b - a;
function entities_entities() {
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  let action = arguments.length > 1 ? arguments[1] : undefined;
  if (action.useV4 || get_default()(action, 'payload.config.v4')) {
    return entities(state, action);
  }
  switch (action.type) {
    case actionTypes/* STORE_SHOW */.Ah:
      return storeShow(state, action);
    case actionTypes/* STORE_SHOW_SERIES */.jL:
      return storeShowSeries(state, action);
    case actionTypes/* STORE_VIDEO */.b2:
      return storeVideo(state, action);
    default:
      return state;
  }
}
function storeShow(state, _ref) {
  let {
    payload,
    show
  } = _ref;
  const normalShow = normalizeShow(payload, show);
  return {
    ...state,
    [normalShow.id]: normalShow
  };
}
function storeShowSeries(state, _ref2) {
  let {
    show,
    series
  } = _ref2;
  return {
    ...state,
    ["series-".concat(show.id)]: series
  };
}
function storeVideo(state, _ref3) {
  let {
    payload,
    video
  } = _ref3;
  // Checks if state already contains a percentViewed saved for this video
  const percentViewed = get_default()(state[video.id], 'percentViewed', 0);
  const normalVideo = entities_normalizeVideo(payload, video, {
    percentViewed
  });
  const normalShow = normalizeShow(payload, (0,jsonapi_relate/* getRelationship */.Do)(payload.data, video, 'show'));
  return {
    ...state,
    [normalVideo.id]: normalVideo,
    [normalShow.id]: normalShow
  };
}

/**
 * Normalize Video
 * We're going to be explicit about the exact fields we expect
 * We could also validate here, to know we have what we need.
 * @param {object} payload Full Payload from API
 * @param {object} video Video Object from API
 * @param {object} customProps Customized props to override
 * @return {object} normalized Object
 */
function entities_normalizeVideo(payload, video) {
  let customProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  const image = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, video, 'image');
  const show = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, video, 'show');
  return {
    // Entity data
    id: video.id,
    entityType: video.type,
    // Regular Properties (keep sorted)
    airdate: video.attributes.airdate,
    available: video.attributes.available,
    description: video.attributes.description,
    embedUrl: video.attributes.embedUrl,
    entitlement: video.attributes.entitlement,
    expiration: video.attributes.expiration,
    genre: video.attributes.genre,
    guid: video.attributes.guid,
    internalId: video.attributes.internalId,
    keywords: video.attributes.keywords,
    // Upgrade video permalink to https here until backend updated
    permalink: video.attributes.permalink.replace(/^http:/i, 'https:'),
    runTime: video.attributes.runTime,
    title: video.attributes.title,
    type: video.attributes.type,
    vChipRating: video.attributes.vChipRating,
    // Calculated properties
    // pathname: Helper location matching.
    pathname: (0,getPathname/* default */.Z)(video.attributes.permalink),
    // Normalize optional Season & Episode numbers.
    seasonNumber: video.attributes.seasonNumber || '',
    episodeNumber: video.attributes.episodeNumber || '',
    // Included properties
    show: get_default()(video.relationships, 'show.data.id'),
    image: {
      path: (0,imageSrc/* default */.Z)(image)
    },
    imageSet: {
      path: (0,imageSrc/* default */.Z)(image)
    },
    imageWidth: get_default()(image, 'attributes.width', 640),
    imageHeight: get_default()(image, 'attributes.height', 0),
    // showName is somewhat bad form, but is terribly conveniant.
    showName: get_default()(show, 'attributes.shortTitle', ''),
    showUrlAlias: get_default()(show, 'attributes.urlAlias', ''),
    // Auxilary. These are only required for VideoPage (not lists).
    selectedCountries: map_default()(video.attributes.selectedCountries),
    nbcAuthWindow: video.attributes.nbcAuthWindow || [],
    tveAuthWindow: video.attributes.tveAuthWindow || [],
    credits: video.attributes.credits || [],
    copyright: video.attributes.copyright || '',
    dayPart: video.attributes.dayPart || '',
    badgeName: (0,getVideoBadge/* default */.Z)(video.attributes.expiration, video.attributes.episodeNumber || '', video.attributes.available, get_default()(show, 'attributes.type', '')),
    percentViewed: customProps.percentViewed || 0,
    dateTimeWatched: '',
    ...customProps
  };
}

/**
 * Normalize Show
 * We're going to be explicit about the exact fields we expect
 * We could also validate here, to know we have what we need.
 * @param {object} payload Full Payload from API
 * @param {object} show Show Object from API
 * @param {object} customProps Customized props to override
 * @return {object} normalized Object
 */
function normalizeShow(payload, show) {
  const image = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, show, 'image') || {};
  const aggregates = (0,jsonapi_relate/* getRelationship */.Do)(payload.data, show, 'aggregates') || {};
  return {
    // Entity data
    id: show.id,
    entityType: show.type,
    // Regular Properties (keep sorted)
    active: show.attributes.active,
    category: show.attributes.category,
    colors: show.attributes.colors,
    creditTypeLabel: show.attributes.creditTypeLabel,
    description: show.attributes.description,
    genre: show.attributes.genre,
    internalId: show.attributes.internalId,
    isCoppaCompliant: show.attributes.isCoppaCompliant || false,
    name: show.attributes.name,
    navigation: show.attributes.navigation ? show.attributes.navigation.map(item => ({
      ...item,
      href: item.url
    })) : [],
    reference: show.attributes.reference,
    schemaType: show.attributes.schemaType,
    shortDescription: show.attributes.shortDescription,
    shortTitle: show.attributes.shortTitle,
    showTag: show.attributes.showTag,
    social: show.attributes.social,
    title: show.attributes.shortTitle,
    tuneIn: show.attributes.tuneIn,
    type: show.attributes.type,
    urlAlias: show.attributes.urlAlias,
    showImage: {
      width: get_default()(image, 'attributes.width', 640),
      height: get_default()(image, 'attributes.height', 360),
      src: get_default()(image, 'attributes.path', "".concat(permalinkBase).concat(config/* default */.Z.get('app.socialMedia.ogImage')))
    },
    image: {
      path: (0,imageSrc/* default */.Z)(image)
    },
    imageWidth: get_default()(image, 'attributes.width', 640),
    imageHeight: get_default()(image, 'attributes.height', 0),
    // Included properties
    videoTypesAvailable: (get_default()(aggregates, 'attributes.videoTypes') || []
    // Don't need Full Eps option in Clips area
    ).filter(option => option !== 'Full Episode'),
    // All seasons that currently contain available videos to play
    seasonNumbersAvailable: (get_default()(aggregates, 'attributes.videoEpisodeSeasons') || []

    // Sort Asc or Desc for Classics
    ).sort(show.attributes.category === 'Classic' ? ASC : DESC)
    // Prefix human-readable
    .map(seasonNumber => "Season ".concat(seasonNumber))
  };
}

/***/ }),

/***/ 18297:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ Deferred; }
/* harmony export */ });
class Deferred {
  constructor() {
    this.resolve = null;
    this.reject = null;
    this.promise = new Promise((resolve, reject) => {
      this.resolve = resolve;
      this.reject = reject;
    });
  }
  then(onFulfilled, onRejected) {
    return this.promise.then(onFulfilled, onRejected);
  }
  catch(onRejected) {
    return this.promise.catch(onRejected);
  }
}

/***/ }),

/***/ 80034:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ HTTPError; }
/* harmony export */ });
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28583);
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_assign__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);



/**
 * Creates a JavaScript Error from a data payload.
 *
 * @param   {Error|Object|null} payload
 *   Error  - attaches status code and url.
 *   Object - including message and status code.
 * @param   {Number}            status
 *   HTTP Status Code for error.
 * @param   {String}            url
 *   The URL that was requested.
 *
 * @returns {Error}
 *   With embeded message
 */
function HTTPError(payload, status, url) {
  return lodash_assign__WEBPACK_IMPORTED_MODULE_0___default()(payload instanceof Error ? payload : new Error(), {
    status,
    url,
    message: [payload.message ||
    // provided
    lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(payload, 'data.message') ||
    // akamai
    lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(payload, 'data.errors', []).reduce((acc, err) => "".concat(acc).concat(err.detail || err.title || JSON.stringify(err), "\n"), '') ||
    // park
    JSON.stringify(payload), // chaos
    "URL:".concat(url || lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(payload, 'config.url'))].join(' ')
  });
}

/***/ }),

/***/ 64994:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  b: function() { return /* binding */ imageResize; }
});

// UNUSED EXPORTS: default

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./node_modules/lodash/compact.js
var compact = __webpack_require__(39693);
var compact_default = /*#__PURE__*/__webpack_require__.n(compact);
// EXTERNAL MODULE: ./node_modules/qs/lib/index.js
var lib = __webpack_require__(80129);
// EXTERNAL MODULE: ./node_modules/lodash/pick.js
var pick = __webpack_require__(78718);
var pick_default = /*#__PURE__*/__webpack_require__.n(pick);
// EXTERNAL MODULE: ./node_modules/lodash/mapKeys.js
var mapKeys = __webpack_require__(67523);
var mapKeys_default = /*#__PURE__*/__webpack_require__.n(mapKeys);
;// CONCATENATED MODULE: ./utils/formatAkamaiImage.js



/**
 * Use Akamai image conversion utilities
 * https://nbcdigital.atlassian.net/wiki/display/NST/Akamai+Image+Conversion
 * @param {String} image
 *  The image url hosted by Akamai
 * @param {Object} opts
 *  Options for formatting the image
 * @returns {String} The formatted path
 */
function formatAkamaiImage(image) {
  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    policy: null,
    // policy name
    width: null,
    // desired width
    density: null,
    // device pixel density
    desaturation: null // desaturation value from 0 to 1
  };
  if (!image || !opts.policy) {
    return image;
  }
  const query = mapKeys_default()(pick_default()(opts, ['policy', 'width', 'density', 'desaturation']), (value, key) => {
    switch (key) {
      case 'policy':
        return 'impolicy';
      case 'width':
        return 'imwidth';
      case 'density':
        return 'imdensity';
      default:
        return key;
    }
  });
  const params = (0,lib.stringify)(query, {
    encode: false
  });
  let queryStringBegin = '?';
  if (image.match) {
    queryStringBegin = image.match(/\?itok=/) || image === '' ? '&' : '?';
  }
  return "".concat(image).concat(params ? "".concat(queryStringBegin).concat(params) : '');
}
;// CONCATENATED MODULE: ./utils/akamaiDerivatives.js




const AKAMAI_POLICY = config/* default */.Z.get('akamai.policy');
const resizeWidths = [2400, 1920, 1600, 1400, 1260, 1024, 990, 640, 480, 340, 170];

/**
 * Generate an array of derviatives for srcset
 * @param {Object} image
 *  Image absolute url
 * @param {number} desaturation
 *  desaturation for formatting the srcSet
 * @param {number} minWidth
 *  minWidth for formatting the srcSet
 * @param {number} maxWidth
 *  maxWidth for formatting the srcSet
 * @return {String}
 *   Representation of image for srcset
 *  'http://a.jpg 640w, http://a.jpg 1280w'
 */
function imageResize(image) {
  let {
    desaturation = 1,
    minWidth = 0,
    maxWidth = 640
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!image) {
    return '';
  }
  if (typeof image === 'string') {
    return image;
  }
  const items = [maxWidth, ...resizeWidths].filter(width => width >= minWidth && width <= maxWidth).filter((width, index, itemsLimited) => itemsLimited.indexOf(width) === index).map(width => {
    const src = formatAkamaiImage(image.path, {
      policy: AKAMAI_POLICY,
      width,
      // We pick our own image width so Akamai IM does not have to.
      // By forcing density to 1, images will not be upscaled unnecessarily.
      density: 1,
      ...(desaturation === 1 ? {} : {
        desaturation
      })
    });
    return src && "".concat(src, " ").concat(width, "w");
  });
  return compact_default()(items).join(', ');
}


/***/ }),

/***/ 64108:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ checkIsPersonalizationEnabled; }
/* harmony export */ });
/**
 * Returns `isPersonalizationEnabled` flag. If not set, returns true by default.
 *
 * @param {object} state - Redux state object.
 *
 * @returns {bool} True if `isPersonalizationEnabled` flag is true, else false.
 */
function checkIsPersonalizationEnabled() {
  var _state$launchDarkly$s, _state$launchDarkly, _state$launchDarkly$s2;
  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (_state$launchDarkly$s = state === null || state === void 0 ? void 0 : (_state$launchDarkly = state.launchDarkly) === null || _state$launchDarkly === void 0 ? void 0 : (_state$launchDarkly$s2 = _state$launchDarkly.server) === null || _state$launchDarkly$s2 === void 0 ? void 0 : _state$launchDarkly$s2.isPersonalizationEnabled) !== null && _state$launchDarkly$s !== void 0 ? _state$launchDarkly$s : true;
}

/***/ }),

/***/ 77:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ derivativePath; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Returns a clean image path with no references to derivatives,
 *   basically we are removing the /styles/width_x_height/public from the path
 *
 * @param {string} path
 *   Derivative path to be evaluated
 *   https://acc-img.nbc.com/sites/nbcunbc/files/styles/1280x720/public/images/2016/1/12/mtp_640x320.jpg?itok=b_HJH6Dh
 * @param {boolean} keepOriginPath
 *   Do not remove /styles/width_x_height/public from the path
 * @param {boolean} keepTokenString
 *   Do not remove ?token= from the path
 *
 * @return {string}
 *   New path fixed with no derivatives references
 *   https://acc-img.nbc.com/sites/nbcunbc/files/images/2016/1/12/mtp_640x320.jpg
 */
function derivativePath(path) {
  let keepOriginPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  let keepTokenString = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  const simplePath = keepTokenString ? path : path.split('?')[0];
  const regex = /\/styles\/[^/]*\/public/;
  return !keepOriginPath ? simplePath.replace(regex, '') : simplePath;
}

/***/ }),

/***/ 54819:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var _lib_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57979);
/* harmony import */ var _getTimezoneOffset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78621);



const TIMEZONE = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('timezone');
const UTC_OFFSET = (0,_getTimezoneOffset__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)(TIMEZONE);

/**
 * Formats a date string
 *
 * @param {string} datestring
 *   A fully formatted ISO string.
 *
 * @example
 * formatDate('2015-10-05T00:00:00-08:00')
 * // '10/05/15'
 * formatDate('2015-10-05T00:00:00-00:00')
 * // '10/04/15'
 *
 * @return {string} the formatted date.
 */
function formatDate(datestring) {
  return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(datestring).utcOffset(UTC_OFFSET).format('MM/DD/YY');
}
/* harmony default export */ __webpack_exports__.Z = (formatDate);

/***/ }),

/***/ 68455:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
/**
 * Format relative path to have a leading forward slash.
 * Relative paths provided by BFF do not have a leading forward slash, as opposed
 * to other paths that do, which leads to nested URLs when routing.
 *
 * @param {string} relativePath - Relative path provided by BFF.
 * @returns {string} Relative path with leading forward slash or empty string.
 */
const formatRelativePath = function () {
  let relativePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  if (typeof relativePath === 'string' && relativePath.length > 0) {
    if (relativePath[0] === '/') {
      return relativePath;
    }
    return "/".concat(relativePath);
  }
  return '';
};
/* harmony default export */ __webpack_exports__.Z = (formatRelativePath);

/***/ }),

/***/ 17627:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   KA: function() { return /* binding */ getMcmId; },
/* harmony export */   KG: function() { return /* binding */ getAudience; },
/* harmony export */   _m: function() { return /* binding */ getAamId; }
/* harmony export */ });
/* harmony import */ var cookies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27360);
/* harmony import */ var cookies_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cookies_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);



/**
 * Get Audience Manager Unique User ID
 *
 * @return {string}
 *   AAM UUID.
 */

function getAamId() {
  return cookies_js__WEBPACK_IMPORTED_MODULE_0___default().get("aam_uuid") || null;
}

/**
 * Get Marketing Cloud ID Service.
 *
 * @return {string}
 *   Adobe MCMID.
 */

function getMcmId() {
  const orgId = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('adobePass.orgId');
  const mcmId = (cookies_js__WEBPACK_IMPORTED_MODULE_0___default().get("AMCV_".concat(orgId, "@AdobeOrg")) || '').split('|');
  const index = mcmId.indexOf('MCMID') + 1;
  return index > 1 && mcmId[index] || null;
}

/**
 * Get Adobe Audience mparticle Properties
 *
 * @return {Object}
 *   Returns mparticle audience properties.
 */

function getAudience() {
  const aamId = getAamId();
  const mcmId = getMcmId();
  const audience = {};
  if (aamId) {
    audience.other3 = aamId;
  }
  if (mcmId) {
    audience.other4 = mcmId;
  }
  return audience;
}

/***/ }),

/***/ 95087:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var lodash_difference__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91966);
/* harmony import */ var lodash_difference__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_difference__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_intersection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(25325);
/* harmony import */ var lodash_intersection__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_intersection__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(41609);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3__);




const brandsToRequest = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('adobePass.brandsToRequest');

/**
 * Get lists of a users allowed and disallowed brands.
 *
 * @param {array} brands
 *   An array of brands returned from the Adobe Pass "preflight" auth check.
 *
 * @return {object}
 *   An object containing arrays under the keys `allowedBrands` and `notAllowedBrands`.
 *   Check for null as it is not the same as an empty array.
 */

/* harmony default export */ __webpack_exports__.Z = (brands => {
  // If there are no brands, then we assume every brand is allowed.
  if (lodash_isEmpty__WEBPACK_IMPORTED_MODULE_3___default()(brands)) {
    return {
      allowedBrands: brandsToRequest,
      notAllowedBrands: null
    };
  }
  const allowedBrands = lodash_intersection__WEBPACK_IMPORTED_MODULE_2___default()(brands, brandsToRequest);
  const notAllowedBrands = lodash_difference__WEBPACK_IMPORTED_MODULE_1___default()(brandsToRequest, brands);
  return {
    allowedBrands: allowedBrands.length > 0 ? allowedBrands : null,
    notAllowedBrands: notAllowedBrands.length > 0 ? notAllowedBrands : null
  };
});

/***/ }),

/***/ 91233:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getAvailability; }
/* harmony export */ });
/* harmony import */ var _lib_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57979);

const getUnixDates = function () {
  for (var _len = arguments.length, dates = new Array(_len), _key = 0; _key < _len; _key++) {
    dates[_key] = arguments[_key];
  }
  return dates.map(date => _lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.unix(date));
};
const getDates = function () {
  for (var _len2 = arguments.length, dates = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    dates[_key2] = arguments[_key2];
  }
  return dates.map(date => (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(date));
};

/**
 * getAvailability
 *
 * return current availability status for asset from either v4 park API attributes
 * or the algolia search index (series-lockup in our case)
 *
 * @param {Array} availability - The array from park apiv4 attributes or algolia
 * @param {Object} searchOpts - an searchOpts object
 * @param {Boolean} searchOpts.searchDates
 *   whether the availability dates are from algolia index and thus unix timestamps
 * @returns {Object} - the current availability object
 */
function getAvailability(availability) {
  let searchOpts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    searchDates: false
  };
  const now = (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
  const available = availability.filter(_ref => {
    let {
      device
    } = _ref;
    return device.includes('Web');
  }).filter(_ref2 => {
    let {
      entitlement
    } = _ref2;
    return entitlement.includes('auth');
  }).filter(_ref3 => {
    let {
      availStartDateTime,
      availEndDateTime
    } = _ref3;
    const dates = [availStartDateTime, availEndDateTime];
    const normalizedDates = searchOpts.searchDates ? getUnixDates(dates[0], dates[1]) : getDates(dates[0], dates[1]);
    return now.isBetween(normalizedDates[0], normalizedDates[1], null, '[]');
  });
  return available && available.length ? available[0] : {
    entitlement: 'free'
  };
}

/***/ }),

/***/ 56364:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);

const BRANCH_LINK = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.branchMetrics.baseUrl');
const URL_KEY = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('API.branchMetrics.urlKey');
const getBranchLiveLink = () => "".concat(BRANCH_LINK).concat(URL_KEY, "?path=live");
/* harmony default export */ __webpack_exports__.Z = (getBranchLiveLink);

/***/ }),

/***/ 67689:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(13311);
/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_2__);



const BRANDS = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('brands');

/**
 * Given a string taken from the brand URL parameter from pages such as LivePage
 * or AllShowsPage, grabs the JSON object for that brand from local config.
 *
 * @param {string} param
 *   Brand URL parameter
 * @param {string} key
 *   Optional, key from the config to return
 *
 * @return {object|string}
 *   If found, configuration object for the specific brand.
 *   If a key is passed, returns that value instead of the entire object.
 */
/* harmony default export */ __webpack_exports__.Z = ((param, key) => {
  const brand = param && lodash_find__WEBPACK_IMPORTED_MODULE_2___default()(BRANDS, b => b.mapping.indexOf(param.replace('_oneapp', '')) >= 0);
  return brand ? key ? brand[key] : brand : null;
});

/***/ }),

/***/ 20393:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26566);

const NONE = _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.NONE;
const getClickActionAttributes = function () {
  let attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const mParticleAttributes = {
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_NAME]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_NAME] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_TITLE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_TITLE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_ID]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_ID] || NONE
  };
  if (attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND]) mParticleAttributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND] = attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND];
  if (attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW]) mParticleAttributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW] = attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW];
  if (attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SEASON]) mParticleAttributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SEASON] = attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SEASON];
  if (attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.TOGGLE]) mParticleAttributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.TOGGLE] = attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.TOGGLE];
  return mParticleAttributes;
};
/* harmony default export */ __webpack_exports__.Z = (getClickActionAttributes);

/***/ }),

/***/ 75715:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26566);

const NONE = _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.NONE;
const getContentClickAttributes = function () {
  let attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const mParticleAttributes = {
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CONTENT_POSITION]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CONTENT_POSITION] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_POSITION]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_POSITION] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_TITLE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_TITLE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.DYNAMIC_LEAD_LOGIC]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.DYNAMIC_LEAD_LOGIC] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_NAME]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_NAME] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_TYPE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_TYPE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_BRAND]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_BRAND] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_SHOW]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_SHOW] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_SEASON]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_SEASON] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_STATE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_STATE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_VIDEO_ID]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_VIDEO_ID] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_ENTITLEMENT]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_ENTITLEMENT] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_URL]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_URL] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_TITLE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_TITLE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_SCENARIO]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_SCENARIO] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_VIDEO_ID]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_VIDEO_ID] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_EPISODE_TITLE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_EPISODE_TITLE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SPONSOR]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SPONSOR] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_PLAYLIST_NAME]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_PLAYLIST_NAME] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_TYPE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.CUSTOM_SHELF_TYPE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_LOGIC]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SMART_TILE_LOGIC] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHELF_MACHINE_NAME]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHELF_MACHINE_NAME] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_SPORT]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_SPORT] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_LEAGUE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_LEAGUE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_STATE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ITEM_CLICKED_STATE] || NONE
  };
  if (attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND]) mParticleAttributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND] = attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND];
  if (attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW]) mParticleAttributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW] = attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW];
  return mParticleAttributes;
};
/* harmony default export */ __webpack_exports__.Z = (getContentClickAttributes);

/***/ }),

/***/ 74051:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _postcss_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69823);
/* harmony import */ var _postcss_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_postcss_config__WEBPACK_IMPORTED_MODULE_1__);


const getCssVariable = name => {
  const valueRegex = /[px|vw|vh|%|ms]+$/;
  const cssVariables = (_postcss_config__WEBPACK_IMPORTED_MODULE_1___default().plugins)['postcss-simple-vars'].variables;
  const cssVar = cssVariables[name];
  const isValue = valueRegex.test(cssVar);
  if (isValue) {
    return parseInt(cssVar.replace(valueRegex, ''), 10);
  }
  return cssVar;
};
/* harmony default export */ __webpack_exports__.Z = (getCssVariable);

/***/ }),

/***/ 79434:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Il: function() { return /* binding */ getEntityByRef; },
/* harmony export */   Iv: function() { return /* binding */ getListKey; },
/* harmony export */   cj: function() { return /* binding */ getEntitiesByIds; },
/* harmony export */   gp: function() { return /* binding */ getList; },
/* harmony export */   k2: function() { return /* binding */ getEntitiesByRefs; },
/* harmony export */   qZ: function() { return /* binding */ getListItems; },
/* harmony export */   uc: function() { return /* binding */ getEntities; }
/* harmony export */ });
/* unused harmony exports getEntityById, getEntity, getListTotal */
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Conveniance functions for retreiving Stored Entities
 *  - See /actions/entities and /actions/xref
 */

function getEntityById(state, id) {
  return state.entities[id];
}
function getEntityByRef(state, ref) {
  return getEntityById(state, state.xref[ref]);
}
function getEntity(state, ref) {
  return getEntityById(state, ref) || getEntityByRef(state, ref);
}
function getEntitiesByIds(state, ids) {
  return ids.map(getEntityById.bind(this, state));
}
function getEntitiesByRefs(state, refs) {
  return refs.map(getEntityByRef.bind(this, state));
}
function getEntities(state, refs) {
  return refs.map(getEntity.bind(this, state));
}
function getListKey() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return args.filter(x => x).join('-');
}
function getList(state) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }
  return state.lists && state.lists[getListKey(...args)];
}
function getListItems(state) {
  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }
  const list = getList(state, ...args);
  return list ? getEntitiesByIds(state, list.items) : [];
}
function getListTotal(state) {
  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
    args[_key4 - 1] = arguments[_key4];
  }
  const list = getList(state, ...args);
  return list ? list.total : 0;
}

/***/ }),

/***/ 93152:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26566);

const NONE = 'None';
const FALSE = 'False';
const getErrorAttributes = function () {
  let attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.BRAND] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.DURATION_WATCHED]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.DURATION_WATCHED] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ENTITLEMENT]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ENTITLEMENT] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.EPISODE_NUMBER]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.EPISODE_NUMBER] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.EPISODE_TITLE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.EPISODE_TITLE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_CODE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_CODE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_CONTEXT]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_CONTEXT] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_DESCRIPTION]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_DESCRIPTION] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_EXPECTED]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_EXPECTED] || FALSE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_FATAL]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_FATAL] || FALSE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_FEATURE_TYPE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_FEATURE_TYPE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_FRIENDLY_MESSAGE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_FRIENDLY_MESSAGE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_OMNITURE_CODE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_OMNITURE_CODE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SOURCE_ERROR_CODE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SOURCE_ERROR_CODE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SOURCE_TYPE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SOURCE_TYPE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_STACK]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_STACK] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SUB_TYPE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SUB_TYPE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SYSTEM]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_SYSTEM] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_TYPE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.ERROR_TYPE] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SEASON]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SEASON] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.SHOW] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_DURATION]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_DURATION] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_ID]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_ID] || NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_TYPE]: attributes[_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_0__.VIDEO_TYPE] || NONE
  };
};
/* harmony default export */ __webpack_exports__.Z = (getErrorAttributes);

/***/ }),

/***/ 99857:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getLiveProgress; }
/* harmony export */ });
/* harmony import */ var lodash_round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59854);
/* harmony import */ var lodash_round__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_round__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Gets the percentage of time elapsed between two dates and now ...
 *
 * @param {Date} startTime
 *   A start date with time.
 * @param {Date} endTime
 *   A end date with time.
 * @param {Date} now
 *   The current date with time.
 * @return {Number}
 *   The percentage of time elapsed between the two dates.
 */
function getLiveProgress(startTime, endTime) {
  let now = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Date();
  const start = new Date(startTime).getTime();
  const end = new Date(endTime).getTime();
  const today = now.getTime();
  const duration = end - start;
  const current = today - start;
  return duration > 0 && current > 0 ? Math.max(Math.min(lodash_round__WEBPACK_IMPORTED_MODULE_0___default()(current / duration, 2), 1), 0) : 0;
}

/***/ }),

/***/ 5053:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   B6: function() { return /* binding */ isTabletSize; },
/* harmony export */   UK: function() { return /* binding */ isMobileSize; },
/* harmony export */   WI: function() { return /* binding */ isXLargeDesktopSize; },
/* harmony export */   kV: function() { return /* binding */ isDesktopSize; },
/* harmony export */   pE: function() { return /* binding */ isDesktopMidSize; }
/* harmony export */ });
/* harmony import */ var _getCssVariable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74051);

const isMobileSize = () => typeof window !== 'undefined' && window && window.innerWidth < (0,_getCssVariable__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('tablet');
const isTabletSize = () => typeof window !== 'undefined' && window && window.innerWidth >= (0,_getCssVariable__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('tablet');
const isDesktopSize = function () {
  let variant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'desktop';
  return typeof window !== 'undefined' && window && window.innerWidth >= (0,_getCssVariable__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(variant);
};
const isDesktopMidSize = function () {
  let variant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'desktopMid';
  return typeof window !== 'undefined' && window && window.innerWidth >= (0,_getCssVariable__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(variant);
};
const isXLargeDesktopSize = () => typeof window !== 'undefined' && window && window.innerWidth >= (0,_getCssVariable__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)('container-max-width');

/***/ }),

/***/ 33159:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   I6: function() { return /* binding */ getOptValue; },
/* harmony export */   NH: function() { return /* binding */ getGppData; }
/* harmony export */ });
/* harmony import */ var cookies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27360);
/* harmony import */ var cookies_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cookies_js__WEBPACK_IMPORTED_MODULE_0__);


/**
 * Determine opt in/out status based on Onetrust Preference Center from a cookie.
 * OPT-IN : 1YNN
 * OPT-OUT: 1YYN
 *
 * @return {string}
 *   The opt in status
 */

const getOptStatus = () => cookies_js__WEBPACK_IMPORTED_MODULE_0___default().get('usprivacy') === '1YYN' ? 0 : '';

/**
 * Obtain opt in/out value based on Onetrust Preference Center from a cookie.
 * OPT-IN : 1YNN
 * OPT-OUT: 1YYN
 *
 * @return {string}
 *   The opt value
 */

const getOptValue = () => cookies_js__WEBPACK_IMPORTED_MODULE_0___default().get('usprivacy');

/**
 * Retrieve consent values from the OneTrust API needed for freewheel.
 *
 */

const getGppData = () => new Promise(resolve => {
  try {
    var _window;
    (_window = window) === null || _window === void 0 ? void 0 : _window.__gpp('ping', function (data) {
      const {
        applicableSections,
        gppString
      } = data;
      const gppData = {
        applicableSections: applicableSections ? applicableSections.join('_') : [],
        gppString: gppString !== null && gppString !== void 0 ? gppString : ''
      };
      resolve(gppData);
    });
  } catch (err) {
    resolve({});
  }
});
/* harmony default export */ __webpack_exports__.ZP = (getOptStatus);

/***/ }),

/***/ 50734:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getPathname; }
/* harmony export */ });
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84564);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);


/**
 * Get the pathname from a URL.
 *
 * @param {string} url
 *   A URL string.
 *
 * @return {string}
 *   The pathname part of the URL.
 */

function getPathname(url) {
  var parts = url_parse__WEBPACK_IMPORTED_MODULE_0___default()(url);
  return parts.pathname;
}

/***/ }),

/***/ 14336:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
const getPlatform = () => {
  const os = navigator.appVersion;
  return os.match(/Windows Phone/i) ? 'Windows Phone' : os.match(/Kindle|Silk/i) ? 'Kindle' : os.match(/iPhone|iPad|iPod/i) ? 'iOS' : os.match(/Mac OS|Macintosh/i) ? 'Mac OS X' : os.match(/Windows/i) ? 'Windows' : os.match(/Android/i) ? 'Android' : os.match(/mobile|opera m/i) ? 'Other Mobile' : os.match(/AppleTV|SMART-TV|SmartTV/i) ? 'tvOS' : 'Unknown OS';
};
/* harmony default export */ __webpack_exports__.Z = (getPlatform);

/***/ }),

/***/ 97221:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DK: function() { return /* binding */ DROPDOWNS; },
/* harmony export */   Dp: function() { return /* binding */ SHORTCUT_NAMES; },
/* harmony export */   Hy: function() { return /* binding */ CONTROLS; },
/* harmony export */   I: function() { return /* binding */ STORAGE_KEYS; },
/* harmony export */   J1: function() { return /* binding */ CC_CONFIG; },
/* harmony export */   PG: function() { return /* binding */ PRESETS; },
/* harmony export */   Pl: function() { return /* binding */ SHORTCUTS; },
/* harmony export */   VM: function() { return /* binding */ EDGE_EFFECTS; },
/* harmony export */   Vy: function() { return /* binding */ BACKGROUND_PALETTE; },
/* harmony export */   Yg: function() { return /* binding */ SHORTCUT_CODES; },
/* harmony export */   ZN: function() { return /* binding */ CCOFF; },
/* harmony export */   _v: function() { return /* binding */ playerConfig; },
/* harmony export */   aR: function() { return /* binding */ DEFAULT_PREFERENCES; },
/* harmony export */   cV: function() { return /* binding */ DEFAULT_PRESET; },
/* harmony export */   id: function() { return /* binding */ SHORTCUTS_MAPPING; },
/* harmony export */   kC: function() { return /* binding */ CC_KEY; },
/* harmony export */   rE: function() { return /* binding */ CC_INFO_LINK; },
/* harmony export */   zi: function() { return /* binding */ AUDIO_DESCRIPTION; }
/* harmony export */ });
/* unused harmony exports FONT_PALETTE, FONTS_FAMILY */
/* harmony import */ var _getTranslatedString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33786);
/* harmony import */ var _programmingTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(20057);


const PRESETS = {
  arialWhiteOnBlack: {
    fontFamily: 'Arial',
    fontSize: '2.5rem',
    color: 'white',
    textShadow: 'none',
    background: 'black',
    backgroundOpacity: '0.5',
    fontOpacity: '1'
  },
  timesWhiteOnBlack: {
    fontFamily: 'Times New Roman',
    fontSize: '2.5rem',
    color: 'white',
    textShadow: 'none',
    background: 'black',
    backgroundOpacity: '0.5',
    fontOpacity: '1'
  },
  arialBlackOnWhite: {
    fontFamily: 'Arial',
    fontSize: '2.5rem',
    color: 'black',
    textShadow: 'none',
    background: 'white',
    backgroundOpacity: '1',
    fontOpacity: '1'
  },
  lucidaBlackOnYellow: {
    fontFamily: 'Lucida',
    fontSize: '2.5rem',
    color: 'black',
    textShadow: 'none',
    background: 'yellow',
    backgroundOpacity: '1',
    fontOpacity: '1'
  },
  verdanaYellowOnBlue: {
    fontFamily: 'Verdana',
    fontSize: '2.5rem',
    color: 'yellow',
    textShadow: 'none',
    background: 'blue',
    backgroundOpacity: '0.5',
    fontOpacity: '1'
  },
  tahomaWhiteOnBlue: {
    fontFamily: 'Tahoma',
    fontSize: '2.5rem',
    color: 'white',
    textShadow: 'none',
    background: 'blue',
    backgroundOpacity: '1',
    fontOpacity: '1'
  }
};
const EDGE_EFFECTS = {
  none: 'none',
  uniform: 'rgb(0, 0, 0) -1px 0px, rgb(0, 0, 0) 0px 1px, rgb(0, 0, 0) 1px 0px, rgb(0, 0, 0) 0px -1px',
  dropShadow: 'rgb(0, 0, 0) 1px 1px 1px',
  raised: 'rgb(204, 204, 204) 0px 1px 0px',
  depressed: 'rgb(0, 0, 0) -1px -1px 2px'
};
const FONT_PALETTE = {
  white: 'rgba(255, 255, 255, 1)',
  cyan: 'rgba(0, 178, 236, 1)',
  blue: 'rgba(23, 0, 255, 1)',
  green: 'rgba(4, 246, 5, 1)',
  yellow: 'rgba(255, 255, 0, 1)',
  magenta: 'rgba(248, 9, 248, 1)',
  red: 'rgba(246, 5, 6, 1)',
  black: 'rgba(0, 0, 0, 1)'
};
const BACKGROUND_PALETTE = {
  black: 'rgba(0, 0, 0, 1)',
  cyan: 'rgba(0, 178, 236, 1)',
  blue: 'rgba(23, 0, 255, 1)',
  green: 'rgba(4, 246, 5, 1)',
  yellow: 'rgba(255, 255, 0, 1)',
  magenta: 'rgba(248, 9, 248, 1)',
  red: 'rgba(246, 5, 6, 1)',
  white: 'rgba(255, 255, 255, 1)',
  none: 'transparent'
};
const FONTS_FAMILY = ['Arial', 'Courier', 'Georgia', 'Lucida Sans', 'Tahoma', 'Times New Roman', 'Verdana'];
const CC_INFO_LINK = 'https://help.nbc.com/hc/en-us/articles/360016808534-Troubleshooting-Closed-Captioning-and-Subtitles';
const DROPDOWNS = [{
  name: 'fontFamily',
  options: FONTS_FAMILY
}, {
  name: 'color',
  options: FONT_PALETTE,
  isColorOptions: true
}, {
  name: 'background',
  options: BACKGROUND_PALETTE,
  isColorOptions: true
}, {
  name: 'textShadow',
  options: EDGE_EFFECTS,
  className: 'edge-effects'
}];
const CONTROLS = ['fontSize', 'fontOpacity', 'backgroundOpacity'];
const STORAGE_KEYS = {
  configuration: 'player.configuration',
  preferences: 'player.preferences',
  volume: 'player.volume'
};
const CC_CONFIG = {
  panelLeft: {
    audio: {
      label: 'audioTitle',
      options: ['main']
    }
  },
  panelRight: {
    captions: {
      label: 'captionsTitle',
      options: ['en', 'none']
    }
  }
};
const SHORTCUT_NAMES = {
  playPause: 'playPause',
  fullscreen: 'fullscreen',
  exitFullscreen: 'exitFullscreen',
  back5: 'back5',
  ahead5: 'ahead5',
  back10: 'back10',
  ahead10: 'ahead10',
  restart: 'restart',
  end: 'end',
  up: 'up',
  down: 'down',
  mute: 'mute',
  cc: 'cc',
  ccDown: 'ccDown',
  ccUp: 'ccUp',
  ccPreset: 'ccPreset',
  keyboard: 'keyboard'
};
const SHORTCUT_CODES = {
  p: 'p',
  spacebar: ' ',
  f: 'f',
  escape: 'escape',
  left: 'ArrowLeft',
  right: 'ArrowRight',
  j: 'j',
  l: 'l',
  zero: '0',
  home: 'Home',
  end: 'End',
  up: 'ArrowUp',
  down: 'ArrowDown',
  m: 'm',
  c: 'c',
  hyphen: '-',
  equal: '=',
  plus: '+',
  b: 'b',
  question: '?',
  slash: '/'
};
const SHORTCUTS_MAPPING = {
  [SHORTCUT_CODES.p]: SHORTCUT_NAMES.playPause,
  [SHORTCUT_CODES.spacebar]: SHORTCUT_NAMES.playPause,
  [SHORTCUT_CODES.f]: SHORTCUT_NAMES.fullscreen,
  [SHORTCUT_CODES.escape]: SHORTCUT_NAMES.fullscreen,
  [SHORTCUT_CODES.left]: SHORTCUT_NAMES.back5,
  [SHORTCUT_CODES.right]: SHORTCUT_NAMES.ahead5,
  [SHORTCUT_CODES.j]: SHORTCUT_NAMES.back10,
  [SHORTCUT_CODES.l]: SHORTCUT_NAMES.ahead10,
  [SHORTCUT_CODES.zero]: SHORTCUT_NAMES.restart,
  [SHORTCUT_CODES.home]: SHORTCUT_NAMES.restart,
  [SHORTCUT_CODES.end]: SHORTCUT_NAMES.end,
  [SHORTCUT_CODES.up]: SHORTCUT_NAMES.up,
  [SHORTCUT_CODES.down]: SHORTCUT_NAMES.down,
  [SHORTCUT_CODES.m]: SHORTCUT_NAMES.mute,
  [SHORTCUT_CODES.c]: SHORTCUT_NAMES.cc,
  [SHORTCUT_CODES.hyphen]: SHORTCUT_NAMES.ccDown,
  [SHORTCUT_CODES.equal]: SHORTCUT_NAMES.ccUp,
  [SHORTCUT_CODES.plus]: SHORTCUT_NAMES.ccUp,
  [SHORTCUT_CODES.b]: SHORTCUT_NAMES.ccPreset,
  [SHORTCUT_CODES.question]: SHORTCUT_NAMES.keyboard,
  [SHORTCUT_CODES.slash]: SHORTCUT_NAMES.keyboard
};
const SHORTCUTS = {
  [SHORTCUT_NAMES.playPause]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.playPause),
    keys: ['P', 'Spacebar'],
    codes: [SHORTCUT_CODES.p, SHORTCUT_CODES.spacebar]
  },
  [SHORTCUT_NAMES.fullscreen]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.fullscreen),
    keys: ['F'],
    codes: [SHORTCUT_CODES.f]
  },
  [SHORTCUT_NAMES.exitFullscreen]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.exitFullscreen),
    keys: ['F', 'Esc'],
    codes: [SHORTCUT_CODES.f, SHORTCUT_CODES.escape]
  },
  [SHORTCUT_NAMES.back5]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.back5),
    keys: ['&larr;'],
    codes: [SHORTCUT_CODES.left],
    disableList: [_programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .LIVE */ .wI]
  },
  [SHORTCUT_NAMES.ahead5]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.ahead5),
    keys: ['&rarr;'],
    codes: [SHORTCUT_CODES.right],
    disableList: [_programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .LIVE */ .wI]
  },
  [SHORTCUT_NAMES.back10]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.back10),
    keys: ['J'],
    codes: [SHORTCUT_CODES.j],
    disableList: [_programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .LIVE */ .wI]
  },
  [SHORTCUT_NAMES.ahead10]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.ahead10),
    keys: ['L'],
    codes: [SHORTCUT_CODES.l],
    disableList: [_programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .LIVE */ .wI]
  },
  [SHORTCUT_NAMES.restart]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.restart),
    keys: ['0', 'Home'],
    codes: [SHORTCUT_CODES.zero, SHORTCUT_CODES.home],
    disableList: [_programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .LIVE */ .wI, _programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .SINGLE_LIVE_EVENT */ .g0]
  },
  [SHORTCUT_NAMES.end]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.end),
    keys: ['End'],
    codes: [SHORTCUT_CODES.end],
    disableList: [_programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .LIVE */ .wI, _programmingTypes__WEBPACK_IMPORTED_MODULE_1__/* .SINGLE_LIVE_EVENT */ .g0]
  },
  [SHORTCUT_NAMES.up]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.up),
    keys: ['&uarr;'],
    codes: [SHORTCUT_CODES.up]
  },
  [SHORTCUT_NAMES.down]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.down),
    keys: ['&darr;'],
    codes: [SHORTCUT_CODES.down]
  },
  [SHORTCUT_NAMES.mute]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.mute),
    keys: ['M'],
    codes: [SHORTCUT_CODES.m]
  },
  [SHORTCUT_NAMES.cc]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.cc),
    keys: ['C'],
    codes: [SHORTCUT_CODES.c]
  },
  [SHORTCUT_NAMES.ccDown]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.ccDown),
    keys: ['-'],
    codes: [SHORTCUT_CODES.hyphen]
  },
  [SHORTCUT_NAMES.ccUp]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.ccUp),
    keys: ['=', '+'],
    codes: [SHORTCUT_CODES.equal, SHORTCUT_CODES.plus]
  },
  [SHORTCUT_NAMES.ccPreset]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.ccPreset),
    keys: ['B'],
    codes: [SHORTCUT_CODES.b]
  },
  [SHORTCUT_NAMES.keyboard]: {
    titleKey: "playerKeyboardShortcuts.".concat(SHORTCUT_NAMES.keyboard),
    keys: ['?', '/'],
    codes: [SHORTCUT_CODES.question, SHORTCUT_CODES.slash]
  }
};
const playerConfig = language => ({
  play: {
    name: 'play',
    icon: 'play.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.mainButtonPlay')
  },
  pause: {
    name: 'pause',
    icon: 'pause.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.mainButtonPause')
  },
  volume: {
    name: 'volume',
    icon: 'volume.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, "player.volume")
  },
  mute: {
    name: 'mute',
    icon: 'mute.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.mute')
  },
  cc: {
    name: 'cc',
    icon: 'cc.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.cc')
  },
  fullscreen: {
    name: 'fullscreen',
    icon: 'fullscreen.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.fullscreen')
  },
  fullscreenexit: {
    name: 'fullscreen',
    icon: 'fullscreenexit.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.fullscreenexit')
  },
  keyboard: {
    name: 'keyboard',
    icon: 'keyboard.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.keyboard')
  },
  back10: {
    name: 'back10',
    icon: 'back10.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.back10')
  },
  ahead10: {
    name: 'ahead10',
    icon: 'ahead10.svg',
    translateString: (0,_getTranslatedString__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(language, 'player.ahead10')
  }
});
const CCOFF = 'none';
const DEFAULT_PREFERENCES = {
  volume: 1,
  cc: {
    ...PRESETS.arialWhiteOnBlack,
    idPreset: 'arialWhiteOnBlack'
  },
  configuration: {
    audio: CC_CONFIG.panelLeft.audio.options[0],
    captions: CC_CONFIG.panelRight.captions.options[1]
  }
};
const CC_KEY = 'captions';
const DEFAULT_PRESET = 'arialWhiteOnBlack';
const AUDIO_DESCRIPTION = '-ad';

/***/ }),

/***/ 33495:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ZP: function() { return /* binding */ getPrivacyUrl; },
/* harmony export */   fJ: function() { return /* binding */ getNotSellUrl; },
/* harmony export */   h4: function() { return /* binding */ getCANoticelUrl; }
/* harmony export */ });
function getUrlParam(brandIntake) {
  const params = brandIntake ? "?intake=".concat(brandIntake) : '';
  return params;
}

/**
 * Get the Privacy Policy url link.
 *
 * @param {string} language
 *   The users language, "en" or "es".
 * @param {string} brandIntake
 *   Brand parameter naming key for intake.
 *
 * @return {string}
 *   Privay policy url link.
 */

function getPrivacyUrl(language, brandIntake) {
  const link = language === 'es' ? 'https://www.nbcuniversal.com/privacy-policies/privacy-latinamerica' : 'https://www.nbcuniversal.com/privacy';
  return "".concat(link).concat(getUrlParam(brandIntake));
}

/**
 * Get the Do Not Sell Link url link.
 *
 * @param {string} language
 *   The users language, "en" or "es".
 * @param {string} brandIntake
 *   Brand parameter naming key for intake.
 *
 * @return {string}
 *   Do Not Sell Link url link.
 */

function getNotSellUrl(language, brandIntake) {
  const link = language === 'es' ? 'https://www.nbcuniversal.com/privacy/notrtoo-spanish' : 'https://www.nbcuniversal.com/privacy/notrtoo';
  return "".concat(link).concat(getUrlParam(brandIntake));
}

/**
 * Get CA Notice.
 *
 * @param {string} language
 *   The users language, "en" or "es".
 * @param {string} brandIntake
 *   Brand parameter naming key for intake.
 *
 * @return {string}
 *   California Notice url.
 */

function getCANoticelUrl(language, brandIntake) {
  const link = language === 'es' ? 'https://www.nbcuniversal.com/privacy-policy/aviso-de-california' : 'https://www.nbcuniversal.com/privacy/california-consumer-privacy-act';
  return "".concat(link).concat(getUrlParam(brandIntake));
}

/***/ }),

/***/ 78278:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getScalableSalesPath; }
/* harmony export */ });
/**
 * Get Scalable sales origin path.
 *
 * @param {string} pathname
 *   Current location pathname.
 *
 * @return {string}
 *   Origin Scalable Sales pathname.
 */
const rxScalableSalesPath = /\/(.+)\/video\/[\d\w]+$/;
function getScalableSalesPath(pathname) {
  const m = pathname && pathname.match(rxScalableSalesPath);
  return m ? "/".concat(m[1]) : pathname;
}

/***/ }),

/***/ 64058:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
/**
 * Take an airdate and return the formatted date according to time zone.
 * @param {string|number} seasonNumber
 *   season number
 * @param {string|number} episodeNumber
 *   episode number
 * @return {string}
 *  S# E#
 */
function getSeasonEpisode(seasonNumber, episodeNumber) {
  const season = seasonNumber && Number(seasonNumber) !== 0 ? seasonNumber : null;
  const episode = episodeNumber && Number(episodeNumber) !== 0 ? episodeNumber : null;
  if (season && episode) {
    return "S".concat(seasonNumber, " E").concat(episodeNumber);
  }
  if (season) {
    return "S".concat(seasonNumber);
  }
  if (episode) {
    return "E".concat(episodeNumber);
  }
  return '';
}
/* harmony default export */ __webpack_exports__.Z = (getSeasonEpisode);

/***/ }),

/***/ 98090:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getShowPath; }
/* harmony export */ });
/* unused harmony export showPathRx */
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57267);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_0__);

const showPathRx = new RegExp('^[/]?(classic-tv/)?(the-tonight-show/classic/)?[^/]+');
const GENERETIC_PREFIXES = /^(ssr::|nav::)/;
const notShow = ['404', 'schedule', 'shows', 'video', 'videos'];
function getShowPath() {
  let truePathname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  // SSR and Park API favorites shim append special prefixes that should be removed
  const pathname = truePathname.replace(GENERETIC_PREFIXES, '');
  const match = pathname && pathname.match(showPathRx);
  if (match && notShow.indexOf(match[0]) === -1) {
    return match[0];
  }
  return '';
}

/***/ }),

/***/ 73307:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78730);
/* harmony import */ var core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_web_url_to_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(19979);
/* harmony import */ var core_js_modules_web_url_to_json_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_to_json_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(79307);
/* harmony import */ var core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_url_search_params_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80129);
/* harmony import */ var qs__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_5__);







/**
 * It will add a slash (/) in front of the url
 *
 * @param {object} cta The call to action from a slide.
 * @return {object} The destination URL and query { href, query }
 */
const getSlideDestination = cta => {
  if (!cta) return {};
  const urlDestination = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, ['data', 'destination'], '/');
  const isCTASmartTile = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, 'component') === 'SmartTile';
  const isCTASlideSmartTile = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, 'component') === 'CTASmartTile';
  // TODO: Get isLiveSlide from bff when it is ready
  const isLive = urlDestination.includes('/live?');
  const isPlaylist = cta.playlistMachineName || lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, 'data.destinationType') === 'playlist';
  const isTrailer = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, 'data.isTrailer');
  const destination = isPlaylist ? "/playlist/".concat(cta.playlistMachineName || lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, ['data', 'playlistMachineName'])) : isLive ? '/live' : isCTASmartTile ? lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, ['data', 'tile', 'data', 'permalink']) : isCTASlideSmartTile ? lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, ['data', 'permalink']) : urlDestination;
  const href = destination.indexOf('http://') === 0 || destination.indexOf('https://') === 0 || destination.charAt(0) === '/' ? destination : "/".concat(destination);
  const query = isPlaylist ? {
    v: lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, ['data', 'mpxGuid']) || lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, ['data', 'destination'])
  } : isLive ? qs__WEBPACK_IMPORTED_MODULE_5___default().parse(new URL(urlDestination).search.slice(1)) : {};
  const {
    endCardMpxGuid,
    endCardTagLine
  } = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, ['data']) || {};
  const state = {};
  if (endCardMpxGuid && endCardTagLine && isTrailer) {
    state.endCardMpxGuid = endCardMpxGuid;
    state.endCardTagLine = endCardTagLine;
  }
  if (isCTASlideSmartTile) {
    const {
      analytics
    } = cta;
    state.shelfTitle = 'Smart Tile';
    state.itemIndex = 0;
    state.shelfIndex = 0;
    state.smartTile = {
      title: analytics.smartTileLabel || 'None',
      episodeTitle: analytics.movie || analytics.title || 'None',
      logic: analytics.smartTileLogic || 'None',
      id: analytics.mpxGuid || 'None',
      scenario: analytics.smartTileScenario || 'None'
    };
    if (cta.playlistMachineName) {
      state.shelfPlaylistMachineName = cta.playlistMachineName;
      state.v = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(cta, 'data.mpxGuid');
      state.originatingTitle = cta.showAlias;
    }
  } else if (isTrailer) {
    state.shelfTitle = 'Smart Tile';
    state.itemIndex = 1;
    state.isTrailer = true;
  }
  return {
    href,
    query,
    state
  };
};
/* harmony default export */ __webpack_exports__.Z = (getSlideDestination);

/***/ }),

/***/ 56600:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: function() { return /* binding */ isSmartTileCta; }
/* harmony export */ });
/* harmony import */ var lodash_startCase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18029);
/* harmony import */ var lodash_startCase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_startCase__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26566);


const getSmartTileCta = function () {
  let slide = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  if (slide.cta) {
    return slide.cta;
  }
  if (slide.smartTileCTA) {
    return slide.smartTileCTA;
  }
  if (slide.tile) {
    return slide.tile;
  }
  if (slide.isSmartTile || slide.component === 'CTASmartTile') {
    return slide;
  }
  if (slide.primaryCTA) {
    return slide.primaryCTA;
  }
  return slide.secondaryCTA;
};
const isSmartTileCta = slide => {
  var _cta$data, _cta$treatments;
  const cta = getSmartTileCta(slide);
  return (cta === null || cta === void 0 ? void 0 : cta.component) === 'SmartTile' || (cta === null || cta === void 0 ? void 0 : cta.component) === 'CTASmartTile' || (cta === null || cta === void 0 ? void 0 : cta.isSmartTile) || (cta === null || cta === void 0 ? void 0 : (_cta$data = cta.data) === null || _cta$data === void 0 ? void 0 : _cta$data.destinationType) === 'video' || (cta === null || cta === void 0 ? void 0 : (_cta$treatments = cta.treatments) === null || _cta$treatments === void 0 ? void 0 : _cta$treatments.includes('smartTile'));
};

/**
 * Take a slide and returns the formatted props for smart tile.
 * @param {object} slide props
 * @param {analytics} analytics props
 * @param {boolean} isMovie props
 * @return {object}
 * Return the smart tile props object or null
 */
const NONE = 'None';
function getSmartTileProps(slide, analytics, isMovie) {
  const cta = getSmartTileCta(slide);
  if (isSmartTileCta(slide)) {
    var _cta$data2, _cta$data3, _cta$treatments2, _cta$analytics, _cta$analytics2, _cta$analytics3, _cta$analytics4, _cta$analytics5, _cta$data4, _cta$data4$tile, _cta$data4$tile$data, _cta$data5, _cta$data5$tile, _cta$data5$tile$data, _cta$analytics6, _cta$analytics7;
    const text = (cta === null || cta === void 0 ? void 0 : (_cta$data2 = cta.data) === null || _cta$data2 === void 0 ? void 0 : _cta$data2.label) || (cta === null || cta === void 0 ? void 0 : (_cta$data3 = cta.data) === null || _cta$data3 === void 0 ? void 0 : _cta$data3.text) || NONE;
    const label = text && text.toUpperCase();
    let scenario = NONE;
    if (label === 'START WATCHING' || label === 'WATCH LATEST EPISODE') {
      scenario = 'New to Show';
    } else if (label === 'CONTINUE WATCHING') {
      if (isMovie) {
        scenario = 'Mid-Movie';
      } else {
        scenario = 'Mid-Episode';
      }
    } else if (label === 'CONTINUE EPISODE') {
      scenario = 'Mid-Episode';
    } else if (label === 'CONTINUE MOVIE') {
      scenario = 'Mid-Movie';
    } else if (label === 'WATCH AGAIN' || label === 'WATCH NEXT' || label === 'WATCH NEXT EPISODE') {
      scenario = 'Mid-Series';
    }
    const isCtaSmartTile = cta && (cta.isSmartTile || (cta === null || cta === void 0 ? void 0 : (_cta$treatments2 = cta.treatments) === null || _cta$treatments2 === void 0 ? void 0 : _cta$treatments2.includes('smartTile')));
    return {
      [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_TITLE]: (isCtaSmartTile ? analytics === null || analytics === void 0 ? void 0 : analytics.smartTileLabel : (cta === null || cta === void 0 ? void 0 : (_cta$analytics = cta.analytics) === null || _cta$analytics === void 0 ? void 0 : _cta$analytics.smartTileLabel) || lodash_startCase__WEBPACK_IMPORTED_MODULE_0___default()(label.toLowerCase())) || NONE,
      [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_SCENARIO]: (isCtaSmartTile ? analytics === null || analytics === void 0 ? void 0 : analytics.smartTileScenario : (cta === null || cta === void 0 ? void 0 : (_cta$analytics2 = cta.analytics) === null || _cta$analytics2 === void 0 ? void 0 : _cta$analytics2.smartTileScenario) || scenario) || NONE,
      [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_VIDEO_ID]: (isCtaSmartTile ? (analytics === null || analytics === void 0 ? void 0 : analytics.mpxGuid) || (cta === null || cta === void 0 ? void 0 : (_cta$analytics3 = cta.analytics) === null || _cta$analytics3 === void 0 ? void 0 : _cta$analytics3.mpxGuid) : (cta === null || cta === void 0 ? void 0 : (_cta$analytics4 = cta.analytics) === null || _cta$analytics4 === void 0 ? void 0 : _cta$analytics4.mpxGuid) || (analytics === null || analytics === void 0 ? void 0 : analytics.mpxGuid)) || NONE,
      [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_EPISODE_TITLE]: (isCtaSmartTile ? (analytics === null || analytics === void 0 ? void 0 : analytics.title) || (cta === null || cta === void 0 ? void 0 : (_cta$analytics5 = cta.analytics) === null || _cta$analytics5 === void 0 ? void 0 : _cta$analytics5.title) : isMovie ? (cta === null || cta === void 0 ? void 0 : (_cta$data4 = cta.data) === null || _cta$data4 === void 0 ? void 0 : (_cta$data4$tile = _cta$data4.tile) === null || _cta$data4$tile === void 0 ? void 0 : (_cta$data4$tile$data = _cta$data4$tile.data) === null || _cta$data4$tile$data === void 0 ? void 0 : _cta$data4$tile$data.title) || NONE : (cta === null || cta === void 0 ? void 0 : (_cta$data5 = cta.data) === null || _cta$data5 === void 0 ? void 0 : (_cta$data5$tile = _cta$data5.tile) === null || _cta$data5$tile === void 0 ? void 0 : (_cta$data5$tile$data = _cta$data5$tile.data) === null || _cta$data5$tile$data === void 0 ? void 0 : _cta$data5$tile$data.secondaryTitle) || (cta === null || cta === void 0 ? void 0 : (_cta$analytics6 = cta.analytics) === null || _cta$analytics6 === void 0 ? void 0 : _cta$analytics6.videoTitle) || (analytics === null || analytics === void 0 ? void 0 : analytics.title)) || NONE,
      [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_LOGIC]: (isCtaSmartTile ? analytics === null || analytics === void 0 ? void 0 : analytics.smartTileLogic : cta === null || cta === void 0 ? void 0 : (_cta$analytics7 = cta.analytics) === null || _cta$analytics7 === void 0 ? void 0 : _cta$analytics7.smartTileLogic) || NONE
    };
  }
  return {
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_TITLE]: NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_SCENARIO]: NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_VIDEO_ID]: NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_EPISODE_TITLE]: NONE,
    [_lib_analytics_mParticle_constants__WEBPACK_IMPORTED_MODULE_1__.SMART_TILE_LOGIC]: NONE
  };
}
/* harmony default export */ __webpack_exports__.Z = (getSmartTileProps);

/***/ }),

/***/ 63238:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ utils_getSocialUrl; }
});

;// CONCATENATED MODULE: ./utils/isLink.js
const linkRegexWithScheme = /((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=+$,\w]+@)?|(?:[-;:&=+$,\w]+@)[A-Za-z0-9.-]+)((?:\/[+~%/.\w-_]*)?\??(?:[-+=&;%@.\w_]*)#?(?:[\w]*))?)/;

/**
 * Determines if a string is a link
 *
 * @param {string} link
 *   An HREF link
 *
 * @example
 * isLink('who/whatever.com')
 * // false
 * isLink('https://plus.google.com/steve/posts')
 * // true
 *
 * @return {bool} Whether the passed string is a link or not.
 */
function isLink(link) {
  return linkRegexWithScheme.test(link);
}
/* harmony default export */ var utils_isLink = (isLink);
;// CONCATENATED MODULE: ./utils/getSocialUrl.js

const patterns = {
  default: (value, name) => "https://".concat(name, ".com/").concat(value),
  tumblr: value => "https://".concat(value, ".tumblr.com"),
  spotify: value => "https://open.spotify.com/artist/".concat(value),
  snapchat: value => "https://www.snapchat.com/add/".concat(value),
  vine: value => "https://www.vine.co/".concat(value),
  facebook: value => "https://www.facebook.com/".concat(value),
  twitter: value => "https://twitter.com/".concat(value),
  pinterest: value => "https://pinterest.com/".concat(value),
  youtube: value => "https://www.youtube.com/".concat(value),
  instagram: value => "https://www.instagram.com/".concat(value)
};
const getSocialUrl = (value, name) => utils_isLink(value) && value || (patterns[name] ? patterns[name](value, name) : patterns.default(value, name));
/* harmony default export */ var utils_getSocialUrl = (getSocialUrl);

/***/ }),

/***/ 98463:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
const aspectRatios = {
  PlaylistTile: '16-9',
  VideoTile: '16-9',
  GenreTile: '16-9',
  OnAirNowTile: '16-9',
  UpcomingLiveTile: '16-9',
  BrandTile: '16-9',
  MixedTile: '16-9',
  ReplayTile: '16-9',
  SmartTile: '16-9',
  SeriesTile: '3-4',
  MovieTile: '3-4',
  FeatureTile: '1-1'
};
function getTileAspectRatio(component) {
  return aspectRatios[component] || null;
}
/* harmony default export */ __webpack_exports__.Z = (getTileAspectRatio);

/***/ }),

/***/ 79004:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  g: function() { return /* binding */ getTilesCount; },
  i: function() { return /* binding */ getVisibleTilesCount; }
});

// EXTERNAL MODULE: ./utils/getTileAspectRatio.js
var getTileAspectRatio = __webpack_require__(98463);
// EXTERNAL MODULE: ./utils/getCssVariable.js
var getCssVariable = __webpack_require__(74051);
// EXTERNAL MODULE: ./utils/isClientSide.js
var isClientSide = __webpack_require__(15343);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__(57267);
;// CONCATENATED MODULE: ./utils/parseCssUnit.js

const parseCssUnit = valueString => {
  const valueRegex = /(px|vw|vh|%|ms|rem|em)$/gm;
  const matches = valueString.match(valueRegex);
  return {
    unit: matches !== null ? matches[0] : null,
    value: valueString.replace(valueRegex, '')
  };
};
/* harmony default export */ var utils_parseCssUnit = (parseCssUnit);
;// CONCATENATED MODULE: ./utils/getTilesCount.js




const RESPONSIVE = 'responsive';
const AUTO = 'auto';

// Design wants 8 3x4 tiles and 6 16x9 in a 1920px breakpoint
// These max width values are needed to achieve that
const MAX_TILE_WIDTH_3_4 = 240;
const MAX_TILE_WIDTH_16_9 = 320;
const MAX_TILES_IN_SHELF = 10;
const TILE_MARGIN = 10;
const LARGE_DESKTOP = (0,getCssVariable/* default */.Z)('large-desktop');
const MTE_CONTENT_MARGIN_DESKTOP = (0,getCssVariable/* default */.Z)('mte-content-margin-desktop');

// This defines the number of tile widths we scroll at various breakpoints.
const breakpoints = {
  BrandTile: {
    0: 1,
    665: 2,
    990: 3
  },
  GenreTile: {
    0: 1,
    665: 2,
    990: 3
  },
  VideoTile: {
    0: 1,
    535: 2,
    890: 3
  },
  ReplayTile: {
    0: 1,
    535: 2,
    890: 3
  },
  PlaylistTile: {
    0: 1,
    535: 2,
    890: 3
  },
  OnAirNowTile: {
    0: 1,
    535: 2,
    890: 3
  },
  UpcomingLiveTile: {
    0: 1,
    535: 2,
    890: 3
  },
  SeriesTile: {
    0: 1,
    415: 2,
    665: 3,
    990: 4
  },
  MovieTile: {
    0: 1,
    415: 2,
    665: 3,
    990: 4
  },
  FeatureTile: {
    0: 2,
    535: 2,
    890: 3
  },
  BrandItemLabel: {
    0: 3,
    400: 4,
    480: 5,
    565: 6,
    645: 7,
    665: 5,
    690: 6,
    790: 7,
    890: 8,
    985: 9
  },
  CategoryItemLabel: {
    0: AUTO
  },
  SlideTile: {
    0: 1,
    768: 2
  },
  SmartTile: {
    0: 1,
    535: 2,
    890: 3
  }
};
const tilesMaxWidth = {
  '16-9': MAX_TILE_WIDTH_16_9,
  '3-4': MAX_TILE_WIDTH_3_4,
  '1-1': MAX_TILE_WIDTH_16_9
};
const getResponsiveNumTiles = (wrapper, tileType) => {
  if (!wrapper) return null;
  let wrapperWidth = wrapper.getBoundingClientRect().width;
  if ((0,isClientSide/* default */.Z)() && window.innerWidth >= LARGE_DESKTOP) {
    wrapperWidth = window.innerWidth - MTE_CONTENT_MARGIN_DESKTOP * 2;
  }
  const maxWidth = tilesMaxWidth[(0,getTileAspectRatio/* default */.Z)(tileType)] || MAX_TILE_WIDTH_3_4;
  const tilesInShelf = Math.ceil(wrapperWidth / maxWidth);
  return tilesInShelf <= MAX_TILES_IN_SHELF ? tilesInShelf : MAX_TILES_IN_SHELF;
};
const getIrregularNumTiles = (wrapper, activeItem) => {
  if (wrapper) {
    let wrapperWidth = wrapper.getBoundingClientRect().width;
    let visibleTiles = 0;
    Array.from(wrapper.children).forEach((children, i) => {
      if (i < activeItem) return;
      const childrenMargin = parseInt(utils_parseCssUnit(window.getComputedStyle(children).marginRight).value, 10);
      const totalTileWidth = children.getBoundingClientRect().width + childrenMargin;
      wrapperWidth -= totalTileWidth;
      if (wrapperWidth >= 0) {
        visibleTiles += 1;
      }
    });
    return visibleTiles;
  }
  return 0;
};

// Returns the number of tiles per slide for the current breakpoint.
const getTilesCount = function (wrapper, tileType) {
  let activeItem = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  const innerWidth = typeof window !== 'undefined' ? window.innerWidth : 0;
  if (!breakpoints[tileType]) {
    return null;
  }
  let numTiles = null;
  Object.keys(breakpoints[tileType]).forEach(breakpoint => {
    if (innerWidth >= breakpoint) {
      if (breakpoints[tileType][breakpoint] === RESPONSIVE) {
        numTiles = getResponsiveNumTiles(wrapper, tileType);
      } else if (breakpoints[tileType][breakpoint] === AUTO) {
        numTiles = getIrregularNumTiles(wrapper, activeItem);
      } else {
        numTiles = breakpoints[tileType][breakpoint];
      }
    }
  });
  return numTiles;
};

// Returns the number of visible tiles per slide.
const getVisibleTilesCount = wrapper => {
  var _wrapper$children;
  const tile = wrapper === null || wrapper === void 0 ? void 0 : (_wrapper$children = wrapper.children) === null || _wrapper$children === void 0 ? void 0 : _wrapper$children[0];
  if (!tile) return 3;
  const wrapperWidth = wrapper.getBoundingClientRect().width;
  // Tile margin sometimes changes from 10 to 15
  // But in this calculations is not that important
  const tileWidth = tile.getBoundingClientRect().width + TILE_MARGIN;
  return Math.floor(wrapperWidth / tileWidth) || 1;
};

/***/ }),

/***/ 69661:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getTimezone; }
/* harmony export */ });
/**
 * Guess the timezone of a user using Intl.
 * Also normalises certain timezones to New York.
 *
 * @return {string}
 *   The users timezone.
 */

function getTimezone() {
  if (typeof Intl === 'undefined') {
    return 'America/New_York';
  }

  // eslint-disable-next-line new-cap
  let tz = Intl.DateTimeFormat().resolvedOptions().timeZone;
  const availableTimezones = ['America/Denver', 'America/Phoenix', 'America/Los_Angeles', 'America/Chicago', 'America/Anchorage', 'Pacific/Honolulu', 'America/New_York'];
  if (!availableTimezones.includes(tz)) {
    tz = 'America/New_York';
  }
  return tz;
}

/***/ }),

/***/ 78621:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ getTimezoneOffset; }
/* harmony export */ });
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(76265);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_0__);

/**
 * Calculates UTC Offset of a date, given a time zone
 *
 * @param {string} timeZone - The time zone for which you want the UTC Offset out of
 * @param {Date} date - An optional date to calculate UTC Offset, by default current date is used
 *
 * @return {number} - The UTC Offset number in minutes
 */
function getTimezoneOffset(timeZone) {
  let date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();
  try {
    // Using 'en' locale to get a consistent date and time
    // separator
    const [month, day, year, hour, minute, second] = date.toLocaleString('en', {
      timeZone,
      hour12: false
    }).split(/[\/\s:-]/)
    // Parse everything into an integer base 10
    .map((element, index) => {
      if (index === 0) {
        // Subtract 1 to the month, since it's a Zero based parameter for Date
        return parseInt(element, 10) - 1;
      }
      if (index === 3 && parseInt(element, 10) === 24) {
        // Date.UTC method only accepts 0-23 as values so if it receives a 24 it should be changed to 0
        // 24 is the same as saying 12am and 0 is also the same as saying 12am
        return 0;
      }
      return parseInt(element, 10);
    });
    const dateInUTC = Date.UTC(year, month, day, hour, minute, second);
    const givenDate = new Date(date).setMilliseconds(0);
    // Calculate how many minutes there are between UTC version of the date
    // and the given date without the milliseconds
    return (dateInUTC - givenDate) / 60 / 1000;
  } catch (exception) {
    // IE11 only supports UTC as time zone, so this is a way of returning
    // a default time zone to avoid browser crashes, -300m / 60 = -5h which
    // is what America/New_York has while on DST, no particular reason other
    // than one is needed to be returned.
    return -300;
  }
}

/***/ }),

/***/ 33786:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ getTranslatedString; }
});

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
var es_string_replace = __webpack_require__(57267);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
;// CONCATENATED MODULE: ./translations/en.json
var en_namespaceObject = JSON.parse('{"activatePage":{"bridgeMessage":"Sign up for an NBCUniversal Profile to favorite and continue watching shows across all your devices.","codeScreenLabel":"Enter your Activation Code","errorExpiredCode":"Your activation code has expired or is invalid. Please generate a new code from your device.","pageTitle":"Activate NBC On Your Device","selectListTitle":"Or select a television provider you wish to activate with.","successMessage":"You can start watching your favorite shows now!"},"algoliaPages":{"empty":"{type} aren\'t available yet.<br/> Check back later for all the latest action!","fullEventReplays":"Replays","singleLiveEvents":"Events"},"allShowsPage":{"title":"Shows & Movies"},"appsPage":{"qrAlt":"QR code to download {app}"},"authTerms":{"agreeText":"I have read and agree to NBCUniversal\'s","errorMessage":"Please check the boxes to continue","marketingNotice":""},"authTermsPeacock":{"agreeText":"I agree to the","errorMessage":"Please check the box to continue","marketingNotice":"By signing up, I agree to receive occasional marketing material from Peacock"},"authVppa":{"agreeText":"I have read and agree to the NBCUniversal\'s","errorMessage":"Please check the boxes to continue","marketingNotice":"","singleErrorMessage":"Please check the box to continue"},"basicFailurePage":{"agt":"Looking for the America\'s Got Talent Vote or Save?","asc":"Looking for the American Song Contest vote?","notFoundSubtitle":"Check out our Home page to find more to watch.","notFoundTitle":"Oops! This page doesn\'t exist.","notLoadingSubtitle":"We\'re working hard to solve the problem. Please try again later.","notLoadingTitle":"Content is not loading at this time.","pca":"Looking for the People\'s Choice Awards Vote?","pcca":"Looking for the People\'s Choice Country Awards Vote?","voice":"Looking for The Voice Vote?"},"bio":{"ariaMore":"Expand Biography with More Button","less":"Less","more":"More"},"contactPage":{"additionalResourcesTitle":"Additional Resources","appCrashingLabel":"The app is crashing or failing to open","closedCaptioningLabel":"I am having trouble with closed captioning","commentLabel":"I have a Comment or Suggestion","complaintLabel":"I have a Complaint or Concern","feedbackDescription":"Write Your Feedback Here","formTitle":"SELECT THE BEST OPTION","generalLabel":"I have Other Feedback","geoRestrictionsLabel":"I am getting an error message that video is not available in my country","headerText":"Have a comment, complaint or compliment about NBC network programming? Running into problems with our site or app? Our viewers are our first priority, so we want to hear from you!","listItem1":"Due to the incredible volume of feedback we receive, we can\'t promise individual responses.","listItem2":"We\'re unable to forward feedback directed to NBC talent.","listItem3":"NBC cannot accept, consider, or pay for any unsolicited creative ideas or materials.","listTitle":"A few things you should know first:","liveStreamLabel":"I am having trouble with the live stream","nbcProfileLabel":"I have questions about my NBCUniversal Profile","newsLabel":"I have a News Story or Tip","notListedLabel":"My issue is not listed","processingTitle":"Processing","programmingFeedbackLabel":"I have feedback on NBC programming","showCategoryLabel":"Select Show or category","siteCrashingLabel":"The site is crashing or failing to load","subjectLabel":"Select Subject","successMessage":"Your comment or question has been received – thanks for getting in touch!","technicalDescription":"Describe Your Problem Here","technicalProblemLabel":"I am having a technical problem","ticketLabel":"I\'m looking for tickets to an NBC show","ticketLink":"Click here for ticket info","topicLabel":"Select Topic","troubleLoggingInLabel":"I am having trouble signing in with my TV provider","videoIssuesLabel":"I am having trouble streaming episodes or highlights","votingLabel":"I am having trouble voting"},"creditDetailspage":{"backTo":"Back to"},"dls":{"tuneInLive":"LIVE NOW","tuneInUpcoming":"WATCH ON LIVE"},"episodes":{"moreLoaded":"{items} more episodes loaded"},"errors":{"alpha":"This field can not contain numbers.","alphaNumeric":"This field can only contain letters and numbers.","date":"Please enter a valid date.","general":"An error occurred.","mail":"Please enter a valid email address.","matchingMail":"Please enter a matching email address","message":"Please enter your message","numeric":"This field can only contain numbers.","phone":"Please enter a valid phone number.","required":"This field is required.","screenMessage":"Sorry, we had a problem. {tag}Please try again.","success":"Ready to submit","zipcode":"Please enter a valid zip code."},"forkScreen":{"authNoCreditsOverlayTitle":"We\'re sorry, but you\'re out of credits.","idmTitle":"Watch now with an NBCUniversal Profile","mvpdTitle":"Unlock all content by linking your TV Provider","noAuthEpisodeOverlayTitle":"Select an option below to start watching this locked video:","noAuthMovieOverlayTitle":"Select an option below to start watching this locked video:","noKeyContent":"You can still watch anything without a key icon","otherWays":"Other Ways to Watch","peacockButtonExplore":"Stream on Peacock","peacockButtonSignUp":"Sign Up for Peacock","peacockSubtitleOne":"Watch 40,000+ hours of hit movies, TV shows, and more.","peacockSubtitleTwo":"Enjoy 50+ always-on channels.","proTip":"Pro Tip","proTipNewContent":"Most new episodes become unlocked a week after air.","tempPassHeader":"Continue watching with an NBCUniversal Profile","tempPassTitle":"Your Live Sports Free Preview has concluded.","title":"How would you like to start watching?"},"gauges":{"letter":"Contains a letter","letterAnnounceError":"Must contain a letter","max":"Less than 257 characters","maxAnnounceError":"Cannot be more than 257 characters","min":"At least 10 characters","minAnnounce":"Contains at least 10 characters","minAnnounceError":"Must contain at least 10 characters","noCharacters":"Cannot contain <>& or space","noEmail":"Cannot contain email","noPassword":"Cannot contain \'password\'","number":"Contains a number","numberAnnounceError":"Must contain a number"},"general":{"and":"and","back":"Back","backTo":"Back to","backToHome":"Back to NBC.com home","birthYear":"Birth Year","cancelButton":"Cancel","charactersRemaining":"Characters Remaining: ","checkBoxes":"Check boxes","close":"Close","confirmEmail":"Confirm Email Address","confirmPassword":"Please Confirm Your Password","contactSupport":"Contact Support","contactUs":"Contact Us","continue":"Continue","createProfile":"Create Profile","credits":"credits","edit":"Edit","email":"Email","faq":"for FAQs.","female":"Female","forename":"First Name","forgotPassword":"Forgot password?","free":"free","fullList":"full list","gender":"Gender","helpCenter":"Help Center","here":"here","heroBridgeTitle":"TV Provider Linked!","heroReadyTitle":"Ready to start streaming?","heroSuccessTitle":"Congratulations!<br/>You\'re ready to stream.","hintCharacters":"({rule} characters)","linkProvider":"Link TV Provider","live":"Live","logIn":"Log In","mainContent":"Main Content","male":"Male","man":"Man","nbcSupport":"NBC Support","nbcuprofile":"NBCUniversal Profile","needHelp":"Need Help?","noThanks":"NO THANKS","noneEntered":"None Entered","noneOfTheAbove":"None Of The Above","notSellPersonalInfo":"Your Privacy Choices","or":"or","other":"Other","password":"Password","passwordHide":"Hide Password","passwordShow":"Show Password","phoneNumber":"Phone Number","preferNotToDisclose":"Prefer Not to Disclose","preferNotToSay":"Prefer Not to Say","presentedBy":"Presented by","privacyPolicy":"Privacy Policy","required":"Required","resetHere":"Reset it here","saveButton":"Save","saveChangesButton":"Save Changes","signIn":"Sign in","signUp":"Sign up","signUpFree":"Sign up free","skip":"Skip","slideControlPause":"Pause slides auto advance","slideControlPlay":"Play slides auto advance","slideNext":"Go to next slide","slidePrevious":"Go to previous slide","strong":"Strong","submit":"Submit","success":"Success!","surname":"Last Name","termsOfService":"Terms of Service","termsOfUse":"Terms of Use","theFemenine":"the","theMasculine":"the","uhoh":"Uh oh.","videoViewingPolicy":"Video Viewing Policy","visit":"Visit","visitHelpCenter":"Visit the Help Center.","weak":"Weak","website":"website","welcomeSubtitle":"Welcome to the NBCUniversal family.","woman":"Woman","yes":"Yes","zipCode":"Zip Code"},"identityForms":{"accountError":"We could not create your account, please try again later.","accountExists":"A profile has already been created with this email address. Please sign in instead.","accountExistsSignIn":"Account already exists. <a href=\\"/sign-in\\">Sign in</a> or <a href=\\"/request-password\\">reset your password</a>.","accountExistsVendor":"We could not register or log you in with your {vendor} account because an account already exists with this email.","accountIdExistsVendor":"{vendor} already used with a different email. Please try another registration method.","birthYearRequired":"Please select a birth year.","emailRequired":"Please enter a valid email address.","emailVerifyError":"We\'re unable to verify your email. Please try again","emailVerifyServiceError":"We are having technical difficulties. Please try again.","errorInForm":"There is 1 error in this form:","errorInPage":"There is 1 error on this page","errorsInForm":"There are {totalErrors} errors in this form:","errorsInPage":"There are {totalErrors} errors on this page","forenameInvalid":"First name cannot contain special characters.","forenameNameLength":"First name must be less than 50 characters.","forenameRequired":"Please enter a valid first name.","genderRequired":"This field is required.","idmError":"We could not authenticate you, please try again later.","informationText":"Advertisements make it possible to keep our streaming services free. We aim to serve you ads that are relevant to you. All personal details and data will be used in accordance with our","informationTitle":"Why do we ask for this information?","invalidAlpha":"This field cannot contain numbers or special characters.","invalidAlphaNumeric":"This field cannot contain numbers or special characters.","invalidDate":"Please enter a valid date.","invalidEmail":"Please enter a valid email address.","invalidEmailPassword":"Incorrect email or password. <br/> Please try again.","invalidNumeric":"This field can only contain numbers.","invalidPassword":"Password doesn\'t match our records. Please try again.","invalidPhoneNumber":"Please enter a valid phone number.","invalidRequired":"This field is required.","invalidZipCode":"Zip code must be numerical characters.","passwordLength":"Please make sure your password is 5-50 characters.","passwordRequired":"Please enter a valid password.","passwordStrongHint":"You must use a strong password","peacockTerms":"You must agree to the terms to sign up for Peacock.","surnameInvalid":"Last name cannot contain special characters.","surnameNameLength":"Last name must be less than 50 characters.","surnameRequired":"Please enter a valid last name.","tooManyLoginAttempts":"You have made six unsuccessful login attempts in a three-minute period. Your account has been locked temporarily for one minute.","vendorError":"We could not register or log you in with your {vendor} account at this time. Please try again later.","zipCodeError":"Zip code must be numerical characters.","zipCodeLength":"Zip code must be 5 characters.","zipCodeRequired":"Please enter a valid zip code."},"liveCallouts":{"watchOnApp":"Watch on the {brand} App"},"livePage":{"blackoutError":"Sorry, this program is unavailable in your area due to blackout restrictions.","buttonGoToShow":"Go to Show","buttonPlayBeginning":"Play from Beginning","buttonPlayNextEpisode":"Play Next Episode","channels":"Channels","discontinuedAccess":"Sorry, your TV Provider has discontinued access to NBC content on this device.","dropdownEmpty":"No results found. Please filter by an available sport.","emptySectionSubtitle":"See full schedule.","emptySectionSubtitleOlympics":"See full schedule.","emptySectionSubtitleSports":"Browse for other LIVE sports.","emptySectionTitle":"No content currently available.","emptySectionTitleOlympics":"No content currently available.","emptySectionTitleSports":"No events scheduled for today.","fallbackAuthZErrorDescription":"Sorry. Your TV provider did not authorized this live stream.","fallbackAuthZErrorTitle":"Not Authorized","fullScheduleButton":"Full Schedule","generalError":"Sorry, something went wrong. Please try refreshing your browser","generalStreamError":"Something has gone wrong. Please try restarting your app and trying the live stream again.","inactivityMessage":"Are you still watching?","loadButton":"Load Local Listings","loadTitleText":"Please load local listings to see available LIVE content.","locationUnavailable":"{brand} Live is unavailable in your current location.","notAuthorized":"Not Authorized","olympics":"Olympics","parentalControlDescription":"Your Parental Control settings do not allow you to view this content. Please visit your TV provider\'s site to change your settings.","parentalControlTitle":"Parental Controls have blocked this content.","retransEntitlementError":"Sorry. Your TV provider has discontinued access to NBC content on this device.","showAllSportsButton":"Show All Sports","sports":"Sports"},"mvpdBridgeScreenPage":{"title":"Get Even More Content"},"mvpdBridgeScreenPrompt":{"linkTvProvider":"Link Your TV Provider","promptMessage":"Do you want to link your cable or satellite provider?"},"mvpdBridgeScreenSignUpPrompt":{"continueButton":"Continue Watching","creditsDescription":"You\'ve received <strong> 3 free credits </strong> to watch locked content.","linkDescription":"Link your TV Provider to unlock all content","mainButton":"Start Watching","secondaryButton":"Link TV Provider to {brand}"},"mvpdDialog":{"featuredDescription":"Select your TV provider below to watch unlimited {brand} content.","fullListDescription":"Or select from the full list of providers.","generalError":"Sorry, something went wrong. Please try refreshing your browser.","genericDescription":"Select your TV provider below to watch unlimited content.","helpDescription":"Need help linking?","listDescription":"Don\'t see your provider?","searchDescription":"Search below, or select from the","searchProvider":"Search for your provider.","title":"Link Provider","twcMessage":"* TWC|Spectrum and Brighthouse|Spectrum customers - use the Spectrum button to link your account.","verifyAccount":"Verify Account"},"mvpdModal":{"modalHeader":"Is <span>{provider}</span> your TV Provider?"},"mvpdPeacockPicker":{"mvpdBlockButton":"Link TV Provider","mvpdBlockTitle":"Unlock all content by linking your TV Provider","peacockBlockButton":"Continue to Peacock","peacockBlockTitle":"Stream the best in LIVE Sports on Peacock","subtitle":"Enjoy a new Free Preview each week.","title":"Your Live Sports Free Preview has concluded."},"mvpdPredictive":{"noResults":"No Results found.","try":"Try the","typeProvider":"Type provider name to search"},"myAccountPage":{"creditsLeftMessage1":"You have","creditsLeftMessage2":"left to watch locked content.","emailAlreadyExists":"This email is already associated with another account.","emailNoUpdate":"Email cannot be updated if you have signed in with your Facebook, Apple or Google accounts.","formTitle":"Personal Information","pageTitle":"My Profile","providerLinkMessage":"link your TV Provider","toggleAriaLabel":"Edit Personal Information","unauthenticatedMessage":"To watch unlimited content,"},"navigation":{"app":"App","home":"Home","live":"Live","networks":"Networks","shop":"Shop","singleMovies":"Movies","singleShows":"Shows","skipToContent":"Skip to Content"},"onboardingConfirmation":{"buttonBack":"Back to home","buttonMain":"Create Profile","description":"Your favorites have been saved! Discover new content based on your favorites on the homepage.","descriptionAnonymous":"To save your favorites across devices and brands, create an NBCUniversal profile.","header":"You\'re All Set!"},"onboardingModal":{"buttonCancel":"Later","buttonMain":"Customize","close":"Close","mainText":"Customize your experience by choosing your favorites."},"onboardingPage":{"next":"Next","skip":"Skip","update":"Update"},"onboardingTooltip":{"message":"Customize your experience here at any time!","messageAnonymous":"Sign Up or Sign In to customize your experience at any time!"},"player":{"ahead10":"Jump ahead 10 seconds","back10":"Jump back 10 seconds","buffering":"BUFFERING","cc":"Select Audio and Subtitles","errorDescription":"If the problem persists, please contact us and send us a note.","errorTitle":"Sorry! We\'re having some trouble.","fullscreen":"Fullscreen","fullscreenexit":"Exit Fullscreen","keyboard":"Keyboard Shortcuts","loading":"LOADING","mainButtonPause":"Pause","mainButtonPlay":"Play","mute":"Mute","progress":"Playback Progress","skipIntro":"Skip Intro","skipRecap":"Skip Recap","skipTeaser":"Skip Teaser","unmute":"Unmute","vodConcurrencyError":"You are streaming NBCUniversal content on too many devices simultaneously. To continue, stop streaming on another device.","volume":"Volume"},"playerClosedCaptionOptions":{"audioTitle":"Audio","captionsTitle":"Captions","en":"English [CC]","en-adAudio":"English (AD)","enAudio":"English","eng-adAudio":"English (AD)","engAudio":"English","es":"Spanish (Español)","esAudio":"Spanish (Español)","main":"Main","mainAudio":"Main","none":"None","on":"on","settings":"Settings","settingsAriaLabel":"Configure text track font and color","spaAudio":"Spanish (Español)","und":"Alternative [CC]"},"playerCountdown":{"ad":"Ad","of":"of","seconds":"seconds"},"playerKeyboardShortcuts":{"ahead10":"Jump Ahead 10 Seconds","ahead5":"Skip Ahead 5 Seconds","back10":"Jump Back 10 Seconds","back5":"Skip Back 5 Seconds","cc":"Toggle Closed Captions","ccDown":"Decrease Caption Size","ccPreset":"Cycle Caption Text Preset","ccUp":"Increase Caption Size","down":"Volume Down","end":"Skip to the End","exitFullscreen":"Exit Fullscreen","fullscreen":"Fullscreen","keyboard":"Show Keyboard Controls","mute":"Mute Audio","playPause":"Play/Pause","restart":"Restart","up":"Volume Up"},"playerPreferences":{"apply":"Apply","arialBlackOnWhite-description":"Arial black font on white background","arialWhiteOnBlack-description":"Arial white font on black background","backgroundHeader":"Background Color","backgroundOpacity":"Background Opacity","black":"black","blue":"blue","casual":"Casual","colorHeader":"Font Color","cursive":"Cursive","decrease":"Decrease","default":"Default","depressed":"Depressed","description":"Customize font style, color, and more","edgeColor":"Edge Color","edgeOpacity":"Edge Opacity","edgeStyle":"Edge Style","fontFamilyHeader":"Font","fontOpacity":"Font Opacity","fontSize":"Font Size","green":"green","header":"Caption Options","increase":"Increase","info":"More info","infoArialabel":"More info on caption options","large":"Large","lucidaBlackOnYellow-description":"Lucida black font on yellow background","medium":"Medium","monospacedSansSerif":"Monospaced Sans Serif","monospacedSerif":"Monospaced Serif","preset":"Presets","proportionalSansSerif":"Proportional Sans Serif","proportionalSerif":"Proportional Serif","purple":"purple","raised":"Raised","red":"red","reset":"Reset","sample":"This is a sample","shadow":"Shadow","small":"Small","smallCapitals":"Small Capitals","tahomaWhiteOnBlue-description":"Tahoma white font on blue background","teal":"teal","textShadowHeader":"Edge Effects","timesWhiteOnBlack-description":"Times New Roman white font on black background","uniform":"Uniform","verdanaYellowOnBlue-description":"Verdana yellow font on blue background","white":"white","windowColor":"Window Color","windowOpacity":"Window Opacity","yellow":"yellow"},"playerTempPass":{"button":"Link TV Provider","text":"Free Preview Expires In"},"requestPasswordPage":{"checkYourEmailDescription":"If a profile is associated with that email, you will receive a link to reset your password.","checkYourEmailSubtitle":"Please check your email now.","checkYourEmailTitle":"Check Your Email","instructions":"Enter your email address and we\'ll send you instructions on how to create a new password.","noEmailReceived":"Haven\'t received that email?","noRememberEmail":"Can\'t remember what email address you used?","pageTitle":"Request a new password","title":"Need a new password?"},"resetPasswordPage":{"back":"BACK TO SIGN IN","error1":"An error has occurred. To login click ","error2":". To reset your password click ","errorHere":"here","hint":"({min}-{max} characters)","pageTitle":"Reset your password","success":"Your password has been successfully reset.","successTitle":"Success!","title":"Create Your New Password"},"resetPasswordPageSuccess":{"pageTitle":"Reset your password | Success","text":"Your password has been reset and you are now signed in.","title":"Success!"},"signInUp":{"createProfileTitle":"Create Your NBCUniversal Profile","facebookNotSupported":"Sorry, Facebook login is no longer supported. Please create a new NBCUniversal profile.","finishText":"Finish up","logInText":"Log in with Email","logInTitle":"Log in to your NBCUniversal Profile","profileSignUp":"Create profile with email","signInApple":"Continue with Apple","signInFacebook":"Continue with Facebook","signInGoogle":"Continue with Google","signInNoAccount":"Don\'t have a profile?","signInText":"Sign in with Email","signUpFacebookError":"We could not create your account. Please try another registration method.","signUpFavorite":"Favorite and continue watching shows across all your devices.","signUpGatedFast":"Sign up for <strong>instant access</strong> to the latest content.","signUpIntro3":"Keep up-to-date with your favorite shows.","signUpLockedMessage":"Instantly get <strong>3 free credits</strong> to watch locked content.","signUpNewsletter":"I understand that NBCUniversal may send me the latest news, promotions and more.","signUpText":"Sign up with email","signUpTitle":"Sign up for your NBCUniversal Profile","signUpUnlock":"Unlock {brand} Content with an NBCUniversal Profile","signUpVote":"Vote during your favorite shows.","signUpWithAccount":"Already have an NBCUniversal Profile?","successMessage":"You are signed in to your NBCUniversal Profile."},"signUpPeacock":{"error":"An error occurred.  Please try again.","signUpSkip":"SKIP","signUpSubtitleEmail":"Get access to our new streaming service, using the same email and password.","signUpSubtitleEmailVar1":"Use your same NBCUniversal email and password to sign in to Peacock and start streaming for FREE.","signUpSubtitleEmailVar2":"Watch hit movies, shows, and exclusive originals on Peacock using your same NBCUniversal profile.","signUpSubtitleEmailVar3":"It\'s easy! Sign up here and you can use your same email and password to sign in to Peacock for FREE.","signUpSubtitleVendor":"Access our new streaming service for FREE, using your email. Just create a password.","signUpTitle":"Add for FREE","signUpTitleVar1":"Want Even More?","signUpTitleVar2":"Want Even More?","signUpTitleVar3":"Want To Join The Flock?"},"signUpPeacockFooter":{"link":"Go to Peacock","mainText":"Log in to Peacock with the same email and password you used for your NBCUniversal Profile."},"tempPassEntrySuccessScreen":{"header":"Unlock NBC content with an NBCUniversal Profile","tempPassEntryProp1":"<strong>Instantly</strong> get <strong>{time} more minutes</strong> of your Free Preview.","tempPassEntryProp2":"Receive a <strong>{time}-minute</strong> Free Preview <strong>each week.</strong>","tempPassEntryProp3":"<strong>Instantly</strong> get <strong>3 free credits</strong> to watch locked entertainment content.","tempPassSuccessProp1":"You’ve received <strong>{time} more minutes</strong> of your Free Preview.","tempPassSuccessProp2":"You’ll receive a <strong>{time}-minute</strong> Free Preview <strong>each week.</strong>","tempPassSuccessProp3":"You’ve received <strong>3 free credits</strong> to watch locked entertainment content."},"tileBrandCategory":{"selected":"Selected","unSelected":"Unselected"},"tileSeriesFavorite":{"favorite":"added to Favorites","unFavorite":"removed from Favorites"},"unsubscribePage":{"errorMessage":"Something went wrong with your unsubscribe request, but we\'re standing by to help. Submit a ticket at {helpContent} with the Issue Type set to \\"I\'m having trouble with my account.\\" > \\"I want to unsubscribe from emails.\\"<br/><br/>We will process your unsubscribe request within the next week.","manageTextMenu":"Manage your email preferences","pageTitle":"Email Preferences","statusMessage":"You\'ve unsubscribed from","successMessage":"You can manage other {brand} email subscriptions on the {brand}","successMessage2":"","successMessageAlt":"You can manage other {brand} email subscriptions","unsubscribeAllMessage":"All emails from the {brand} app","unsubscribeAllTextMenu":"Unsubscribe from all {brand} emails"},"vendorLoginPage":{"genericText":"Complete your profile","mainText":"You\'re creating an NBCUniversal Profile using","newsletter":"I understand that NBCUniversal may send me the latest news, promotions and more.","oneTapTitle":"To continue, you will need to create an NBCUniversal Profile.","signInTitle":"You\'re signing in to your NBCUniversal Profile using:","signUpTitle":"Complete Profile with {vendorUpper}"},"videoEndCard":{"dismiss":"Dismiss"},"videoOverlay":{"geoRestrictionError":"This video is not available in your location."},"videoPlayerOverlays":{"live":"Live","olympicsConcludedTitle":"This video has concluded.","streamConcludedCta":"See full listings","streamConcludedSubtitle":"Browse full listings below.","streamConcludedTitle":"Your stream has concluded.","videoOnApp":"Video available on the app.","watchOnApp":"Watch on the {brand} App"}}');
;// CONCATENATED MODULE: ./translations/es.json
var es_namespaceObject = JSON.parse('{"activatePage":{"bridgeMessage":"Regístrate para obtener una Cuenta NBCUniversal, marcar tus favoritos y continuar viendo shows en todos los dispositivos.","codeScreenLabel":"Ingresa el Código de Activación","errorExpiredCode":"El código de activación ha expirado o es inválido. Por favor genere un nuevo código de su dispositivo.","pageTitle":"Activa NBC En Tu Dispositivo","selectListTitle":"O selecciona el proveedor de TV que deseas Enlazar con.","successMessage":"¡Puedes empezar a ver tu Show ahora!"},"algoliaPages":{"empty":"{type} todavía no están disponibles.</br> ¡Vuelve más tarde para ver toda la acción más reciente!","fullEventReplays":"Repeticiones","singleLiveEvents":"Eventos"},"allShowsPage":{"title":"Shows & Películas"},"appsPage":{"qrAlt":"Código QR para descargar {app}"},"authTerms":{"agreeText":"He leído y acepto los","errorMessage":"Por favor marque las casillas para continuar","marketingNotice":"de NBCUniversal"},"authTermsPeacock":{"agreeText":"Acepto los","errorMessage":"Por favor marque las casillas para continuar","marketingNotice":"Al registrarme, acepto recibir material de marketing de Peacock ocasionalmente"},"authVppa":{"agreeText":"He leído y acepto la","errorMessage":"Por favor marque las casillas para continuar","marketingNotice":" de NBCUniversal","singleErrorMessage":"Por favor marque la casilla para continuar"},"basicFailurePage":{"agt":"Looking for the America\'s Got Talent Vote or Save?","asc":"Looking for the American Song Contest vote?","notFoundSubtitle":"Check out our Home page to find more to watch.","notFoundTitle":"Oops! This page doesn\'t exist.","notLoadingSubtitle":"We\'re working hard to solve the problem. Please try again later.","notLoadingTitle":"Content is not loading at this time.","pca":"Looking for the People\'s Choice Awards Vote?","pcca":"Looking for the People\'s Choice Country Awards Vote?","voice":"Looking for The Voice Vote?"},"bio":{"ariaMore":"Expandir la biografía con el botón de ver más","less":"Ver menos","more":"Ver más"},"contactPage":{"additionalResourcesTitle":"Recursos Adicionales","appCrashingLabel":"La aplicación se bloquea o no se abre","closedCaptioningLabel":"Tengo problemas para ver subtítulos","commentLabel":"Tengo un Comentario o Sugerencia","complaintLabel":"Tengo una Queja o Inquietud","feedbackDescription":"Escriba sus comentarios aquí","formTitle":"SELECCIONA LA MEJOR OPCIÓN","generalLabel":"Tengo Otros Comentarios","geoRestrictionsLabel":"Estoy recibiendo un mensaje de error que indica que el video no está disponible en mi país","headerText":"¿Tienes algún comentario, queja o elogio sobre la programación de NBC? ¿Tienes problemas con nuestro sitio o aplicación? Nuestra audiencia es nuestra prioridad, por lo que queremos saber de ti.","listItem1":"Debido al increíble volumen de comentarios que recibimos, no podemos prometer respuestas individuales.","listItem2":"No podemos enviar comentarios dirigidos al talento de NBC.","listItem3":"NBC no puede aceptar, considerar o pagar cualquier idea creativa o materiales no solicitados.","listTitle":"Algunas cosas que debes saber primero:","liveStreamLabel":"Estoy teniendo un problema con la transmisión en vivo","nbcProfileLabel":"Tengo preguntas sobre mi Cuenta de NBCUniversal","newsLabel":"Tengo un Reporte o Sugerencia","notListedLabel":"Mi problema no está listado","processingTitle":"Procesando","programmingFeedbackLabel":"Tengo comentarios sobre la Programación de NBC","showCategoryLabel":"Seleciona el Show o la categoría","siteCrashingLabel":"El sitio se bloquea o no se carga","subjectLabel":"Selecciona Tu Tema","successMessage":"Tu comentario o pregunta fue recibida, ¡gracias por ponerte en contacto!","technicalDescription":"Describe Tu Problema Aquí","technicalProblemLabel":"Estoy teniendo un problema técnico","ticketLabel":"Estoy buscando boletos para un Show de NBC","ticketLink":"Has clic aquí para información del boleto","topicLabel":"Selecciona un Tema","troubleLoggingInLabel":"Tengo problemas para iniciar sesión con mi Proveedor de TV","videoIssuesLabel":"Tengo problemas para ver episodios o contenido destacado.","votingLabel":"Tengo problemas para votar"},"creditDetailspage":{"backTo":"Regresar a"},"dls":{"tuneInLive":"EN VIVO AHORA","tuneInUpcoming":"MÍRALO EN VIVO"},"episodes":{"moreLoaded":"{items} episodios más cargados"},"errors":{"alpha":"Este campo no puede contener números.","alphaNumeric":"Este campo sólo puede contener letras y números.","date":"Por favor ingrese un fecha válida","general":"Ha ocurrido un error.","mail":"Por favor ingresa un correo electrónico válido.","matchingMail":"Por favor agrega un correo electrónico que coincida.","message":"Escribe tu mensaje","numeric":"Este campo sólo puede contener números.","phone":"Por favor ingrese un número de teléfono válido.","required":"Este campo es requerido.","screenMessage":"Lo sentimos, tuvimos un problema.{tag}Inténtalo de nuevo.","success":"Listo para enviar","zipcode":"Por favor ingrese un código postal válido."},"forkScreen":{"authNoCreditsOverlayTitle":"Lo sentimos, pero no tienes créditos.","idmTitle":"Ver ahora con una cuenta de NBCUniversal","mvpdTitle":"Vincula a tu proveedor de TV para desbloquear todo el contenido","noAuthEpisodeOverlayTitle":"Puedes ver éste episodio","noAuthMovieOverlayTitle":"Puedes ver ésta película","noKeyContent":"Todavía puedes ver contenido sin el ícono de la llave","otherWays":"Otras formas de ver contenido","peacockButtonExplore":"Ver en Peacock","peacockButtonSignUp":"Regístrate para Peacock","peacockSubtitleOne":"Mira más de 40,000 horas de películas exitosas, programas de TV y más.","peacockSubtitleTwo":"Disfruta de más de 50 canales siempre activos.","proTip":"Consejo de Profesionales","proTipNewContent":"La mayoría de episodes se desbloquean una semana después de salir al aire.","tempPassHeader":"Continue watching with an NBCUniversal Profile","tempPassTitle":"Su avance gratis de Deportes en Vivo ha concluido.","title":"¿Cómo te gustaría empezar a ver?"},"gauges":{"letter":"Contiene una letra","letterAnnounceError":"Debe contener una letra","max":"Menos de 257 caracteres","maxAnnounceError":"Debe contener menos de 257 caracteres","min":"Mínimo 10 caracteres","minAnnounce":"Contiene mínimo 10 caracteres","minAnnounceError":"Debe contener mínimo 10 caracteres","noCharacters":"No debe incluir <>&","noEmail":"No puede incluir el correo electrónico","noPassword":"No puede incluir \\"contraseña\\"","number":"Contiene un número","numberAnnounceError":"Debe contener un número"},"general":{"and":"y","back":"Regresar","backTo":"Regresar a","backToHome":"Regresar a la página principal de NBC.com","birthYear":"Año de nacimiento","cancelButton":"Cancelar","charactersRemaining":"Caracteres Restantes: ","checkBoxes":"Casillas","close":"Cerrar","confirmEmail":"Confirmar Correo Electrónico","confirmPassword":"Por Favor Confirma Tu Contraseña","contactSupport":"Contactar a Soporte Al Cliente","contactUs":"Contáctanos","continue":"Continuar","createProfile":"Crear Perfil","credits":"créditos","edit":"Editar","email":"Email","faq":"para consultar las preguntas frecuentes.","female":"Femenino","forename":"Nombre","forgotPassword":"¿Olvidaste tu contraseña?","free":"gratis","fullList":"lista completa","gender":"Género","helpCenter":"Centro de Ayuda","here":"aquí","heroBridgeTitle":"¡Tu Proveedor de TV ha sido enlazado!","heroReadyTitle":"¿Listo para comenzar a descargar contenido?","heroSuccessTitle":"¡Felicitaciones!<br/>Estás listo para descargar contenido.","hintCharacters":"({rule} caracteres)","linkProvider":"Enlazar Proveedor de TV","live":"En Vivo","logIn":"Iniciar Sesión","mainContent":"Contenido Principal","male":"Masculino","man":"Hombre","nbcSupport":"Soporte de NBC","nbcuprofile":"Cuenta de NBCUniversal","needHelp":"¿Necesitas Ayuda?","noThanks":"No, gracias","noneEntered":"Nada Ingresado","noneOfTheAbove":"Ninguno De Los Anteriores","notSellPersonalInfo":"Tus opciones de privacidad","or":"o","other":"Otro","password":"Contraseña","passwordHide":"Ocultar contraseña","passwordShow":"Mostrar contraseña","phoneNumber":"Número Telefónico","preferNotToDisclose":"Prefiero No Revelar","preferNotToSay":"Prefiero No Decirlo","presentedBy":"Presentado por","privacyPolicy":"La Política de Privacidad","required":"Requerido","resetHere":"Restablézcala aquí","saveButton":"Guardar","saveChangesButton":"Guardar Cambios","signIn":"Iniciar sesión","signUp":"Registrarse","signUpFree":"Regístrate Gratis","skip":"SALTAR","slideControlPause":"Detener avance autómatico de diapositivas","slideControlPlay":"Reproducir avance autómatico de diapositivas","slideNext":"Ir a la siguiente diapositiva","slidePrevious":"Ir a la diapositiva anterior","strong":"Fuerte","submit":"Enviar","success":"¡Éxito!","surname":"Apellido","termsOfService":"Términos de Servicio","termsOfUse":"Términos de Uso","theFemenine":"la","theMasculine":"el","uhoh":"Oh oh.","videoViewingPolicy":"La Política de Visualización de Video","visit":"Visita","visitHelpCenter":"Visita el Centro de Ayuda.","weak":"Débil","website":"sitio","welcomeSubtitle":"Bienvenido a la familia NBCUniversal.","woman":"Mujer","yes":"SÍ","zipCode":"Código Postal"},"identityForms":{"accountError":"No pudimos crear tu cuenta, por favor intenta de nuevo más tarde.","accountExists":"Una cuenta ya fue creada utilizando este correo. Por favor, inicie sesion.","accountExistsSignIn":"La Cuenta ya existe. <a href=\\"/sign-in\\">Inicia Sesión</a> o <a href=\\"/request-password\\">restatablece tu contraseña</a>.","accountExistsVendor":"No pudimos registrarte o iniciar sesión con tu cuenta de {vendor} porque ya existe una cuenta con este correo electrónico.","accountIdExistsVendor":"Este {vendor} ya está en uso con un correo electrónico diferente. Por favor intente otro método de registrarse.","birthYearRequired":"Seleccione un año de nacimiento válido.","emailRequired":"Por favor, introduce una dirección de correo electrónico válida.","emailVerifyError":"No podimos verificar tu correo electrónico. Por favor inténtalo de nuevo.","emailVerifyServiceError":"Estamos teniendo dificultades técnicas. Inténtalo de nuevo.","errorInForm":"Hay 1 error en el formulario:","errorInPage":"Hay un error en esta página:","errorsInForm":"Hay {totalErrors} errores en el formulario:","errorsInPage":"Hay {totalErrors} errores en esta página:","forenameInvalid":"El nombre no puede contener caracteres especiales.","forenameNameLength":"El nombre debe tener menos de 50 caracteres.","forenameRequired":"Por favor introduce un nombre válido.","genderRequired":"Este campo es requerido.","idmError":"No pudimos autenticarte, inténtalo de nuevo más tarde.","informationText":"Los anuncios hacen posible que nuestros servicios de transmisión sean gratuitos. Nuestro objetivo es ofrecerle anuncios que sean relevantes para usted. Todos los detalles y datos personales se utilizarán de acuerdo con nuestra","informationTitle":"¿Por qué pedimos esta información?","invalidAlpha":"Este campo no puede incluir números o caracteres especiales.","invalidAlphaNumeric":"Este campo no puede incluir números o caracteres especiales.","invalidDate":"Por favor introduce una fecha válida.","invalidEmail":"Por favor introduce una dirección de correo electrónico válida.","invalidEmailPassword":"Correo electrónico o contraseña incorrectos. <br/> Por favor intenta de nuevo.","invalidNumeric":"Este campo solo puede incluir números.","invalidPassword":"La contraseña no coincide con nuestros registros. Inténtalo de nuevo.","invalidPhoneNumber":"Por favor ingrese un número de teléfono válido.","invalidRequired":"Este campo es requerido.","invalidZipCode":"El código postal debe contener caracteres numéricos.","passwordLength":"Por favor asegúrese de que su contraseña tenga entre 5-50 caracteres.","passwordRequired":"Por favor ingrese una contraseña válida.","passwordStrongHint":"Debes usar una contraseña fuerte","peacockTerms":"Debes aceptar los términos para registrarte en Peacock.","surnameInvalid":"El apellido no puede contener caracteres especiales.","surnameNameLength":"El apellido debe tener menos de 50 caracteres.","surnameRequired":"Por favor ingrese un apellido válido.","tooManyLoginAttempts":"Has realizado seis intentos fallidos para iniciar sesión en un lapso de tres minutos. Tu cuenta ha sido temporalmente bloqueada por un minuto.","vendorError":"No pudimos registrarte o iniciar sesión con tu cuenta de {vendor} en este momento. Por favor intenta de nuevo más tarde.","zipCodeError":"El código postal debe contener caracteres numéricos.","zipCodeLength":"El código postal debe tener 5 caracteres.","zipCodeRequired":"Por favor ingrese un código postal válido."},"liveCallouts":{"watchOnApp":"Míralo en la aplicación de {brand}"},"livePage":{"blackoutError":"Lo sentimos, this program is unavailable in your area due to blackout restrictions.","buttonGoToShow":"Ir al Show","buttonPlayBeginning":"Reproducir Desde Inicio","buttonPlayNextEpisode":"Reproducir Siguiente Episodio","channels":"Canales","discontinuedAccess":"Lo sentimos, tu proveedor de TV ha suspendido el acceso al video de NBC en este dispositivo.","dropdownEmpty":"No results found. Please filter by an available sport.","emptySectionSubtitle":"See full schedule.","emptySectionSubtitleOlympics":"See full schedule.","emptySectionSubtitleSports":"Browse for other LIVE sports.","emptySectionTitle":"No content currently available.","emptySectionTitleOlympics":"No content currently available.","emptySectionTitleSports":"No events scheduled for today.","fallbackAuthZErrorDescription":"Lo sentimos. Tu proveedor de TV no te autorizó a ver la transmisión EN VIVO.","fallbackAuthZErrorTitle":"No Autorizado","fullScheduleButton":"Full Schedule","generalError":"Lo siento, algo salió mal","generalStreamError":"Lo siento, algo salió mal.","inactivityMessage":"¿Sigues viendo?","loadButton":"Load Local Listings","loadTitleText":"Please load local listings to see available LIVE content.","locationUnavailable":"{brand} En Vivo no está disponible en su ubicación actual.","notAuthorized":"No Autorizado","olympics":"Juegos Olímpicos","parentalControlDescription":"La configuración actual del Control Parental no te permite ver este contenido. Visita el sitio de tu Proveedor de TV para cambiar la configuración.","parentalControlTitle":"Los controles parentales han bloqueado este contenido.","retransEntitlementError":"Sorry. Your TV provider has discontinued access to NBC content on this device.","showAllSportsButton":"Show All Sports","sports":"Deportes"},"mvpdBridgeScreenPage":{"title":"Obtén aún más Contenido"},"mvpdBridgeScreenPrompt":{"linkTvProvider":"Enlaza a tu Proveedor de TV","promptMessage":"¿Deseas entrar con tu proveedor de cable o TV satelital?"},"mvpdBridgeScreenSignUpPrompt":{"continueButton":"Seguir Viendo","creditsDescription":"Has recibido <strong>3 créditos gratis</strong> para ver contenido bloqueado.","linkDescription":"Enlaza tu proveedor de TV para desbloquear todo el contenido","mainButton":"Comienza a ver","secondaryButton":"Enlaza el Proveedor de TV a {brand}"},"mvpdDialog":{"featuredDescription":"Selecciona tu proveedor de TV a continuación para contenido ilimitado de {brand}.","fullListDescription":"O selecciona de una lista de proveedores.","generalError":"Lo siento, algo salió mal","genericDescription":"Elije tu proveedor para contenido ilimitado.","helpDescription":"¿Necesitas ayuda para Enlazar a tu proveedor de TV?","listDescription":"¿No encuentras tu proveedor de TV?","searchDescription":"Busque a continuación o seleccione de la","searchProvider":"Busque un proveedor.","title":"Enlaza a tu Proveedor","twcMessage":"* Para usuarions de TWC|Spectrum y Brighthouse|Spectrum - use el botón del proveedor para enlazar la cuenta.","verifyAccount":"Verificar Cuenta"},"mvpdModal":{"modalHeader":"Es <span>{provider}</span> tu Proveedor de TV?"},"mvpdPeacockPicker":{"mvpdBlockButton":"Enlaza a tu Proveedor","mvpdBlockTitle":"Vincula a tu proveedor de TV para desbloquear todo el contenido","peacockBlockButton":"Continuar en Peacock","peacockBlockTitle":"Transmite lo mejor de deportes EN VIVO en Peacock","subtitle":"Disfruta de una nueva versión gratuita cada semana.","title":"Su avance gratis de Deportes en Vivo ha concluido."},"mvpdPredictive":{"noResults":"No se encontraron resultados.","try":"Intente con la","typeProvider":"Escribe el proveedor a buscar"},"myAccountPage":{"creditsLeftMessage1":"Tienes","creditsLeftMessage2":"restantes para ver contenido bloqueado.","emailAlreadyExists":"Este correo electrónico ya está asociado con otra cuenta.","emailNoUpdate":"El correo electrónico no puede actualizarse si has iniciado sesión con tus cuentas de Facebook, Apple o Google.","formTitle":"Información Personal","pageTitle":"Mi Cuenta","providerLinkMessage":"entra con tu Proveedor de TV","toggleAriaLabel":"Editar Información Personal","unauthenticatedMessage":"Para ver contenido ilimitado,"},"navigation":{"app":"App","home":"Inicio","live":"En Vivo","networks":"Canales","shop":"Tienda","singleMovies":"Películas","singleShows":"Shows","skipToContent":"Saltar al Contenido"},"onboardingConfirmation":{"buttonBack":"Back to home","buttonMain":"Create Profile","description":"Your favorites have been saved! Discover new content based on your favorites on the homepage.","descriptionAnonymous":"To save your favorites across devices and brands, create an NBCUniversal profile.","header":"You\'re All Set!"},"onboardingModal":{"buttonCancel":"Later","buttonMain":"Customize","close":"Close","mainText":"Customize your experience by choosing your favorites."},"onboardingPage":{"next":"Next","skip":"Skip","update":"Update"},"onboardingTooltip":{"message":"Customize your experience here at any time!","messageAnonymous":"Sign Up or Sign In to customize your experience at any time!"},"player":{"ahead10":"Avanzar 10 segundos","back10":"Retroceder 10 segundos","buffering":"Cargando","cc":"Menú de Audio y Subtítulos","errorDescription":"If the problem persists, please contact us and send us a note.","errorTitle":"Sorry! We\'re having some trouble.","fullscreen":"Pantalla Completa","fullscreenexit":"Salir de Pantalla Completa","keyboard":"Atajos de teclado","loading":"Cargando","mainButtonPause":"Pausar","mainButtonPlay":"Reproducir","mute":"Silenciar","progress":"Progreso de la reproducción","skipIntro":"Saltar Intro","skipRecap":"Saltar Resumen","skipTeaser":"Saltar Avances","unmute":"Restablecer sonido","vodConcurrencyError":"Estás transmitiendo contenido de NBCUniversal simultáneamente en demasiados dispositivos. Para continuar, deja de transmitir en otro dispositivo.","volume":"Volumen"},"playerClosedCaptionOptions":{"audioTitle":"Audio","captionsTitle":"Subtítulos","en":"Inglés (English)","en-adAudio":"Inglés (DA)","enAudio":"Inglés","eng-adAudio":"Inglés (DA)","engAudio":"Inglés","es":"Español","esAudio":"Español","main":"Principal","mainAudio":"Principal","none":"Ninguno","on":"encendido","settings":"Configuraciones","settingsAriaLabel":"Configuraciones","spaAudio":"Español","und":"Alternativo"},"playerCountdown":{"ad":"Anuncio","of":"de","seconds":"segundos"},"playerKeyboardShortcuts":{"ahead10":"Adelantar 10 Segundos","ahead5":"Adelantar 5 Segundos","back10":"Retroceder 10 Segundos","back5":"Retroceder 5 Segundos","cc":"Activar/Desactivar subtítulos","ccDown":"Bajar tamaño de subtítulos","ccPreset":"Ciclar entre subtítulos preestablecidos","ccUp":"Aumentar tamaño de subtítulos","down":"Bajar Volumen","end":"Saltar al final","exitFullscreen":"Salir de la Pantalla Completa","fullscreen":"Pantalla Completa","keyboard":"Mostrar Controles de Teclado","mute":"Silenciar","playPause":"Reproducir/Pausar","restart":"Reiniciar","up":"Subir Volumen"},"playerPreferences":{"apply":"Aplicar","arialBlackOnWhite-description":"Fuente Arial negra en fondo blanco","arialWhiteOnBlack-description":"Fuente Arial blanca en fondo negro","backgroundHeader":"Color de fondo","backgroundOpacity":"Opacidad de fondo","black":"negro","blue":"azul","casual":"Casual","colorHeader":"Color de fuente","cursive":"Cursivo","decrease":"Reducir","default":"Predeterminado","depressed":"Deprimido","description":"Personalizar estilo de fuente, color y más","edgeColor":"Color de marco","edgeOpacity":"Opacidad de marco","edgeStyle":"Estilo de marco","fontFamilyHeader":"Estilo de fuente","fontOpacity":"Opacidad de fuente","fontSize":"Tamaño de fuente","green":"verde","header":"Opciones","increase":"Incrementar","info":"Más información","infoArialabel":"Más información acerca de los subtítulos","large":"Grande","lucidaBlackOnYellow-description":"Fuente Lucida negra en fondo amarillo","medium":"Mediano","monospacedSansSerif":"Sans Serif Monoespaciado","monospacedSerif":"Serif Monoespaciado","preset":"Pre-establecidos","proportionalSansSerif":"Sans Serif Proporcional ","proportionalSerif":"Serif Proporcional ","purple":"púrpura","raised":"Elevado","red":"rojo","reset":"Reiniciar","sample":"Esto es un ejemplo","shadow":"Sombra","small":"Pequeño","smallCapitals":"Versalitas","tahomaWhiteOnBlue-description":"Fuente Tahoma blanca en fondo azul","teal":"verde azulado","textShadowHeader":"Efectos","timesWhiteOnBlack-description":"Fuente Times New Roman blanca en fondo negro","uniform":"Uniforme","verdanaYellowOnBlue-description":"Fuente Verdana amarilla en fondo azul","white":"blanco","windowColor":"Color de ventana","windowOpacity":"Opacidad de ventana","yellow":"amarillo"},"playerTempPass":{"button":"Enlaza a tu proveedor","text":"El Avance Gratis Expira En"},"requestPasswordPage":{"checkYourEmailDescription":"Si tu cuenta está asociada con ese correo electrónico, recibirás un enlace para restablecer tu contraseña.","checkYourEmailSubtitle":"Por favor revisa tu correo electrónico.","checkYourEmailTitle":"Revisa tu correo electrónico","instructions":"Ingresa tu dirección de correo electrónico y te enviaremos instrucciones sobre cómo crear una nueva contraseña.","noEmailReceived":"¿No has recibido el correo electrónico?","noRememberEmail":"¿No recuerdas qué dirección de correo electrónico utilizaste?","pageTitle":"Solicita una nueva contraseña","title":"¿Necesitas una nueva contraseña?"},"resetPasswordPage":{"back":"VOLVER AL INICIO DE SESIÓN","error1":"Ha ocurrido un error. Para iniciar sessión has click ","error2":". Para restablecer tu contraseña has click ","errorHere":"aquí","hint":"({min}-{max} caracteres)","pageTitle":"Restablecer contraseña","success":"Tu contraseña ha sido restablecida con éxito.","successTitle":"¡Éxito!","title":"Crea tu nueva contraseña"},"resetPasswordPageSuccess":{"pageTitle":"Crea tu nueva contraseña | ¡Éxito!","text":"Tu contraseña ha sido restablecida y ahora has iniciado tu sesión.","title":"¡Éxito!"},"signInUp":{"createProfileTitle":"Crea tu Perfil NBCUniversal","facebookNotSupported":"Sorry, Facebook login is no longer supported. Please create a new NBCUniversal profile.","finishText":"Terminar","logInText":"Iniciar sesión con el correo electrónico","logInTitle":"Iniciar Sesión con tu cuenta de NBCUniversal","profileSignUp":"Crea tu Perfil con Email","signInApple":"Continuar con Apple","signInFacebook":"Continuar con Facebook","signInGoogle":"Continuar con Google","signInNoAccount":"¿No tienes una cuenta?","signInText":"Iniciar sesión con el correo electrónico","signUpFacebookError":"No pudimos crear tu cuenta. Por favor intente otro método de registrarse.","signUpFavorite":"Marca como favorito y sigue viendo programas en todos tus dispositivos.","signUpGatedFast":"Sign up for <strong>instant access</strong> to the latest content.","signUpIntro3":"Mantente actualizado con tus shows favoritos.","signUpLockedMessage":"Obtén instantáneamente <strong>3 créditos gratis</strong> para ver episodios bloqueados.","signUpNewsletter":"Entiendo que NBCUniversal puede enviarme las últimas noticias, promociones y más.","signUpText":"Regístrate con correo electrónico","signUpTitle":"Regístrate para obtener tu cuenta de NBCUniversal","signUpUnlock":"Desbloquea contenido {brand} con una Cuenta NBCUniversal","signUpVote":"Vota durante tus programas favoritos.","signUpWithAccount":"¿Ya tienes un perfil de NBCUniversal?","successMessage":"Ahora has iniciado tu sesión con tu cuenta de NBCUniversal."},"signUpPeacock":{"error":"Ha ocurrido un error. Inténtalo de nuevo.","signUpSkip":"OMITIR","signUpSubtitleEmail":"Accede a nuestro servicio nuevo de transmisión GRATIS, utilizando tu correo electrónico.","signUpSubtitleEmailVar1":"Accede a nuestro servicio nuevo de transmisión GRATIS, utilizando tu correo electrónico.","signUpSubtitleEmailVar2":"Accede a nuestro servicio nuevo de transmisión GRATIS, utilizando tu correo electrónico.","signUpSubtitleEmailVar3":"Accede a nuestro servicio nuevo de transmisión GRATIS, utilizando tu correo electrónico.","signUpSubtitleVendor":"Accede a nuestro servicio nuevo de transmisión GRATIS, utilizando tu correo electrónico. Solamente crea una contraseña.","signUpTitle":"Agregar GRATIS","signUpTitleVar1":"Agregar GRATIS","signUpTitleVar2":"Agregar GRATIS","signUpTitleVar3":"Agregar GRATIS"},"signUpPeacockFooter":{"link":"Ir a Peacock","mainText":"Inicia sesión en Peacock con el mismo correo electrónico y contraseña que utilizaste para tu perfil de NBCUniversal."},"tempPassEntrySuccessScreen":{"header":"Desbloquee contenido de NBC con un perfil de NBCUniversal","tempPassEntryProp1":"Obtenga al <strong>instante {time} minutos más</strong> de su avance gratuito.","tempPassEntryProp2":"Reciba un avance gratuito de <strong>{time} minutos cada semana.</strong>","tempPassEntryProp3":"Obtenga <strong>instantáneamente 3 créditos gratis</strong> para ver contenido de entretenimiento bloqueado.","tempPassSuccessProp1":"Has recibido <strong>{time} minutos más</strong> de tu avance gratuito.","tempPassSuccessProp2":"Recibirás un avance gratis de <strong>{time} minutos cada semana.</strong>","tempPassSuccessProp3":"Ha recibido <strong>3 créditos gratis</strong> para ver contenido de entretenimiento bloqueado."},"tileBrandCategory":{"selected":"Selected","unSelected":"Unselected"},"tileSeriesFavorite":{"favorite":"added to Favorites","unFavorite":"removed from Favorites"},"unsubscribePage":{"errorMessage":"Algo salió mal con tu solicitud de cancelación de suscripción, pero estamos listos para ayudarte. Envía un ticket en {helpContent} con el Tipo de problema establecido en \\"Tengo problemas con mi cuenta\\" > \\"Quiero cancelar la suscripción de correos electrónicos\\".<br/><br/>Procesaremos tu solicitud de cancelación de la suscripción dentro de la próxima semana.","manageTextMenu":"Administra tus preferencias de correo electrónico","pageTitle":"Preferencias de Correo Electrónico","statusMessage":"Has cancelado tu suscripciones de","successMessage":"Puedes administrar otras suscripciones de correo electrónico en el","successMessage2":"de {brand}","successMessageAlt":"Puedes administrar otras suscripciones de correo electrónico de {brand}","unsubscribeAllMessage":"Todos los correos electrónicos de la aplicación de {brand}","unsubscribeAllTextMenu":"Cancelar suscripción de todos los correos electrónicos de {brand}"},"vendorLoginPage":{"genericText":"Completa tu Perfil","mainText":"Estás creando un perfil de NBCUniversal usando","newsletter":"Entiendo que NBCUniversal puede enviarme las últimas noticias, promociones y más.","oneTapTitle":"To continue, you will need to create an NBCUniversal Profile.","signInTitle":"You\'re signing in to your NBCUniversal Profile using:","signUpTitle":"Completa tu Perfil con {vendorUpper}"},"videoEndCard":{"dismiss":"Dismiss"},"videoOverlay":{"geoRestrictionError":"This video is not available in your location."},"videoPlayerOverlays":{"live":"En Vivo","olympicsConcludedTitle":"Este video ha concluído.","streamConcludedCta":"Ver lista completa","streamConcludedSubtitle":"Busca la lista completa abajo.","streamConcludedTitle":"Esta transmisión de video ha concluído.","videoOnApp":"Vídeo disponible en la aplicación.","watchOnApp":"Míralo en la aplicación de {brand}"}}');
;// CONCATENATED MODULE: ./utils/getTranslatedString.js





/**
 * Replaces token placeholders within text.
 *
 * @param {string} text
 *   A text string, containing placeholders such as {foo} or {bar}.
 * @param {object} tokens
 *   Tokens to apply to the given text. The key is set to the placeholder name
 *   and the value is what will be injected in place.
 *
 * @return {string}
 *   The given string with replaced tokens.
 */
function replaceTokens(text, tokens) {
  return text.replace(/{([^{}]*)}/g, (match, key) => {
    const replaced = tokens[key];
    return typeof replaced === 'string' || typeof replaced === 'number' ? replaced : null;
  });
}

/**
 * Returns the localized string for a given key.
 *
 * @param {string} language
 *   The users language, "en" or "es".
 * @param {string} key
 *   Key path to the string in the JSON file, use dot notation for nested values.
 * @param {object} tokens
 *   Optional, an object of tokens to apply to the given text. Key is the token
 *   name, value is the string to inject.
 *
 * @return {string | null}
 *   The users language, "en" or "es".
 */

function getTranslatedString(language, key, tokens) {
  if (!key) return null;
  const keys = key.split('.');
  const text = language === 'es' ? get_default()(es_namespaceObject, keys) : get_default()(en_namespaceObject, keys);
  return tokens ? replaceTokens(text, tokens) : text;
}

/***/ }),

/***/ 9730:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _lib_dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57979);

/**
 * Get Video Badge Label
 *
 * @param {date} expiration Expiration date of video.
 * @param {string} episodeNumber Episode Number of video.
 * @param {date} available Available date of video.
 * @param {string} showType Type of the show related to the video.
 * @return {string}
 *   Label badge assigned to the video.
 */
function getVideoBadge(expiration, episodeNumber, available) {
  let showType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
  const now = (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)();
  if (episodeNumber === '1' && now.isAfter((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(available)) && now.isBefore((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(available).add(14, 'd'))) {
    return 'PREMIERE';
  }
  if (showType === 'Late Night') {
    if (now.isAfter((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(available)) && now.isBefore((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(available).add(1, 'd'))) {
      // For Late Night shows, the NEW badge will only be available for those within 24 hours of the current date
      // https://nbcdigital.atlassian.net/browse/NBCRESP-2879
      return 'NEW';
    }
  } else if (now.isAfter((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(available)) && now.isBefore((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(available).add(7, 'd'))) {
    return 'NEW';
  }
  if (now.isBefore((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(expiration)) && now.isAfter((0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(expiration).subtract(7, 'd'))) {
    return 'EXPIRING';
  }
  return '';
}
/* harmony default export */ __webpack_exports__.Z = (getVideoBadge);

/***/ }),

/***/ 68206:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _programmingTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20057);
/* harmony import */ var _getShowPath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(98090);


/**
 * Get pathname from video type
 *
 * @param {string} contentType Video content type, ex Movie, Clip etc.
 * @param {string} pathname Pathname to evaluate.
 * @return {string}
 *   Pathname from video type
 */
function getVideoPathname(contentType, pathname) {
  if ((0,_programmingTypes__WEBPACK_IMPORTED_MODULE_0__/* .isMovieType */ .rr)(contentType)) {
    return pathname;
  }
  return (0,_getShowPath__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(pathname);
}
/* harmony default export */ __webpack_exports__.Z = (getVideoPathname);

/***/ }),

/***/ 395:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ hasLocalStorage; }
/* harmony export */ });
/**
 * Some Browsers may disable local storage
 * @return {Boolean} True if Browser can use localStorage.
 */
let didTest = false;
let testResult = false;
function hasLocalStorage() {
  if (didTest) {
    // no need to perform this test more than once
    return testResult;
  }
  try {
    localStorage.setItem('test', 'test');
    localStorage.removeItem('test');
    testResult = true;
  } catch (e) {
    testResult = false;
  }
  didTest = true;
  return testResult;
}

/***/ }),

/***/ 47475:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ hasSessionStorage; }
/* harmony export */ });
/**
 * Some Browsers may disable session storage
 * @return {Boolean} True if Browser can use sessionStorage.
 */
function hasSessionStorage() {
  try {
    sessionStorage.setItem('test', 'test');
    sessionStorage.removeItem('test');
    return true;
  } catch (e) {
    return false;
  }
}

/***/ }),

/***/ 26939:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ imageSrc; }
/* harmony export */ });
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(41609);
/* harmony import */ var lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2__);



const PREFIX = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('akamai.assetUrl');

/**
 * Convert nested image object to
 *   a string for srcSet with asset prefix.
 *
 * @param {object} image
 *   Images object from JSON API payload
 *   {type: image, {attributes: {path: '/a.jpg', width: 640, height: 100}
 *
 * @return {string}
 *   Representation of image for src
 *   'http://a.jpg'
 */

function imageSrc(image) {
  const result = image && !lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default()(image) && lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(image, 'attributes.path', '');
  return result ? "".concat(PREFIX).concat(result) : '';
}

/***/ }),

/***/ 15343:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ isClientSide; }
/* harmony export */ });
function isClientSide() {
  return typeof window !== 'undefined';
}

/***/ }),

/***/ 36849:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Jr: function() { return /* binding */ syncDayZero; },
/* harmony export */   LD: function() { return /* binding */ clearActiveUser; },
/* harmony export */   XM: function() { return /* binding */ isDayZero; },
/* harmony export */   ZP: function() { return /* binding */ isDayZeroUser; },
/* harmony export */   a5: function() { return /* binding */ checkStoredDayZero; }
/* harmony export */ });
/* unused harmony export saveActiveUser */
/* harmony import */ var _hasLocalStorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(395);
/* harmony import */ var _lib_identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62899);
/* harmony import */ var _isClientSide__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15343);



const LAST_ACTIVE_USER_KEY = 'lastActiveUser';

/**
 * Checks if an mParticle ID is valid for a real user or if it is a placeholder.
 * @param {String} mpId mParticle ID
 * @returns {boolean} If the mParticle ID is valid for a real user
 */
function isValidMpId(mpId) {
  if (!(0,_isClientSide__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)()) {
    // anything on the server is not a valid mParticle ID
    return false;
  }
  const parsedMpId = parseInt(mpId, 10);
  if (!mpId || Number.isNaN(parsedMpId) || Math.abs(parsedMpId) <= 1) {
    // not a populated mParticle ID if it is NaN or -1, 0, 1
    return false;
  }
  return true;
}

/**
 * Checks if an mParticle ID is Day Zero based on local storage.
 * @param {String} mpId mParticle ID
 * @returns {boolean} True if Day Zero
 */
function checkStoredDayZero(mpId) {
  if ((0,_lib_identity__WEBPACK_IMPORTED_MODULE_0__/* .hasSession */ .Hk)()) {
    // day zero is false if logged in
    return false;
  }
  if (!(0,_hasLocalStorage__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)()) {
    // day zero is true if there is no local storage
    return true;
  }
  if (!isValidMpId(mpId)) {
    // day zero is true if the mParticle ID is not valid for a real user
    return true;
  }

  // day zero is true if the local storage value is set for a different mParticle ID
  return localStorage.getItem(LAST_ACTIVE_USER_KEY) !== "".concat(mpId);
}

/**
 * Clears the stored active mParticle ID, which will set future checkStoredDayZero
 * responses to true (day zero).
 * @returns {void}
 */
function clearActiveUser() {
  if ((0,_hasLocalStorage__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)()) {
    localStorage.removeItem(LAST_ACTIVE_USER_KEY);
  }
}

/**
 * Sets the current mParticle ID as the active user, which will set future
 * checkStoredDayZero responses to false (not day zero).
 * @param {String} mpId mParticle ID
 * @returns {void}
 */
function saveActiveUser(mpId) {
  if (!(0,_hasLocalStorage__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)()) {
    return;
  }
  const lastActiveUser = localStorage.getItem(LAST_ACTIVE_USER_KEY);
  if (lastActiveUser === mpId) {
    // current user is already saved in local storage as the last active user
    // no need to do anything
    return;
  }

  // save the current user as the last active user
  localStorage.setItem(LAST_ACTIVE_USER_KEY, mpId);
}

/**
 * Syncs the day zero value to local storage.
 * @param {String} mpId The current mParticle ID
 * @param {boolean} newDayZeroState If the new Day Zero is true or false
 * @returns {void}
 */
function syncDayZero(mpId, newDayZeroState) {
  if (newDayZeroState) {
    // to go back to a day zero state means clearing the local storage
    clearActiveUser();
  } else {
    // to set day zero false, we need to save the current mParticle ID as the active user
    saveActiveUser(mpId);
  }
}

/**
 * Checks if the current user session qualifies as Day Zero for BFF.
 * @returns {boolean} True if day zero
 */
function isDayZero() {
  var _window$TheStore$getS, _window$TheStore, _window$TheStore$getS2, _state$client$bffMPar, _state$client, _state$client2;
  if (!(0,_isClientSide__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)()) {
    // day zero is true on the server
    return true;
  }
  if ((0,_lib_identity__WEBPACK_IMPORTED_MODULE_0__/* .hasSession */ .Hk)()) {
    // day zero is false if logged in
    return false;
  }
  const state = (_window$TheStore$getS = (_window$TheStore = window.TheStore) === null || _window$TheStore === void 0 ? void 0 : (_window$TheStore$getS2 = _window$TheStore.getState) === null || _window$TheStore$getS2 === void 0 ? void 0 : _window$TheStore$getS2.call(_window$TheStore)) !== null && _window$TheStore$getS !== void 0 ? _window$TheStore$getS : {};
  const mpId = (_state$client$bffMPar = (_state$client = state.client) === null || _state$client === void 0 ? void 0 : _state$client.bffMParticleId) !== null && _state$client$bffMPar !== void 0 ? _state$client$bffMPar : '-1';
  if (!isValidMpId(mpId)) {
    // day zero is true if
    return true;
  }

  // day zero is true if the Redux store is true
  const dayZeroValue = !!((_state$client2 = state.client) !== null && _state$client2 !== void 0 && _state$client2.isDayZero);
  if (!dayZeroValue) {
    saveActiveUser(mpId);
  }
  return dayZeroValue;
}

/**
 * Checks if a user is considered day zero (D0) for the purposes of tracking.
 *
 * @return {boolean}
 *   Returns true when the user is considered D0.
 */
function isDayZeroUser() {
  const firstVisitDate = (0,_hasLocalStorage__WEBPACK_IMPORTED_MODULE_2__/* ["default"] */ .Z)() && localStorage.getItem('firstVisitDate');
  return !!firstVisitDate && Date.now() < firstVisitDate + 24 * 60 * 60 * 1000;
}

/***/ }),

/***/ 45434:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
/**
 * Checks a given user agent string is an old version of internet explorer.
 * Currently defined as IE11 or below.
 *
 * @param {string} userAgent
 *   The user agent string to check.
 * @return {boolean}
 *   true if user is on IE11 or below.
 */
/* harmony default export */ __webpack_exports__.Z = (userAgent => userAgent.match(/MSIE/g) !== null || userAgent.match(/Trident.*rv:11\./) !== null || userAgent.match(/MSIE\s[678]/) !== null);

/***/ }),

/***/ 84022:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(84564);
/* harmony import */ var url_parse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url_parse__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74369);


const APP = config__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z.get('app');
const NBC = 'nbc';
const USANETWORK = 'usanetwork';
const isNonNbcLower = APP.domainName !== NBC && APP.domainName !== USANETWORK;
const domainName = APP.debug ? NBC : APP.domainName;
const onSiteDomain = new RegExp("".concat(isNonNbcLower ? '' : '\\.').concat(domainName, "\\.com$"));

/**
 * Checks if href is on nbc domain
 * @param {string} href the url to check. Can be a path or absolute
 * @param {string} onCustomfDomain Custom regular expresion to test
 * @return {boolean} true if hostname is not on nbc domain
 */
/* harmony default export */ __webpack_exports__.Z = (function (href) {
  let onCustomfDomain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  const hostname = url_parse__WEBPACK_IMPORTED_MODULE_0___default()(href).hostname;
  const onDomain = onCustomfDomain || onSiteDomain;
  return hostname && !onDomain.test(hostname);
});

/***/ }),

/***/ 2034:
/***/ (function(__unused_webpack_module, __webpack_exports__) {

"use strict";
const upcomingTypes = ['UpcomingLiveTile', 'UpcomingLiveSlide'];
const isUpcomingType = type => upcomingTypes.includes(type);
/* harmony default export */ __webpack_exports__.Z = (isUpcomingType);

/***/ }),

/***/ 33359:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ logRequests; }
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(238);
/* eslint no-console: 0 */

function logRequests() {
  if (axios__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.interceptors.genereticLogged) {
    return;
  }
  axios__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.interceptors.genereticLogged = true;
  const MAX = 2 ** 53 - 1;
  var i = 0;
  axios__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.interceptors.request.use(config => {
    config.start = Date.now();
    i += 1;
    config.id = i <= MAX ? i : 0;
    console.log("REQ#".concat(config.id), decodeURIComponent(config.url));
    return config;
  });
  axios__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.interceptors.response.use(res => {
    console.log("RES#".concat(res.config.id), "".concat(Math.round(Date.now() - res.config.start), "ms"), decodeURIComponent(res.config.url));
    return res;
  }, res => {
    console.log("RES#".concat(res.config.id), "".concat(Math.round(Date.now() - res.config.start), "ms"), "Error! ".concat(res.config.url), res.message);
    return Promise.reject(res);
  });
}

/***/ }),

/***/ 62324:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);

const normalizeTrials = function () {
  let episodeArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return episodeArray.reduce((trials, guid) => {
    trials[guid] = {
      hasTrial: true
    };
    return trials;
  }, {});
};

/**
 * Normalizes Account info response from IDM getUserInfo API call.
 *
 * @param {object} user
 *  An User object returned from the IDM.
 * @return {object}
 *  Normalized user object.
 */

/* harmony default export */ __webpack_exports__.Z = (user => ({
  id: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, '_id'),
  rev: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, '_rev', '1'),
  email: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'mail'),
  vendorId: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'vendorId'),
  forename: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'givenName'),
  surname: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'sn'),
  gender: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'gender'),
  dob: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'ageRange'),
  zipCode: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'serviceZip'),
  phoneNumber: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'telephoneNumber'),
  isPeacockUser: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'isPeacockUser'),
  idmPassword: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'idmPassword'),
  signInType: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'signInType'),
  birthYear: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'birthYear'),
  credits: lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'episodeCount', 0),
  trials: normalizeTrials(lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(user, 'episodeArray'))
}));

/***/ }),

/***/ 43576:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74369);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28583);
/* harmony import */ var lodash_assign__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_assign__WEBPACK_IMPORTED_MODULE_2__);
/* eslint-disable camelcase */



const MVPD_IMAGE_DOMAIN = config__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z.get('adobePass.imageDomain');

/**
 * Normalizes MVPD objects to be used across our app.
 *
 * @deprecated
 * This was added to ease the migration to newer API endpoints. Eventually, we
 * should stop normalizing and just use the object directly.
 *
 * @param {object} mvpd
 *  An MVPD object returned from the NBC API.
 * @param {object} errorMappings
 *  Global adobe error mapping, this is generally returned from the NBC API.
 * @return {object}
 *  Normalized MVPD object, e.g:
 *  {
 *    "title": "Comcast XFINITY",
 *    "mvpd_color": "http://mvpd-admin.nbcuni.com/sites/mvpdadmin/files/logos/Comcast_SSO/mvpd_Comcast_SSO_white.png",
 *    "mvpd_color_2x": "http://mvpd-admin.nbcuni.com/sites/mvpdadmin/files/logos/Comcast_SSO/mvpd_Comcast_SSO_white.png",
 *    "mvpd_logo": "http://mvpd-admin.nbcuni.com/sites/mvpdadmin/files/logos/Comcast_SSO/mvpd_Comcast_SSO_color_3.png",
 *    "mvpd_logo_2x": "http://mvpd-admin.nbcuni.com/sites/mvpdadmin/files/logos/Comcast_SSO/mvpd_Comcast_SSO_color_3.png",
 *    "mvpd_id": "Comcast_SSO",
 *    "mvpd_url": "http://xfinitytv.comcast.net/",
 *    "authorized_err": "",
 *    "order": 1,
 *    "errors": { ... },
 *  }
 */
/* harmony default export */ __webpack_exports__.Z = ((mvpd, errorMappings) => {
  const errors = lodash_assign__WEBPACK_IMPORTED_MODULE_2___default()(errorMappings, mvpd.adobePassErrorMappings);
  const authzErrorTitle = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(errors, 'User Not Authorized Error', {}).title;
  const authzErrorBody = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(errors, 'User Not Authorized Error', {}).body;
  return {
    title: mvpd.mvpd_display_name,
    mvpd_color: "".concat(MVPD_IMAGE_DOMAIN, "/").concat(mvpd.activationloggedInImage || mvpd.apploggedInImage),
    mvpd_color_2x: "".concat(MVPD_IMAGE_DOMAIN, "/").concat(mvpd.activationloggedInImage_2x || mvpd.apploggedInImage_2x),
    mvpd_logo: "".concat(MVPD_IMAGE_DOMAIN, "/").concat(mvpd.apppickerImage),
    mvpd_logo_2x: "".concat(MVPD_IMAGE_DOMAIN, "/").concat(mvpd.apppickerImage_2x),
    mvpd_id: mvpd.mvpd,
    mvpd_url: mvpd.mvpd_url,
    mvpd_hash: mvpd.advertisingKey,
    concurrencyFlow: mvpd.concurrencyFlow,
    authorized_err: authzErrorTitle ? "".concat(authzErrorTitle, "<br/><br/>").concat(authzErrorBody) : undefined,
    order: mvpd.tier,
    errors
  };
});

/***/ }),

/***/ 42037:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GW: function() { return /* binding */ setOnboardingStarted; },
/* harmony export */   IG: function() { return /* binding */ isOnboardingStarted; },
/* harmony export */   JZ: function() { return /* binding */ getGenres; },
/* harmony export */   QK: function() { return /* binding */ saveGenres; },
/* harmony export */   cX: function() { return /* binding */ isOnboardingModalStarted; },
/* harmony export */   hF: function() { return /* binding */ setOnboardingComplete; }
/* harmony export */ });
/* unused harmony export isOnboardingFlowComplete */
/* harmony import */ var cookies_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27360);
/* harmony import */ var cookies_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cookies_js__WEBPACK_IMPORTED_MODULE_0__);


/**
 * Set onboarding as complete.
 * @return {boolean}
 *   Onboarding complete.
 */

const setOnboardingComplete = mParticleId => {
  cookies_js__WEBPACK_IMPORTED_MODULE_0___default().set('onboardingComplete', true);
  cookies_js__WEBPACK_IMPORTED_MODULE_0___default().set('onboardingUser', mParticleId);
};

/**
 * Get Onboarding as complete.
 * @return {boolean}
 *   Onboarding complete.
 */

const isOnboardingFlowComplete = () => Cookies.get('onboardingComplete');

/**
 * Set Onboarding modal as started.
 * @return {boolean}
 *   Onboarding started.
 */

const isOnboardingModalStarted = () => cookies_js__WEBPACK_IMPORTED_MODULE_0___default().get('onboardingModalStarted');

/**
 * Save user genres selected.
 */

const saveGenres = function () {
  let genres = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return cookies_js__WEBPACK_IMPORTED_MODULE_0___default().set('onboardingGenres', genres);
};

/**
 * Get user genres selected.
 */

const getGenres = () => cookies_js__WEBPACK_IMPORTED_MODULE_0___default().get('onboardingGenres');

/**
 * Set onboarding experience as started.
 */

const setOnboardingStarted = () => cookies_js__WEBPACK_IMPORTED_MODULE_0___default().set('onboardingStarted', true);

/**
 * Get onboarding status.
 */

const isOnboardingStarted = () => cookies_js__WEBPACK_IMPORTED_MODULE_0___default().get('onboardingStarted');

/***/ }),

/***/ 20057:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $0: function() { return /* binding */ SLE; },
/* harmony export */   $u: function() { return /* binding */ FULL_EVENT_REPLAY_TYPE; },
/* harmony export */   AO: function() { return /* binding */ SHORT_FORM_VOD; },
/* harmony export */   JF: function() { return /* binding */ isPreview; },
/* harmony export */   NK: function() { return /* binding */ isClip; },
/* harmony export */   RZ: function() { return /* binding */ isSingleLiveEventType; },
/* harmony export */   SJ: function() { return /* binding */ isLFVODType; },
/* harmony export */   T: function() { return /* binding */ isSFVODType; },
/* harmony export */   TB: function() { return /* binding */ isVODType; },
/* harmony export */   Tl: function() { return /* binding */ SFVOD; },
/* harmony export */   Ui: function() { return /* binding */ isSFVODSport; },
/* harmony export */   WM: function() { return /* binding */ UPCOMING; },
/* harmony export */   ZP: function() { return /* binding */ getProgrammingType; },
/* harmony export */   g0: function() { return /* binding */ SINGLE_LIVE_EVENT; },
/* harmony export */   gO: function() { return /* binding */ isFullEpisodeType; },
/* harmony export */   hm: function() { return /* binding */ FER; },
/* harmony export */   oI: function() { return /* binding */ isStreamType; },
/* harmony export */   rl: function() { return /* binding */ FULL_EVENT_REPLAY; },
/* harmony export */   rr: function() { return /* binding */ isMovieType; },
/* harmony export */   t$: function() { return /* binding */ LINEAR; },
/* harmony export */   uG: function() { return /* binding */ EPISODE; },
/* harmony export */   uk: function() { return /* binding */ VOD; },
/* harmony export */   uv: function() { return /* binding */ FULL_EPISODE; },
/* harmony export */   vt: function() { return /* binding */ isFullEventReplayType; },
/* harmony export */   vu: function() { return /* binding */ CLIP; },
/* harmony export */   wI: function() { return /* binding */ LIVE; },
/* harmony export */   wR: function() { return /* binding */ MOVIE; },
/* harmony export */   zg: function() { return /* binding */ PLAYLIST; }
/* harmony export */ });
/* unused harmony exports CURRENT_PREVIEW, HIGHLIGHT, SNEAK_PEEK, WEB_EXCLUSIVE, EXCERPT, INTERVIEW, BEHIND_THE_SCENES, TRAILER, CLIPS, LONG_FORM_VOD */
const CLIP = 'clip';
const CURRENT_PREVIEW = 'current preview';
const EPISODE = 'episode';
const FER = 'fer';
const FULL_EPISODE = 'full episode';
const FULL_EVENT_REPLAY = 'full event replay';
const FULL_EVENT_REPLAY_TYPE = 'full-event-replay';
const HIGHLIGHT = 'highlight';
const LINEAR = 'linear';
const LIVE = 'live';
const MOVIE = 'movie';
const PLAYLIST = 'playlist';
const SFVOD = 'sfvod';
const SHORT_FORM_VOD = 'short-form vod';
const SINGLE_LIVE_EVENT = 'single live event';
const SLE = 'sle';
const SNEAK_PEEK = 'sneak peek';
const UPCOMING = 'upcoming';
const VOD = 'vod';
const WEB_EXCLUSIVE = 'web exclusive';
const EXCERPT = 'excerpt';
const INTERVIEW = 'interview';
const BEHIND_THE_SCENES = 'behind the scenes';
const TRAILER = 'trailer';
const CLIPS = [HIGHLIGHT, WEB_EXCLUSIVE, SNEAK_PEEK, EXCERPT, INTERVIEW, BEHIND_THE_SCENES, TRAILER];
const LONG_FORM_VOD = [EPISODE, FULL_EPISODE, MOVIE];
const types = {
  [FULL_EPISODE]: EPISODE,
  [FULL_EVENT_REPLAY]: FULL_EVENT_REPLAY_TYPE,
  [SHORT_FORM_VOD]: SFVOD,
  [MOVIE]: MOVIE,
  [CLIP]: CLIP,
  [UPCOMING]: UPCOMING,
  [SINGLE_LIVE_EVENT]: SINGLE_LIVE_EVENT
};
function isMovieType() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return (programmingType === null || programmingType === void 0 ? void 0 : programmingType.toLowerCase()) === MOVIE;
}
function isSingleLiveEventType() {
  var _programmingType$toLo, _programmingType$toLo2;
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return ((_programmingType$toLo = programmingType.toLowerCase) === null || _programmingType$toLo === void 0 ? void 0 : _programmingType$toLo.call(programmingType)) === SINGLE_LIVE_EVENT || ((_programmingType$toLo2 = programmingType.toLowerCase) === null || _programmingType$toLo2 === void 0 ? void 0 : _programmingType$toLo2.call(programmingType)) === SLE;
}
function isFullEventReplayType() {
  var _programmingType$toLo3, _programmingType$toLo4;
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return ((_programmingType$toLo3 = programmingType.toLowerCase) === null || _programmingType$toLo3 === void 0 ? void 0 : _programmingType$toLo3.call(programmingType)) === FULL_EVENT_REPLAY || ((_programmingType$toLo4 = programmingType.toLowerCase) === null || _programmingType$toLo4 === void 0 ? void 0 : _programmingType$toLo4.call(programmingType)) === FER;
}
function isStreamType() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return isSingleLiveEventType(programmingType) || isFullEventReplayType(programmingType);
}
function isFullEpisodeType() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return programmingType.toLowerCase() === FULL_EPISODE;
}
function isVODType() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return programmingType !== '' && !isStreamType(programmingType) && programmingType.toLowerCase() !== LINEAR && programmingType.toLowerCase() !== LIVE;
}
function isLFVODType() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return LONG_FORM_VOD.includes(programmingType === null || programmingType === void 0 ? void 0 : programmingType.toLowerCase());
}
function isSFVODSport() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return (programmingType === null || programmingType === void 0 ? void 0 : programmingType.toLowerCase()) === SHORT_FORM_VOD;
}
function isSFVODType() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return (programmingType === null || programmingType === void 0 ? void 0 : programmingType.toLowerCase()) === SHORT_FORM_VOD || isVODType(programmingType) && !isLFVODType(programmingType);
}
function isClip() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return CLIPS.includes(programmingType.toLowerCase());
}
function isPreview() {
  let programmingType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return programmingType.toLowerCase() === CURRENT_PREVIEW;
}
function getProgrammingType(type) {
  if (!type) return 'default';
  return types[type.toLowerCase()] || types[CLIP];
}

/***/ }),

/***/ 59409:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  ZP: function() { return /* binding */ recordPageView; },
  cx: function() { return /* binding */ isFirstPageView; },
  G0: function() { return /* binding */ recordMpPageView; },
  oB: function() { return /* binding */ skipPageView; }
});

// UNUSED EXPORTS: setFirstPageView

// EXTERNAL MODULE: ./webpack-alias/config.js + 1 modules
var config = __webpack_require__(74369);
// EXTERNAL MODULE: ./webpack-alias/park-logger.js
var park_logger = __webpack_require__(67788);
var park_logger_default = /*#__PURE__*/__webpack_require__.n(park_logger);
// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
// EXTERNAL MODULE: ./lib/analytics/mParticle.js + 4 modules
var mParticle = __webpack_require__(51054);
// EXTERNAL MODULE: ./lib/analytics/Omniture.js
var Omniture = __webpack_require__(31048);
// EXTERNAL MODULE: ./lib/analytics/comScore.js
var comScore = __webpack_require__(34284);
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__(76265);
;// CONCATENATED MODULE: ./lib/analytics/mps.js

/* global window, document, mps, gpt */
/* eslint-disable no-underscore-dangle */



let adBlockPromise = null;
const disableAbDetect = config/* default */.Z.get('MPS.disableAbDetect');
const adRx = /ad-([^ ]+)/;
const MPS = {};

/**
 * Update the queue to call function once mps has initialized
 *
 * @param {function} cb
 *   callback function to be called
 *
 * @return {void}
 */
function enqueCallback(cb) {
  mps._queue = mps._queue || {};
  mps._queue.gptloaded = mps._queue.gptloaded || [];
  mps._queue.gptloaded.push(cb.bind(null, mps));
}
MPS.enqueCallback = cb => enqueCallback(cb);

/**
 * Detect Ad Slots and fill them with MPS.
 *
 * @return {void}
 */
function insertAds() {
  const els = document.getElementsByClassName('mps-ad__content');
  for (let i = 0, l = els.length; i < l; i++) {
    const oldEl = els[i];
    const className = oldEl.className;
    const slot = className.match(adRx)[1];
    const newEl = document.createElement('div');
    newEl.className = className;
    try {
      delete gpt[mps.advars[slot]];
    } catch (e) {
      // If gpt does not exist, still replace the Ad.
    }
    oldEl.parentNode.replaceChild(newEl, oldEl);
    enqueCallback(mps => mps._append(newEl, mps.getAd(slot)));
  }
}

/**
 * Clear any ads with a specific slot
 * @param  {string} slot
 *   Name of the ad slot to clear
 * @return {void}
 */
MPS.clearAds = function clearAds(slot) {
  Array.from(document.getElementsByClassName("ad-".concat(slot))).forEach(el => {
    const childNodes = [...el.childNodes];
    childNodes.forEach(child => {
      el.removeChild(child);
    });
  });
};

/**
 * Determines if the user has an Ad Blocker enabled
 * Add callback to mps abdetect _queue.
 *
 * @returns {Promise} resolves once mps determines if an adblocker is enabled
 */
MPS.adblockCheck = function adblockCheck() {
  if (!adBlockPromise) {
    mps._queue = mps._queue || {};
    mps._queue.abdetect = mps._queue.abdetect || [];
    adBlockPromise = new Promise(resolve => {
      if (disableAbDetect) {
        resolve(false);
      } else {
        // --[ad block detect] Perform action after ad block is detected
        mps._queue.abdetect.push(abtype => {
          /* possible values for abtype: (false), filename, domain) */
          park_logger_default().log("* * * * * MPS Abdetect result is: ".concat(abtype, " * * * * *"));
          resolve(!!abtype);
        });
      }
    });
  }
  return adBlockPromise;
};

/**
 * Inject and fill a single Ad Slot with MPS.
 *
 * @param {DOMElement} el
 *   DOM element to inject ad into.
 * @param {string} slot
 *   Name of the ad slot to fill.
 * @return {void}
 */
MPS.insertAd = function insertAd(el, slot) {
  const newEl = document.createElement('div');
  newEl.className = "mps-ad__content ad-".concat(slot);
  try {
    delete gpt[mps.advars[slot]];
  } catch (e) {
    // If gpt does not exist, still replace the Ad.
  }
  el.appendChild(newEl);
  this.enqueCallback(mps => mps._append(newEl, mps.getAd(slot)));
};

/**
 * Update MPS with new data and insert ads.
 *
 * @param {object} mpscall
 *   config (sections, authors) of the current page
 * @param {bool} isFirstPageView
 *   True if this is the inital browser page view.
 *
 * @return {void}
 */
MPS.trackPage = function trackPage(mpscall, isFirstPageView) {
  if (isFirstPageView || typeof mps === 'undefined') {
    // stash previously existing Visitor object, since the MPS scripts will overwrite it
    window._originalVisitor = window.Visitor;
    const mpsScript = document.createElement('script');
    mpsScript.innerHTML = "\n      var mpsopts={host: \"mps.nbcuni.com\"};\n      var mpscall=".concat(JSON.stringify(mpscall), ";\n      var mps=mps||{};mps._ext=mps._ext||{};mps._adsheld=[];mps._queue=mps._queue||{};mps._queue.mpsloaded=mps._queue.mpsloaded||[];mps._queue.mpsinit=mps._queue.mpsinit||[];mps._queue.gptloaded=mps._queue.gptloaded||[];mps._queue.adload=mps._queue.adload||[];mps._queue.adclone=mps._queue.adclone||[];mps._queue.adview=mps._queue.adview||[];mps._queue.refreshads=mps._queue.refreshads||[];mps.__timer=Date.now();mps.__intcode=\"v2\";if(typeof mps.getAd!=\"function\")mps.getAd=function(adunit){if(typeof adunit!=\"string\")return false;var slotid=\"mps-getad-\"+adunit.replace(/W/g,\"\");if(!mps._ext||!mps._ext.loaded){mps._queue.gptloaded.push(function(){typeof mps._gptfirst==\"function\"&&mps._gptfirst(adunit,slotid);mps.insertAd(\"#\"+slotid,adunit)});mps._adsheld.push(adunit)}return'<div id=\"'+slotid+'\" class=\"mps-wrapper\" data-mps-fill-slot=\"'+adunit+'\"></div>'};(function(){head=document.head||document.getElementsByTagName(\"head\")[0],mpsload=document.createElement(\"script\");mpsload.src=\"//\"+mpsopts.host+\"/fetch/ext/load-\"+mpscall.site+\".js?nowrite=2\";mpsload.id=\"mps-load\";head.insertBefore(mpsload,head.firstChild)})();\n    ");
    document.body.appendChild(mpsScript);
    insertAds();
  } else {
    window.mpscall = mpscall;
    mps.makeRequest('more');
    this.enqueCallback(mps => mps._queue.mpsinit.push(insertAds));
  }
  if (mpscall.callback) {
    this.enqueCallback(() => {
      mpscall.callback(mpscall, isFirstPageView);
    });
  }
};
/* harmony default export */ var analytics_mps = (MPS);
// EXTERNAL MODULE: ./lib/analytics/mParticle_constants.js
var mParticle_constants = __webpack_require__(26566);
;// CONCATENATED MODULE: ./utils/getDeviceDimensions.js
const getDeviceDimensions = () => {
  var _window, _window2;
  if (typeof window === 'undefined') return null;
  return {
    screenWidth: ((_window = window) === null || _window === void 0 ? void 0 : _window.innerWidth) || 0,
    screenHeight: ((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.innerHeight) || 0
  };
};
const getBrowserDimensions = () => {
  var _window3, _window4;
  if (typeof window === 'undefined') return null;
  return {
    screenWidth: ((_window3 = window) === null || _window3 === void 0 ? void 0 : _window3.innerWidth) || 0,
    screenHeight: ((_window4 = window) === null || _window4 === void 0 ? void 0 : _window4.innerHeight) || 0
  };
};
;// CONCATENATED MODULE: ./utils/recordPageView.js









let firstPageView = true;
// Keys of services to skip in next page view.
let skipped = {};
const APP_NAME = config/* default */.Z.get('app.appName');
const omniture = new Omniture/* default */.Z();
const mpDefaultParams = {
  'Sweepstakes Name': 'None',
  'Registration Referrer': 'None',
  'Registration Source': 'None',
  'Video ID': 'None',
  Entitlement: 'None',
  'Video Type': 'None',
  'Episode Title': 'None',
  'Episode Number': 'None',
  'Video Duration': 'None',
  Category: 'None',
  'Profile Referrer': 'None',
  Genre: 'None',
  'Secondary Genre': 'None',
  'Has Trailer': 'None'
};

/**
 * Tracks Journey
 * @param {object} params
 *  - {string} params.pathname - URL sans hostname. Required for Branch calls.
 *
 * @return {void}
 */

const trackJourney = params => {
  const state = window.TheStore && window.TheStore.getState();
  if (state && state.client.userAgent.isMobile && !firstPageView && !!window.branch && !!params.pathname) {
    window.branch.closeJourney(() => {
      setTimeout(() => {
        const url = "".concat(window.location.origin).concat(params.pathname);
        window.branch.track('pageview', {}, {
          url
        });
      }, 1000);
    });
  }
};
/**
 * Set Page Title
 * @param {string} title - Name in the Title tag
 *
 * @return {void}
 */

const setTitle = title => {
  // Update the page title
  if (typeof title === 'string') {
    document.title = title;
  } else {
    park_logger_default().error('recordPageView: Set Title failed', new TypeError("Property 'title' is not a string."));
  }
};

/**
 * Fire Page Load mParticle event when the user navigates to a new "page".
 *
 * @param {object} attributes mParticle attributes.
 *
 * @return {void}
 */
async function recordMpPageView(attributes) {
  const dimensions = getBrowserDimensions();
  const attrs = {
    ...mpDefaultParams,
    ...attributes
  };
  if (dimensions) {
    const {
      screenHeight,
      screenWidth
    } = dimensions;
    attrs[mParticle_constants.SCREEN_HEIGHT] = screenHeight.toString();
    attrs[mParticle_constants.SCREEN_WIDTH] = screenWidth.toString();
  }
  await mParticle/* default */.ZP.trackEvent({
    type: mParticle_constants.NAVIGATION,
    name: mParticle_constants.PAGE_LOAD,
    attributes: attrs
  });

  // force an immediate bulk upload of data to mParticle as soon as we register a page view
  mParticle/* default */.ZP.upload();

  // emit a global event for Iterable to pick up to know that a pageview has occurred
  const pageViewEvent = new Event(mParticle_constants.GENERETIC_PAGE_VIEW);
  document.dispatchEvent(pageViewEvent);
}

/**
 * Fire this method, when the user navigates to a new "page".
 *
 * - Update title tag.
 * - Track the view in analytics.
 * - Refresh advertising.
 *
 * @param {object} params - bucket of additional parameters.
 *   - {string} params.title - Name in the Title tag
 *   - {string} params.pathname - URL sans hostname. Required for Branch calls.
 *   - {string} params.mParticle - Attributes for mParticle
 *   - {object} params.omniture - Options for Omniture
 *   - {string} params.omniture.name - Name of page in Omniture
 *   - {string} params.omniture.global - Global Properties for Omniture
 *   - {string} params.omniture.context - Context Properties for Omniture
 *   - {string} params.comscore - Properties for Comscore
 *   - {string} params.mps - Properties for MPS
 *
 * @return {void}
 */
function recordPageView(params) {
  /* global document */
  // Ensure we only call this in a browser environment.
  if (!document) {
    return;
  }
  const state = window.TheStore && window.TheStore.getState();
  trackJourney(params);
  setTitle(params.title);

  // Track Page Load in mParticle
  if (params.mParticle) {
    recordMpPageView(params.mParticle);
  }
  if (params.omniture) {
    try {
      const defaultBrand = APP_NAME.toUpperCase();
      const context = {
        'tve.contenthub': 'Adobe Pass',
        'tve.network': defaultBrand === 'NBC' ? 'NBC Entertainment' : defaultBrand,
        ...params.omniture.context
      };
      omniture.trackPage(config/* default */.Z.get('omniture.pagePrefix') + params.omniture.name, context, params.omniture.global);
    } catch (exception) {
      park_logger_default().error('recordPageView: Omniture SDK failed', exception);
    }
  }

  // Track Page View in comScore
  if (!skipped.comscore) {
    params.comscore = params.comscore || {};
    comScore/* default */.Z.trackPage({
      ...config/* default */.Z.get('comscore'),
      ...params.comscore
    }, firstPageView).catch(exception => {
      park_logger_default().error('recordPageView: Comscore SDK failed', exception);
    });
  }

  // Update Ads w/ MPS
  const isMpsEnabled = get_default()(state, ['launchDarkly', 'server', 'isMpsEnabled'], true);
  if (isMpsEnabled && !skipped.mps && params.mps) {
    try {
      analytics_mps.trackPage(params.mps, firstPageView);
    } catch (exception) {
      park_logger_default().error('recordPageView: Advertising SDK failed', exception);
    }
  }

  // Keep track of 1st Page View
  firstPageView = false;
  skipped = {};
}

/**
 * Reports if we are still rendering the very first page view.
 * @return {boolean}
 *   True if we are currently rendering the very first page view.
 */
const isFirstPageView = () => firstPageView;

/**
 * Resets firstPageView for testing.
 * @param {boolean} value - If the next pageview should act like the first.
 * @return {void}
 */
const setFirstPageView = value => {
  firstPageView = value;
};

/**
 * Skip a given page view due to a business requirement.
 * @param {string} service
 *   Key of a service to skip, ex "comscore"
 * @return {void}
 */
const skipPageView = service => {
  skipped[service] = true;
};

/***/ }),

/***/ 23806:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ requireScript; }
/* harmony export */ });
var requires = {};

/**
 * Require a 3rd party script.
 *
 * @param {string} src
 *   JS Source to bring in.
 *
 * @param {object} attributes
 *   Key Value pair of {string} attributes
 *
 * @return {Promise}
 *   Callback once script has loaded.
 */
function requireScript(src) {
  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return requires[src] || (requires[src] = new Promise((resolve, reject) => {
    var D = document;
    var head = D.head || D.getElementsByTagName('head')[0] || D.documentElement;
    var el = D.createElement('script');
    Object.keys(attributes).forEach(key => el.setAttribute(key, attributes[key]));
    el.src = src;
    el.onreadystatechange = function () {
      if (this.readyState === 'loaded' || this.readyState === 'complete') {
        el.onload();
      }
    };
    el.onload = function onload() {
      el.onload = null;
      el.onreadystatechange = null;
      el.onerror = null;
      head.removeChild(el);
      resolve();
    };
    el.onerror = function onerror() {
      el.onload = null;
      el.onreadystatechange = null;
      el.onerror = null;
      head.removeChild(el);
      reject();
    };
    head.insertBefore(el, head.firstChild);
  }));
}

/***/ }),

/***/ 75499:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JN: function() { return /* binding */ getMobileScroll; },
/* harmony export */   Qf: function() { return /* binding */ setMobileScroll; },
/* harmony export */   ZP: function() { return /* binding */ scrollToElement; }
/* harmony export */ });
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);


/**
 * Scroll page to a specific element position.
 *
 * @param {Object} element
 *   An element object.
 * @param {number} offset
 *   The offset (in pixels) to subtract from the element top position.
 * @param {Object} options
 *   The scroll by additional custom options.
 * @param {number} delay
 *   Millisecods to wait before scrolling.
 * @return {void}
 */
function scrollToElement(element) {
  let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  let delay = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  const scrollConfig = {
    left: 0,
    top: element.getBoundingClientRect().top - offset,
    ...options
  };
  element && window.requestAnimationFrame && window.requestAnimationFrame(() => {
    if (delay > 0) {
      setTimeout(() => {
        window.scrollBy(scrollConfig);
      }, delay);
    } else {
      window.scrollBy(scrollConfig);
    }
  });
}

/**
 * Get current scroll position in mobile devices.
 *
 * @param {boolean} isMobile
 *   Flag to identify mobile devices.
 * @return {Number}
 *   Current scroll top position.
 */
function getMobileScroll(isMobile) {
  let scrollTop = 0;
  if (isMobile && typeof document !== 'undefined' && document.documentElement.scrollHeight > window.innerHeight) {
    scrollTop = window.pageYOffset;
    const notificationBar = document.querySelector('.notification-bar');
    const nav = document.querySelector('.navigation__logo-wrapper');
    const barHeight = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(notificationBar, ['clientHeight'], 0);
    const navHeight = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(nav, ['clientHeight'], 0);
    const doc = document.getElementById('main');
    doc.style.width = '100%';
    doc.style.position = 'fixed';
    doc.style.top = "".concat(-scrollTop + navHeight + barHeight, "px");
  }
  return scrollTop;
}

/**
 * Set scroll position to mobile devices and clean custom style.
 *
 * @param {boolean} isMobile
 *   Flag to identify mobile devices.
 * @param {number} scrollTop
 *   Top position to set.
 * @return {void}
 */
function setMobileScroll(isMobile, scrollTop) {
  if (isMobile && typeof document !== 'undefined') {
    const doc = document.getElementById('main');
    doc.style.width = '';
    doc.style.position = '';
    doc.style.top = '';
    window.scroll(0, scrollTop);
  }
}

/***/ }),

/***/ 36848:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Z: function() { return /* binding */ throwHTTPError; }
/* harmony export */ });
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27361);
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _HTTPError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80034);



/**
 * Throw a JavaScript Error from a data payload.
 *
 * @param   {Error|Object} payload
 *   Error - attaches status code and url.
 *   Object - including message and status code.
 * @param   {Number}       status
 *   HTTP Status Code for error.
 * @param   {String}       url
 *   The URL that was requested.
 *
 * @throws  {Error}
 *   With embeded message
 * @returns {undefined}
 */
function throwHTTPError(payload) {
  let status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : payload.status || lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(payload, 'data.status');
  let url = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(payload, 'config.url');
  throw new _HTTPError__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z(payload, status, url);
}

/***/ }),

/***/ 89583:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Aq: function() { return /* binding */ secondsToMinutes; },
/* harmony export */   S0: function() { return /* binding */ formatSmallDurationTimes; },
/* harmony export */   SY: function() { return /* binding */ formatRelativeTime; },
/* harmony export */   X5: function() { return /* binding */ millisecondsToSeconds; },
/* harmony export */   kg: function() { return /* binding */ millisecondsToMinutes; }
/* harmony export */ });
/* unused harmony exports secondsToMilliseconds, secondsToHours, minutesToSeconds, minutesToMilliseconds, millisecondsToHours */
/* harmony import */ var lodash_padStart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32475);
/* harmony import */ var lodash_padStart__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_padStart__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_dayjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57979);


const millisecondsToSeconds = milliseconds => milliseconds / 1000;
const secondsToMilliseconds = seconds => seconds * 1000;
const secondsToMinutes = seconds => seconds / 60;
const secondsToHours = seconds => seconds / 3600;
const minutesToSeconds = minutes => minutes * 60;
const minutesToMilliseconds = minutes => secondsToMilliseconds(minutesToSeconds(minutes));
const millisecondsToMinutes = milliseconds => secondsToMinutes(millisecondsToSeconds(milliseconds));
const millisecondsToHours = milliseconds => secondsToHours(millisecondsToSeconds(milliseconds));

/**
 * formatSmallDurationTimes
 *
 * Convert a value les than 1 hour in mm:ss format
 *
 * @param {number} duration Amount in seconds (it should be less than 60m)
 * @param {boolean} isMinutePadLeft Whether to pad the minutes with a leading zero
 *
 * @returns {object} Object with minutes, seconds, and formatted value
 */
const formatSmallDurationTimes = function (duration) {
  let isMinutePadLeft = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  if (duration <= 0 || duration >= 3600) {
    return {
      minutes: 0,
      seconds: 0,
      formatted: "".concat(isMinutePadLeft ? '0' : '', "0:00")
    };
  }
  let minutes = Math.floor(duration / 60);
  if (isMinutePadLeft) {
    minutes = lodash_padStart__WEBPACK_IMPORTED_MODULE_0___default()(minutes, 2, '0');
  }
  const seconds = duration % 60;
  const formatted = "".concat(minutes, ":").concat(lodash_padStart__WEBPACK_IMPORTED_MODULE_0___default()(seconds, 2, '0'));
  return {
    minutes,
    seconds,
    formatted
  };
};

/**
 * formatRelativeTime
 *
 * Convert value in milliseconds to "Smart Timestamp" format
 *  - Less than 1 hour ago, display 'Just added'
 *  - less than 24 hours ago AND 1 hour ago or more,
 *    display how many hours ago. Ex: '2h ago'
 *  - More than 24 hours ago, display the date, Ex: '09/09/21'
 *
 *
 * @param {number} startDate Time in milliseconds
 *
 * @returns {string}  Relative time value
 */
const formatRelativeTime = startDate => {
  const now = new Date().getTime();
  const diff = now - startDate;
  if (diff < 0) return null;
  const hoursAgo = millisecondsToHours(diff);
  if (hoursAgo < 1) return 'Just added';
  if (hoursAgo < 24) return "".concat(Math.floor(hoursAgo), "h ago");
  return (0,_lib_dayjs__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(startDate).format('MM/DD/YY');
};

/***/ }),

/***/ 95058:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   V: function() { return /* binding */ uuid; }
/* harmony export */ });
const UUID_REG_EX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i;

/**
 * Test whether a string is UUID or not
 *
 * @param {string} possibleUuid
 *   The string to test
 *
 * @example
 * isUuid('6d33fd37-d3b1-42fa-97d9-f1fec0b07a91')
 * // true
 * isUuid('wompwomp')
 * // false
 *
 * @return {bool} Whether the string is a UUID or not.
 */
function isUuid(possibleUuid) {
  return UUID_REG_EX.test(possibleUuid);
}

/**
 * Create a UUID
 *
 * @example
 * uuid()
 * // '6d33fd37-d3b1-42fa-97d9-f1fec0b07a91'
 *
 * @return {string} A UUID string.
 */
function uuid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }
  return "".concat(s4()).concat(s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4()).concat(s4()).concat(s4());
}
/* harmony default export */ __webpack_exports__.Z = (isUuid);

/***/ }),

/***/ 74369:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Z: function() { return /* binding */ config; }
});

// EXTERNAL MODULE: ./node_modules/lodash/get.js
var get = __webpack_require__(27361);
var get_default = /*#__PURE__*/__webpack_require__.n(get);
;// CONCATENATED MODULE: ./config/browser.json
var browser_namespaceObject = JSON.parse('{"machineTitle":"generetic","akamai":{"assetUrl":"https://img.nbc.com","policy":"nbc_com"},"API":{"park":{"url":"https://api.nbc.com/v3.15","maxAge":300000,"timeout":60000,"debug":false},"nbc":{"url":"https://api.nbc.com","timeout":30000,"debug":false,"mvpdDefaultPlatform":"iOS2","port":443},"park-v4":{"url":"https://api.nbc.com/v4.28.0"},"geoServices":{"url":"https://geolocation.digitalsvc.apps.nbcuni.com/geolocation","timeout":30000},"tokenVerifier":{"baseUrl":"https://tokenverifier.digitalsvc.apps.nbcuni.com/"},"emailVerify":{"url":"https://ss.nbc.co/pontoon","timeout":30000,"debug":false,"enabled":true},"broom":{"baseUrl":"https://api.nbc.com","endpoint":"/sweeps/receive","proxyEndpoint":"/generetic/api/sweepstakes"},"algolia":{"appId":"3NKVNTT7F3","apiKey":{"availability":"c2df90d0ff616a2726139c671d6e6e8e"},"searchIndex":"prod_multi-brand-unified-web","seriesIndex":"prod_web-all-series-unified","datesIndex":"prod_single-events-dates","replayIndex":"prod_single-events-web-desc","singleEventsIndex":"prod_single-events-web-asc"},"friendship":{"url":"https://friendship.nbc.co","appName":"nbc","maxAge":300000,"debug":false,"launchDarkly":true,"oneApp":true,"defaultProfiles":["00000"]},"branchMetrics":{"apiKey":"key_live_clvNTn0ILAmUSJwrqVDu3gebCriiIeNe","baseUrl":"https://nbc.app.link/","urlKey":"cAa4yFrtzK"},"ads":{"url":"https://adm.nbc.co/v1","maxAge":1000,"timeout":30000,"debug":false},"launchdarkly":{"enabled":true,"clientId":"5c251a4181619c1e9cb28c5d","sdkKey":"sdk-0e42c549-6560-4894-830b-a80820e4b4f7"},"conveyor":{"url":"https://ss.nbc.co/conveyor/search","timeout":5000},"amplitude":{"url":"https://api.amplitude.com/identify","apiKey":"7405ac33aa0f79b74e68555f8e6c658e"},"primetime":{"url":"https://streams.adobeprimetime.com","timeout":10000},"maxMind":{"url":"https://geoip.maxmind.com/geoip/v2.1/city/","accountId":"233436","licenseKey":"mTXkHb5EACouH9nA","timeout":10000},"lemonade":{"url":"https://lemonade.nbc.com/v2/record","urlLinear":"https://lemonade.nbc.com/v2/linear","urlVod":"https://lemonade.nbc.com/v1/vod","platform":"web","timeout":10000},"concierge":{"scriptUrl":"https://static.nbc.com/prod/oly-concierge.min.js"}},"cluster":{"killTimeout":10000},"express":{"port":80,"host":"localhost","baseUrl":"","secureBaseUrl":""},"app":{"assetPath":"/generetic/","appName":"nbc","publicDir":"static","cookieDomain":".nbc.com","processes":null,"publicMaxAge":86400000,"cacheControl":{"maxAge":300,"maxAgeExtended":10800,"staleIfError":3600},"debug":false,"imageConfigs":{"card":{"maxWidth":480},"global":{"maxWidth":640}},"fonts":["SourceSansProRegular","SourceSansProSemiBold","SourceSansProLight","SourceSansProExtraLight","MontserratRegular","MontserratBold"],"favicon":"favicon.ico","appleTouchIcon":"/generetic/images/apple-touch-icon.png","name":"NBC.com","navigation":{"shop":"https://www.nbcstore.com/?cid=nbc_global_nav_shop","app":"nbc","resetPasswordUrl":"/request-password","showsPath":"/shows/all/popular"},"menuQuickLinks":"menu-nbc-quick-links","menuQuickLinksMax":7,"menuCorporateLinks":"menu-nbc-global-corporate-links","defaultStream":"nbc","defaultStreamUnAuth":"nbc-news","defaultCallSignUnAuth":"NBCNN","performance":{"debug":false},"socialMedia":{"showDescription":false,"description":"Share the Moment","displayTM":true,"ogImage":"/generetic/images/nbc_logo_og.jpg","links":[{"name":"facebook","accountKey":"nbc"},{"name":"twitter","accountKey":"nbc"},{"name":"tumblr","accountKey":"nbctv"},{"name":"pinterest","accountKey":"nbctv"},{"name":"youtube","linkTitle":"YouTube","accountKey":"nbc"},{"name":"instagram"},{"name":"spotify"},{"name":"snapchat"},{"name":"vine"}]},"skin":{"whiteLogo":"/generetic/images/authhero/nbc-logo-white.png","brandBackgroundImage":"/generetic/images/authhero/identity_default_hero_bg.png","lightPrimaryColorKey":"oneapp-purply-blue","darkPrimaryColorKey":"oneapp-tristesse"},"domainName":"nbc","customCanonical":{"usa":"https://www.usanetwork.com"},"customSEOName":"NBC"},"omniture":{"isDevelopmentMode":false,"pagePrefix":""},"adobeLaunch":{"snippet":"//assets.adobedtm.com/a2ef59fba8e9/9c7a708dbcb2/launch-678397df18e0.min.js"},"conviva":{"customerKey":"e12872de91aaca7a39095801bdf5f168d87912fa","gateWay":false,"debug":false},"onetrust":{"scriptUrl":"https://cdn.cookielaw.org/consent/ea571e64-7f5b-48d8-8d41-f96b1ddd4838/otSDKStub.js","cookieUrl":"https://cdn.cookielaw.org/opt-out/otCCPAiab.js","dataDomain":"ea571e64-7f5b-48d8-8d41-f96b1ddd4838"},"comscore":{"c1":"2","c2":"6035083"},"moat":{"partnerCode":"nbcussaivideo236498481430"},"nielsen":{"debug":false,"apid":"P27B8D04D-DDA7-456D-954F-7F032457B022"},"mParticle":{"apiKey":"69dedba1e9714049b35bde9e2f9bf059","delay":2000,"isDevelopmentMode":false,"planId":"nbcu_data_plan","v1SecureServiceUrl":"map.mp.nbc.com/webevents/v1/JS/","v2SecureServiceUrl":"map.mp.nbc.com/webevents/v2/JS/","v3SecureServiceUrl":"map.mp.nbc.com/webevents/v3/JS/","configUrl":"map.mp.nbc.com/tags/JS/v2/","identityUrl":"map.mp.nbc.com/identity/v1/","aliasUrl":"map.mp.nbc.com/webevents/v1/identity/","productName":"nbc.com","options":{"registerGtm":false}},"brightline":{"scriptUrl":"https://cdn-media.brightline.tv/sdk/js/nbcu/brightline.webkit.sdk.2.2.3.js","config":{"configId":"1022","applicationName":"NBC OneApp","sdkVersion":"2.2.3","mobileCarrier":"NA","deviceName":"desktop"}},"log":{"file":"","exceptionsFile":"","exitOnError":false,"minimumLevel":"debug"},"fb":{"siteName":"NBC","appId":"653521154659171","loginPermissions":["email"]},"twitter":{"site":"@nbc","siteId":"26585095"},"platform":{"country":"US","uri":"nbctve://","android":{"name":"NBC","id":"com.nbcuni.nbc","alt":"android-app://com.nbcuni.nbc/nbctve"},"ios":{"name":"NBC","smartBannerName":"apple-itunes-app","id":"442839435"}},"platformSNL":{"uri":"nbcsnl://","android":{"name":"SNL","id":"com.nbcuni.nbc.snl","alt":"android-app://com.nbcuni.nbc/nbcsnl"},"ios":{"name":"SNL","id":"949622036"}},"permalinkBase":"https://www.nbc.com","videoPermalink":"http://www.nbc.com","maxShowsPerPage":30,"slideshowAutoPlaySpeed":5000,"ShowPage":{"guestCalendar":["late-night-with-seth-meyers","last-call-with-carson-daly","a-little-late-with-lilly-singh"]},"AppPage":{"appStoreiOS":"nbc_appstore_ios","appStoreAndroid":"nbc_appstore_android","activateLink":"/nbcuniversalfamily/activate?brand=nbc","amazonFireTV":"https://www.amazon.com/NBCUniversal-Media-LLC-NBC/dp/B018IOV40E/ref=sr_1_1?s=mobile-apps&ie=UTF8&qid=1456534299&sr=1-1&keywords=nbc+app","amazonEcho":"https://www.amazon.com/gp/help/customer/display.html?nodeId=201602060","appleTv":"https://itunes.apple.com/us/app/the-nbc-app-stream-tv-shows/id442839435?mt=8","androidTv":"https://play.google.com/store/apps/details?id=com.nbcuni.nbc.androidtv&hl=en_US","roku":"https://channelstore.roku.com/details/68669/nbc","xboxApp":"https://www.microsoft.com/en-us/p/nbc/9N613THZWJ8R?rtc=1&activetab=pivot:overviewtab","xclassTv":"https://www.xclasstv.com/","samsungSmart":"https://www.samsung.com/us/appstore/","vizioTv":"https://www.vizio.com/smartcast"},"VideoPage":{"defaultOverlay":{"image":"peacock-background.jpg"},"geoRestricted":{"image":"peacock-background.jpg"},"errorOverlay":{"image":"nbc-background.png"},"mobilePlaybackBlocker":{"image":"nbc-background.png"},"sports":{"image":"NBCSports-Background.jpg"},"promo":{"button":"Open the NBC app","copy":"To watch this episode, you\'ll need to<br> download the free NBC App.","copyLive":"To watch live stream, you’ll need to download the free NBC App.","copyUnsupported":"To watch full episodes, please visit NBC.com on your desktop computer.","icon":"images/apps/app_icon.png","appOverlayButton":"Continue on NBC.com","imageBackground":"images/nbc-background.jpg"},"notificationDelay":800},"LivePage":{"enabled":true,"defaultWatchDuration":30,"promo":{"userConfirmation":"Are you still there?","userConfirmationFailed":"Due to inactivity the playback has been stopped. To resume playback, reload the page.","streamingNotAvailable":"livePage.locationUnavailable","episodesCopy":"Go to Episodes page to watch full episodes.","episodesButton":"Go to full episodes","button":"WATCH ON THE NBC APP","userConfirmationButton":"Yes","copy":"To watch live stream, you’ll need to download the free NBC App.","icon":"images/apps/app_icon.png","concurrencyError":"The Live Stream for this account is already active on another device. To continue, please close out of the Live Stream on your other device and refresh this page.","imageBackground":"/generetic/images/peacock-background.jpg"},"player":{"idleTime":14400000,"idleConfirmationTimeout":120000,"heartbeatAccount":"nbcutve,nbcunetworkbu","freewheel":{"sfidMobile":7003961,"sfidDesktop":7006030,"fw_network":"169843","fw_prof":"169843:nbcu_bionic_linear_web","fw_afid":200265138,"fw_sdk_flag":"+sltp+emcr+slcb+nucr+sbid+fbad+aeti+slif-vicb+amcb+play-uapl+dtrd","fw_mvpd":"725bd42fc9c9394e790b9a73610da431","device_type":"desktop","dynamic_kv":"rdid=480bb2b7-0d63-5d12-bed9-f67ac6f124a6","resp":"vmap1","mode":"live","vdur":600,"metr":1023,"fw_sfid":"9244654","urlIpv4":"https://29773.v.fwmrm.net/ad/g/1?","urlIpv6":"https://29773.v.fwmrm.net/ad/g/1?"}}},"SignUpPage":{"introKey":"vote","introText":"signInUp.signUpVote"},"AllEpisodesPage":{"videos":{"range":6}},"PhotoLandingPage":{"galleries":{"range":12}},"CreditDetailsPage":{"clips":{"range":6}},"GuestDetailsPage":{"carousel":{"range":30}},"GuestCalendar":{"carousel":{"range":24}},"MPS":{"pathPrefix":"","disableAbDetect":false},"MPX":{"pid":"jujdhC","contentPid":"NnzsPC","playerName":"xkaAQrhkr9IU","id":"2410887629","fwClipsSection":"oneapp_desktop_computer_web_ondemand","fwEpisodesSection":"oneapp_desktop_computer_web_ondemand","adPolicyId":"121497524","domain":"https://player.theplatform.com","fallbackSSID":{"mobile":"9244643","desktop":"9244655"},"multiCDN":{"ownerId":"2410887629","adPolicy":"123033577"}},"HLS":{"url":"https://cdn.jsdelivr.net/hls.js/latest/hls.min.js"},"zendesk":{"url":"https://nbcdigital.zendesk.com/api/v2","username":"nbcd.dev.zendesk@nbcuni.com","token":null,"proxyEndpoint":"/generetic/api/zendesk","customFields":{"subject":22730260,"category":21706324,"show":22730290,"application":21675704,"request_type":22744070}},"timezone":"America/New_York","adobePass":{"applicationId":"nbc","brandsToRequest":["nbcentertainment","bravo","cnbc","oxygen","e","telemundo","syfy","sprout","usa","msnbc","mun2","CSNCalifornia","CSNBayArea","CSNChicago","CSNPhiladelphia","CSNMidAtlantic","CSNNewEngland"],"containerId":"contentAccessEnabler","instance":"prod","accessEnablerId":"accessEnabler","accessEnablerPath":"https://entitlement.auth.adobe.com/entitlement/v4/AccessEnabler.js","mvpdIFrameContainerId":"mvpd-dialog__iframe-container","mvpdIFrameId":"mvpdframe","requestorId":"nbcentertainment","numberOfFeaturedMvpds":15,"userNotAuthorizedErrorCode":"User not Authorized Error","apiPath":"https://api.auth.adobe.com","imageDomain":"https://mvpd-admin.nbcuni.com","accessEnablerStatement":"eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI1Yzg2YjdkYy04NDI3LTRjNDUtOGQwZi1iNDkzYmE3MmQwYjQiLCJuYmYiOjE1Nzg3MDM2MzEsImlzcyI6ImF1dGguYWRvYmUuY29tIiwiaWF0IjoxNTc4NzAzNjMxfQ.QQKIsBhAjGQTMdAqRTqhcz2Cddr4Y2hEjnSiOeKKki4nLrkDOsjQMmqeTR0hSRarraxH54wBgLvsxI7LHwKMvr7G8QpynNAxylHlQD3yhN9tFhxt4KR5wW3as02B-W2TznK9bhNWPKIyHND95Uo2Mi6rEQoq8tM9O09WPWaanE5BX_-r6Llr6dPq5F0Lpx2QOn2xYRb1T4nFxdFTNoss8GBds8OvChTiKpXMLHegLTc1OS4H_1a8tO_37jDwSdJuZ8iTyRLV4kZ2cpL6OL5JPMObD4-HQiec_dfcYgMKPiIfP9ZqdXpec2SVaCLsWEk86ZYvD97hLIQrK5rrKd1y-A","deviceTypes":{"roku":{"key":"Roku","label":"Roku"},"androidtv":{"key":"AndroidTV","label":"Android TV"},"appletv":{"key":"appletv","label":"AppleTV"},"tvos":{"key":"appletv","label":"tvOS"},"samsung":{"key":"SamsungSmartTV","label":"Samsung TV"},"amazonfiretv":{"key":"AmazonFireTV","label":"FireTV"},"amazon_fire_tv":{"key":"AmazonFireTV","label":"FireTV"},"firetv":{"key":"AmazonFireTV","label":"FireTV"},"nbcentertainmentxbox":{"key":"xboxone","label":"Xbox One"},"platco":{"key":"platco","label":"Platco"},"xboxoneuwp":{"key":"xboxone","label":"Xbox One"},"xboxone":{"key":"xboxone","label":"Xbox One"},"xbox":{"key":"xboxone","label":"Xbox One"},"vizio":{"key":"VizioSmartTV","label":"Vizio"}},"orgId":"A8AB776A5245B4220A490D44","mediaHeartbeatTrackingServer":"nbcume.hb.omtrdc.net","analyticsTrackingServer":"nbcume.sc.omtrdc.net","suiteId":"nbcutve"},"placeholders":{"creditPeacock":"credit_peacock.jpg","errorPeacock":"error_peacock.jpg","tonightShowLogo":"tonight_show_logo.png"},"browserConfigBlacklist":["zendesk.token"],"identity":{"enabled":true,"facebookAppId":"96799550818","facebookVersion":"v12.0","baseUrl":"https://id.nbc.com","version":"2023.1","identityFavoriteExpire":86400,"sessionTimeout":31556926,"googleClientId":"315056174082-jmacflau8157mo4v504rc5i6olofdn0n","googleClientType":"web_nbc","appleClientId":"com.nbcuni.nbc.portal.sso.oneapp","iframeBaseUrl":"https://www.usanetwork.com","defaultBrandSource":"nbcd_web","googleTapUrl":"https://accounts.google.com/gsi/client","googleTapClientId":"315056174082-jmacflau8157mo4v504rc5i6olofdn0n.apps.googleusercontent.com","allowableBrandsVPPABypass":{"nbc-news":{"isAllowedToBypassVPPA":true,"pages":["/my-account","/email-preferences"]}},"resetPasswordLink":"https://profile.id.nbcuni.com/forgot-password?brand=nbc","accountLink":"https://id.nbc.com/my-account?brand=nbc","emailPreferencesLink":"https://id.nbc.com/email-preferences?brand=nbc"},"facade":{"baseUrl":"https://avow.nbc.com/","apikey":"13aa2b5d57db44f9972e9d5ddcec4f3cb8115b343987465d9f76f4c1bc479d12"},"msVideoIsSaved":120000,"bouncer":"https://bouncer.nbc.co/activation","brands":{"nbc":{"brandDisplayTitle":"NBC","isWhiteLabel":true,"isBackgroundAvailable":true,"whiteBrandLogo":"/generetic/images/authhero/nbc-logo-white.png","brandLightPrimaryColor":"#302B63","brandBackgroundImage":"/generetic/images/authhero/identity_default_hero_bg.png","brandDarkPrimaryColor":"#0F0F1C","brandSource":"nbcd_web","priority":1,"brandIntake":"NBC_Entertainment","permalink":"https://www.nbc.com/","analyticsName":"nbc.com","geoServicesBrandKey":"nbc","networkName":"nbc","concurrencyAppId":"3439f201-f34e-4dd7-ab33-a40f27472628","cpcAccountName":"NBC","mapping":["nbc","nbcentertainment","nbcd_web"],"primetimeAccessKey":"MzQzOWYyMDEtZjM0ZS00ZGQ3LWFiMzMtYTQwZjI3NDcyNjI4Og==","nielsen":{"mode":"dtvr","crossId2":"NBC","subbrand":"c05"},"livePlatformKey":"nbc_live","liveSecret":"a770853c271bf6217ee9b69746505f0e","adobePassBrandName":"nbcentertainment","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"}},"bravo":{"brandBackgroundImage":"/generetic/images/authhero/bravo-identity-art.jpeg","brandDisplayTitle":"Bravo","isWhiteLabel":true,"isBackgroundAvailable":true,"whiteBrandLogo":"/generetic/images/brands/bravo.png","brandLightPrimaryColor":"#679197","brandDarkPrimaryColor":"#30212e","brandSource":"bravo_oneapp","priority":2,"mParticleKey":"6375ebf21bc31f42a558c70738222fb4","brandIntake":"Bravo","permalink":"https://www.bravotv.com/","analyticsName":"bravotv.com","geoServicesBrandKey":"bravo","networkName":"bravo","cpcAccountName":"BRAVO_ONEAPP","mapping":["bravo"],"primetimeAccessKey":"NjBlZDhjMDMtM2MwNi00OTVmLTk4MmUtNmE1ZjIxMmY5OGE4Og==","nielsen":{"mode":"dcr","crossId2":"Bravo","subbrand":"c02"},"livePlatformKey":"bravo_live","liveSecret":"62cd3f6d61ae63b3faf88caf98f0eabb","adobePassBrandName":"bravo","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"}},"usa":{"brandDisplayTitle":"USA","isWhiteLabel":true,"isBackgroundAvailable":true,"whiteBrandLogo":"/generetic/images/brands/usa.png","brandBackgroundImage":"/generetic/images/usa-background.jpg","brandLightPrimaryColor":"#F83837","brandDarkPrimaryColor":"#350300","brandSource":"usa_oneapp","priority":3,"mParticleKey":"65fcd39a399fa241b8b17f6b9a65dfcc","brandIntake":"USA_Network","permalink":"https://www.usanetwork.com/","analyticsName":"usanetwork.com","geoServicesBrandKey":"usa","networkName":"usa","cpcAccountName":"USA_ONEAPP","mapping":["usa"],"primetimeAccessKey":"MGEwNTIzYzQtMDE5Zi00OTVhLThlZTgtNzgzZWQ2MmZkZmQzOg==","nielsen":{"mode":"dcr","crossId2":"USA Network","subbrand":"c07"},"livePlatformKey":"usa_live","liveSecret":"5650a3fb8aeb0f785634fe725ad54786","adobePassBrandName":"usa","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"}},"syfy":{"brandDisplayTitle":"SYFY","isWhiteLabel":true,"isBackgroundAvailable":true,"whiteBrandLogo":"/generetic/images/brands/syfy.png","brandBackgroundImage":"/generetic/images/authhero/syfy-identity-art.jpg","brandLightPrimaryColor":"#635762","brandDarkPrimaryColor":"#1e1f24","brandSource":"syfy_oneapp","priority":4,"mParticleKey":"2161253b9ecc6d44937f73a3639e56e0","brandIntake":"SyFy","permalink":"https://www.syfy.com/","analyticsName":"syfy.com","geoServicesBrandKey":"syfy","networkName":"syfy","cpcAccountName":"SYFY_ONEAPP","mapping":["syfy"],"nielsen":{"mode":"dcr","crossId2":"Syfy","subbrand":"c06"},"livePlatformKey":"syfy_live","liveSecret":"873353f7906cd62a56b7a4e3e75b533d","adobePassBrandName":"syfy","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"}},"e":{"brandDisplayTitle":"E!","isWhiteLabel":true,"isBackgroundAvailable":true,"whiteBrandLogo":"/generetic/images/brands/e.png","brandBackgroundImage":"/generetic/images/authhero/e-identity-art.jpg","brandLightPrimaryColor":"#0089A8","brandDarkPrimaryColor":"#500053","brandSource":"e_oneapp","priority":5,"mParticleKey":"79595c5639547c42845053f12a099f4f","brandIntake":"E!_Entertainment","permalink":"https://www.eonline.com/","analyticsName":"eonline.com","geoServicesBrandKey":"e!","networkName":"e","cpcAccountName":"E_ONEAPP","mapping":["e","e!"],"primetimeAccessKey":"MzQzOWYyMDEtZjM0ZS00ZGQ3LWFiMzMtYTQwZjI3NDcyNjI4Og==","nielsen":{"mode":"dcr","crossId2":"E!","subbrand":"c22"},"adobePassBrandName":"e","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"},"livePlatformKey":"e_live","liveSecret":"a3f751b4d9988707d64f80f261e4d972"},"oxygen":{"brandDisplayTitle":"Oxygen","isWhiteLabel":true,"isBackgroundAvailable":true,"whiteBrandLogo":"/generetic/images/brands/oxygen.png","brandBackgroundImage":"/generetic/images/authhero/oxygen-identity-art.jpg","brandLightPrimaryColor":"#9A4BA0","brandDarkPrimaryColor":"#020218","brandSource":"oxygen_oneapp","priority":6,"mParticleKey":"d620848d0179124a8f10678231d2dbf3","brandIntake":"Oxygen_Media","permalink":"https://www.oxygen.com/","analyticsName":"oxygen.com","geoServicesBrandKey":"oxygen","networkName":"oxygen","cpcAccountName":"OXYGEN_ONEAPP","mapping":["oxygen"],"nielsen":{"mode":"dcr","crossId2":"Oxygen","subbrand":"c19"},"adobePassBrandName":"oxygen","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"},"livePlatformKey":"oxygen_live","liveSecret":"6f4d06ad56153a3fc0568b97d78c90a1"},"universalKids":{"brandDisplayTitle":"Universal Kids","isWhiteLabel":false,"isBackgroundAvailable":false,"whiteBrandLogo":"/generetic/images/brands/universal-kids.png","brandBackgroundImage":"/generetic/images/authhero/default-identity.jpg","brandLightPrimaryColor":"#468AAD","brandDarkPrimaryColor":"#28253E","brandSource":"universalkids_oneapp","priority":7,"permalink":"https://www.universalkids.com/","analyticsName":"universalkids.com","geoServicesBrandKey":"universalkids","livePlatformKey":"universalkids_oneapp_linear","networkName":"universal-kids","cpcAccountName":"UNIVERSALKIDS_ONEAPP","mapping":["universal-kids","universalKids","sprout"],"nielsen":{"mode":"dcr","crossId2":"Universal Kids","subbrand":"c25"}},"cnbc":{"brandDisplayTitle":"CNBC","isWhiteLabel":false,"isBackgroundAvailable":false,"whiteBrandLogo":"/generetic/images/brands/cnbc.png","brandBackgroundImage":"/generetic/images/authhero/default-identity.jpg","brandLightPrimaryColor":"#6B7992","brandDarkPrimaryColor":"#1F1A27","brandSource":"cnbc_oneapp","priority":8,"brandIntake":"CNBC","permalink":"https://www.cnbc.com/","analyticsName":"cnbc.com","geoServicesAccessKey":"cnbc_oneapp_linear","geoServicesBrandKey":"cnbc","networkName":"cnbc","cpcAccountName":"CNBC_ONEAPP","mapping":["cnbc"],"primetimeAccessKey":"NjM0NzAyNGItMzZmZS00NmNiLWJjYWEtODk0NzM1YTIzNjZlOg==","nielsen":{"mode":"dcr","crossId2":"CNBC","subbrand":"c14"},"livePlatformKey":"cnbc_live","liveSecret":"f9afa36b9be70005608ddfce66152b00","adobePassBrandName":"cnbc","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"}},"cnbc-airport":{"brandDisplayTitle":"CNBC AIRPORT","isWhiteLabel":false,"isBackgroundAvailable":false,"brandSource":"cnbcairport_oneapp","geoServicesBrandKey":"cnbc","livePlatformKey":"cnbc_live","networkName":"cnbc","cpcAccountName":"CNBCAIRPORT_ONEAPP_STAGE","mapping":["cnbc-airport"]},"msnbc":{"brandDisplayTitle":"MSNBC","isWhiteLabel":false,"isBackgroundAvailable":false,"whiteBrandLogo":"/generetic/images/brands/msnbc.png","brandBackgroundImage":"/generetic/images/authhero/default-identity.jpg","brandLightPrimaryColor":"#4077d0","brandDarkPrimaryColor":"#2d094c","brandSource":"msnbc_oneapp","priority":9,"brandIntake":"MSNBC","permalink":"https://www.msnbc.com/","analyticsName":"msnbc.com","geoServicesBrandKey":"msnbc","networkName":"msnbc","cpcAccountName":"MSNBC_ONEAPP","mapping":["msnbc"],"nielsen":{"mode":"dcr","crossId2":"MSNBC","subbrand":"c29"},"livePlatformKey":"msnbc_live","liveSecret":"af819a81bb8d2de065292f0fcca9984a","adobePassBrandName":"msnbc","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"}},"telemundo":{"brandDisplayTitle":"Telemundo","isWhiteLabel":true,"isBackgroundAvailable":true,"whiteBrandLogo":"/generetic/images/brands/telemundo.png","brandBackgroundImage":"/generetic/images/authhero/telemundo-identity-art.jpeg","brandLightPrimaryColor":"#CC0029","brandDarkPrimaryColor":"#000A38","brandSource":"telemundo_oneapp","priority":10,"brandIntake":"Telemundo_Networks","permalink":"https://www.telemundo.com/","analyticsName":"telemundo.com","geoServicesBrandKey":"telemundo","networkName":"telemundo","cpcAccountName":"TELEMUNDO_ONEAPP","mapping":["telemundo","tlmd"],"nielsen":{"mode":"dtvr","crossId2":"Telemundo","subbrand":"c26"},"fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"},"livePlatformKey":"telemundo_live","liveSecret":"893801ceff2f774af3a968409c2f48bd","adobePassBrandName":"telemundo"},"universo":{"brandDisplayTitle":"Universo","isWhiteLabel":false,"isBackgroundAvailable":false,"whiteBrandLogo":"/generetic/images/brands/universo.png","brandLightPrimaryColor":"#008094","brandDarkPrimaryColor":"#000D2F","brandSource":"universo_oneapp","priority":11,"brandIntake":"Universo","permalink":"http://www.nbcuniverso.com/","analyticsName":"nbcuniverso.com","geoServicesBrandKey":"nbcuniverso","networkName":"nbc-universo","cpcAccountName":"NBCUNIVERSO_ONEAPP","mapping":["universo","nbcuniverso","nbc-universo","mun2"],"primetimeAccessKey":"NjBlZDhjMDMtM2MwNi00OTVmLTk4MmUtNmE1ZjIxMmY5OGE4Og==","nielsen":{"mode":"dcr","crossId2":"NBC Universo","subbrand":"c56"},"adobePassBrandName":"mun2","fwConfig":{"csid":"oneapp_desktop_computer_web_livelinear"},"livePlatformKey":"universo_live","liveSecret":"c95b72f73e1860f9b7636e16b671a68d"},"nbcnews":{"brandDisplayTitle":"NBC News","permalink":"http://www.nbcnews.com/","analyticsName":"nbcnews.com","geoServicesBrandKey":"nbcnews","livePlatformKey":"nbcnews","isFreeStream":true,"mapping":["nbcnews","nbc-news"],"nielsen":{"mode":"dcr","crossId2":"NBC News","subbrand":"c04"}},"nbcsports":{"brandDisplayTitle":"NBC Sports","permalink":"https://www.nbcsports.com/","analyticsName":"nbcsports.com","geoServicesBrandKey":"nbcsn","cpcAccountName":"NBCSN_ONEAPP","mapping":["nbcsports","nbc-sports","sports","nbcsn"],"nielsen":{"mode":"dcr","crossId2":"NBC Sports","subbrand":"c18"},"livePlatformKey":"nbcsn_live","liveSecret":"d7d3536536c4669903a135f937a1fd87","vodSwitch":"https","whiteBrandLogo":"/generetic/images/brands/nbc-sports.png","brandLightPrimaryColor":"#656C80","brandBackgroundImage":"/generetic/images/authhero/nbcsports-identity-art.jpg","brandDarkPrimaryColor":"#0F0F1C","isBackgroundAvailable":true,"isWhiteLabel":true},"golf":{"brandDisplayTitle":"NBC Golf","permalink":"https://www.golfchannel.com/","analyticsName":"golfchannel.com","geoServicesBrandKey":"golf","mapping":["golf"],"nielsen":{"mode":"dcr","crossId2":"Golf Channel","subbrand":"c27"},"livePlatformKey":"golf_live","liveSecret":"6e6594b716db9d7ba041287a62dfa9f8","vodSwitch":"https"},"necn":{"brandDisplayTitle":"NECN","permalink":"https://www.necn.com/","analyticsName":"necn.com","geoServicesBrandKey":"necn","mapping":["necn"],"nielsen":{"mode":"dtvr","crossId2":"NECN","subbrand":"c41"},"livePlatformKey":"necn_live","liveSecret":"9d096ed169a31150605c4939c30ee364"},"peacock":{"brandDisplayTitle":"Peacock","networkName":"peacock","geoServicesBrandKey":"peacock","mapping":["peacock"]},"rsn-bay-area":{"brandDisplayTitle":"NBC Sports Bay Area","geoServicesBrandKey":"nbcsbayarea","mapping":["rsn-bay-area"],"nielsen":{"subbrand":"c18"},"adobePassBrandName":"CSNBayArea","isRSN":true},"rsn-boston":{"brandDisplayTitle":"NBC Sports Boston","geoServicesBrandKey":"nbcsboston","mapping":["rsn-boston"],"nielsen":{"subbrand":"c18"},"adobePassBrandName":"CSNNewEngland","isRSN":true},"rsn-california":{"brandDisplayTitle":"NBC Sports California","geoServicesBrandKey":"nbcscalifornia","mapping":["rsn-california"],"nielsen":{"subbrand":"c18"},"adobePassBrandName":"CSNCalifornia","isRSN":true},"rsn-chicago":{"brandDisplayTitle":"NBC Sports Chicago","geoServicesBrandKey":"nbcschicago","mapping":["rsn-chicago"],"nielsen":{"subbrand":"c18"},"adobePassBrandName":"CSNChicago","isRSN":true},"rsn-philadelphia":{"brandDisplayTitle":"NBC Sports Philadelphia","geoServicesBrandKey":"nbcsphiladelphia","mapping":["rsn-philadelphia"],"nielsen":{"subbrand":"c18"},"adobePassBrandName":"CSNPhiladelphia","isRSN":true},"rsn-washington":{"brandDisplayTitle":"NBC Sports Washington","geoServicesBrandKey":"nbcswashington","mapping":["rsn-washington"],"nielsen":{"subbrand":"c18"},"adobePassBrandName":"CSNMidAtlantic","isRSN":true},"paris-specialty-channel":{"mapping":["speciality-channel-1","speciality-channel-2"],"nielsen":{"subbrand":"c28"}}},"agnosticProfile":{"pages":["/my-account","/my-account/email-preferences","/email-preferences","/reset-password","/request-password","/reset-password/success"]},"peacock":{"url":"https://www.peacocktv.com/?cid=20200101evergreenoneedi001&utm_source=nbc&utm_medium=oneapp_editorial_header_navlink&utm_campaign=20200101evergreen&utm_term=weblink&utm_content=navlink"},"firebase":{"config":{"apiKey":"AIzaSyBsRpZYEz6RkEDS_MnE8JO6TpKS4rnJ_4c","authDomain":"tve-web-prod.firebaseapp.com","projectId":"tve-web-prod","storageBucket":"tve-web-prod.appspot.com","messagingSenderId":"123563562845","appId":"1:123563562845:web:f0c2f88bbe5b10f2883ab4","measurementId":"G-DHDWV5NYY4"},"vapidKey":"BPd5xmIEbEH3hCRcmkWZWL-NDUeOjjdfhOLa6Wo8coP91BCWgHog8D9ifOaHKpgzTazqe7FOx4RLDWMayJsaRAk"},"iterable":{"apiKey":"3b2cb84551564b9a88a33017ee681e77","baseUrl":"https://api.iterable.com","sdk":{"apiKey":"b430c005896f442798b573f1aa12a988","jwtService":"https://www.nbc.com/iterable/token","packageDomain":"www.nbc.com","storageVersion":"1.2","idField":"email"}},"coreVideo":{"appName":"NBC Network App","debug":false,"appIdentifier":"nbcu-web","drmProxyUrl":"https://drmproxy.digitalsvc.apps.nbcuni.com/drm-proxy/license","certificateUrl":"https://fp-keyos.licensekeyserver.com/cert/2b947879444b6f5b798514c48927a448.der","conviva":{"isAnalyticsEnabled":true,"enableAdInsights":true},"adobe":{"isAnalyticsEnabled":true},"nielsen":{"isAnalyticsEnabled":true,"enableProduction":true,"segB":"NBC Network App","sdkAppId":"P27B8D04D-DDA7-456D-954F-7F032457B022","cloudAppId":"D3408A74-93E2-4DF0-8C1E-14421F272028"},"comscore":{"isAnalyticsEnabled":true},"mediaTailor":{"host":"https://mt.ssai-oneapp.nbcuni.com","mtUrl":"https://mt.ssai-oneapp.nbcuni.com","debug":false},"openMeasurement":{"isAnalyticsEnabled":true,"debug":false,"partnerName":"Nbcuni","omWebScript":"omweb-v1.js","omVerificationScript":"omid-validation-verification-script-v1.js"},"vac":{"url":"https://video-ads-module.ad-tech.nbcuni.com/v1/freewheel-params","appName":"oneapp"},"timeSync":{"url":"https://timesync.nbc.com","timeout":1000},"ocellus":{"config":{"environment":"prod","debug":false}}},"datadog":{"applicationId":"7d26c499-f987-44ce-9b2f-046bb7f80be2","clientToken":"pubfb177abe41fb48e923b2e25602f48386","service":"nbc.com"},"idmTrial":{"url":"https://id.nbc.com","timeout":30000,"version":"2023.1","source":"nbcd_web","allowReset":false},"clientLogger":{"allowDebug":false},"binge":{"sleBingeJitterMin":10,"sleBingeJitterMax":60,"ferEndTimeReminder":35,"ferEndcardDuration":15},"paris24Linear":{"speciality-channel-1":true,"speciality-channel-2":true}}');
;// CONCATENATED MODULE: ./webpack-alias/config.js

// We need to load config for the browser.
 // eslint-disable-line import/no-unresolved

// const Config = data;
// var Config = (module.exports = data); // eslint-disable-line no-multi-assign
const Config = browser_namespaceObject;

// Get a configuration value.
Config.get = function (property) {
  if (property === null || typeof property === 'undefined') {
    throw new Error('Calling config.get with null or undefined argument');
  }
  var value = get_default()(Config, property);

  // Produce an exception if the property doesn't exist
  if (typeof value === 'undefined') {
    throw new Error("Configuration property \"".concat(property, "\" is not defined"));
  }

  // We don't need to worry about immutability in the browser.
  return value;
};
// Test that a configuration parameter exists.
Config.has = function (property) {
  return typeof get_default()(Config, property) !== 'undefined';
};

// var Config = (export default data);
/* harmony default export */ var config = (Config);

/***/ }),

/***/ 67788:
/***/ (function(module) {

/* eslint no-console: 0 */

// Park-Logger will break JS Bundle because of filesystem
// Instead we have WebPack swap park-logger for this straight-up console
module.exports = console;

/***/ }),

/***/ 44229:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 24654:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 75347:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 31777:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 34017:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 59905:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 64604:
/***/ (function() {

/* (ignored) */

/***/ }),

/***/ 4147:
/***/ (function(module) {

"use strict";
module.exports = JSON.parse('{"version":"1.235.1"}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	!function() {
/******/ 		__webpack_require__.amdO = {};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	!function() {
/******/ 		var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });
/******/ 			}
/******/ 			def['default'] = function() { return value; };
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	!function() {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = function(chunkId) {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = function(chunkId) {
/******/ 			// return url for filenames not based on template
/******/ 			if (chunkId === 3570) return "generated/chunks/3570.5133297136c09738020c.js";
/******/ 			if (chunkId === 4317) return "generated/chunks/4317.7d2071ed09ace9cabdcd.js";
/******/ 			if (chunkId === 6148) return "generated/chunks/6148.889dc713a37543d9520c.js";
/******/ 			if (chunkId === 5970) return "generated/chunks/5970.e2a73f77fc61edda6bc8.js";
/******/ 			if (chunkId === 320) return "generated/chunks/320.798284a973dbbf0deb57.js";
/******/ 			if (chunkId === 7746) return "generated/chunks/7746.e970b54aa9677854165f.js";
/******/ 			if (chunkId === 9507) return "generated/chunks/9507.a7a67924463017e1608b.js";
/******/ 			if (chunkId === 3120) return "generated/chunks/3120.278c51f0f99371cfe3eb.js";
/******/ 			if (chunkId === 8460) return "generated/chunks/8460.d09367b71c1e90ac6e32.js";
/******/ 			if (chunkId === 8718) return "generated/chunks/8718.5ac888641e08ed885e8a.js";
/******/ 			if (chunkId === 4655) return "generated/chunks/4655.5985d9ff091c6e6a26ee.js";
/******/ 			if (chunkId === 8374) return "generated/chunks/8374.58785e1c2e63ff7e57fd.js";
/******/ 			if (chunkId === 3217) return "generated/chunks/3217.2ba2dab9c897fd516657.js";
/******/ 			if (chunkId === 7427) return "generated/chunks/7427.bc23196942591ee6b7c8.js";
/******/ 			if (chunkId === 6311) return "generated/chunks/6311.0d4d84e6c57f9dc40d2b.js";
/******/ 			if (chunkId === 4955) return "generated/chunks/4955.f6de2724028643105857.js";
/******/ 			if (chunkId === 721) return "generated/chunks/721.296d7605fb60f7b4ea35.js";
/******/ 			if (chunkId === 1281) return "generated/chunks/1281.1d1818c0644d928afd68.js";
/******/ 			if (chunkId === 6467) return "generated/chunks/oclib.6467.8f1151220c5e8641cc8a.js";
/******/ 			if (chunkId === 213) return "generated/chunks/213.d496f0ade284488376ab.js";
/******/ 			if (chunkId === 7556) return "generated/chunks/7556.6e88d16e4a40c64c5415.js";
/******/ 			if (chunkId === 3533) return "generated/chunks/3533.1eb544f82996f1277447.js";
/******/ 			if (chunkId === 2928) return "generated/chunks/2928.3d10f3fddd0a681c108a.js";
/******/ 			if (chunkId === 1746) return "generated/chunks/1746.febf0941dd003788c619.js";
/******/ 			if (chunkId === 7967) return "generated/chunks/7967.10952ae04c6d4a0a93bb.js";
/******/ 			if (chunkId === 5049) return "generated/chunks/5049.07b19b92f564d3119642.js";
/******/ 			if (chunkId === 1637) return "generated/chunks/1637.4734637a19fc9b83d796.js";
/******/ 			if (chunkId === 5979) return "generated/chunks/5979.bb0961e2a76e13da88d5.js";
/******/ 			if (chunkId === 7388) return "generated/chunks/7388.6c5198a836fe14488746.js";
/******/ 			if (chunkId === 7380) return "generated/chunks/7380.beeaace0ae9d5ed753b5.js";
/******/ 			if (chunkId === 247) return "generated/chunks/247.2d0ea6eb36443d37057b.js";
/******/ 			if (chunkId === 3639) return "generated/chunks/3639.30ea780b00242fc6f085.js";
/******/ 			if (chunkId === 8867) return "generated/chunks/8867.117475f3402b323eacb1.js";
/******/ 			if (chunkId === 1311) return "generated/chunks/1311.7dd116a51bb61ca82768.js";
/******/ 			if (chunkId === 2285) return "generated/chunks/2285.7464048fe5d10e1bd2d7.js";
/******/ 			if (chunkId === 4935) return "generated/chunks/4935.c7ac93e820398e2ac1c6.js";
/******/ 			if (chunkId === 6651) return "generated/chunks/6651.5bca66ee34443d95cfc2.js";
/******/ 			if (chunkId === 9451) return "generated/chunks/9451.6d1ff79920718a65acaa.js";
/******/ 			if (chunkId === 5701) return "generated/chunks/5701.82166bab64d750a40d35.js";
/******/ 			if (chunkId === 43) return "generated/chunks/43.4e813101be906c3ada1b.js";
/******/ 			if (chunkId === 8997) return "generated/chunks/8997.485f950f2d80557b971f.js";
/******/ 			if (chunkId === 8462) return "generated/chunks/8462.b3f7b32468244552df92.js";
/******/ 			if (chunkId === 5884) return "generated/chunks/5884.40cfb6c66f106a26aa1a.js";
/******/ 			if (chunkId === 1325) return "generated/chunks/1325.2950c60c175383177d6f.js";
/******/ 			if (chunkId === 2243) return "generated/chunks/2243.56eb21f89c317bc7a37c.js";
/******/ 			if (chunkId === 1186) return "generated/chunks/1186.690ee07032a0d1a041e1.js";
/******/ 			if (chunkId === 2326) return "generated/chunks/2326.8e3a2c6c82da13cf3a55.js";
/******/ 			if (chunkId === 3514) return "generated/chunks/3514.aa2de80f703a4bfeabdb.js";
/******/ 			if (chunkId === 5523) return "generated/chunks/5523.dadf739b8b4a267c3365.js";
/******/ 			if (chunkId === 6459) return "generated/chunks/6459.85913482423ca3b6313e.js";
/******/ 			if (chunkId === 9877) return "generated/chunks/9877.a52cde6197578c5c69be.js";
/******/ 			if (chunkId === 9646) return "generated/chunks/9646.d4e65bd89258df606eb1.js";
/******/ 			if (chunkId === 4207) return "generated/chunks/4207.a78f6a943276b47480b8.js";
/******/ 			if (chunkId === 3571) return "generated/chunks/3571.2117a700e8e5e0f33216.js";
/******/ 			if (chunkId === 9026) return "generated/chunks/9026.eedebfda2b95192314cf.js";
/******/ 			if (chunkId === 4430) return "generated/chunks/4430.43229bfc67f0dfb8de3d.js";
/******/ 			if (chunkId === 6933) return "generated/chunks/6933.7568e28d07c6da4a6f8b.js";
/******/ 			if (chunkId === 7417) return "generated/chunks/7417.a3a41454857ee47930ae.js";
/******/ 			if (chunkId === 6930) return "generated/chunks/6930.7d14f25810341458fb3f.js";
/******/ 			if (chunkId === 7300) return "generated/chunks/7300.147beb40b9dba11a79ad.js";
/******/ 			if (chunkId === 5350) return "generated/chunks/5350.7f9108b07c96aa1f901b.js";
/******/ 			if (chunkId === 5170) return "generated/chunks/5170.f4f1e8e9a4bd5279eb31.js";
/******/ 			if (chunkId === 3978) return "generated/chunks/3978.0b33810d248dfaccd299.js";
/******/ 			if (chunkId === 9228) return "generated/chunks/9228.9dc7b3438b785451ed8d.js";
/******/ 			if (chunkId === 9094) return "generated/chunks/9094.7537482f77fd02eca167.js";
/******/ 			if (chunkId === 3253) return "generated/chunks/3253.5b78918a0e514458e2d8.js";
/******/ 			if (chunkId === 4372) return "generated/chunks/4372.324d110c0db2a14b0307.js";
/******/ 			if (chunkId === 9497) return "generated/chunks/9497.166036ff85af7dd27677.js";
/******/ 			if (chunkId === 6645) return "generated/chunks/6645.498ec3c29c9817d0d52c.js";
/******/ 			if (chunkId === 8630) return "generated/chunks/8630.96bf4694669a829ddcde.js";
/******/ 			if (chunkId === 8324) return "generated/chunks/8324.3ccecfa161869f8c80ee.js";
/******/ 			if (chunkId === 2095) return "generated/chunks/2095.3029aa8622d58ce3c687.js";
/******/ 			if (chunkId === 4440) return "generated/chunks/4440.75abc3099deb7275e110.js";
/******/ 			if (chunkId === 6886) return "generated/chunks/6886.e90dc305b749057264b1.js";
/******/ 			if (chunkId === 3406) return "generated/chunks/3406.79197d148d9c18ebbcfb.js";
/******/ 			if (chunkId === 8389) return "generated/chunks/8389.11dc1506fb6d293ecfaf.js";
/******/ 			if (chunkId === 6599) return "generated/chunks/6599.b7be906e3ee24a99ad9c.js";
/******/ 			if (chunkId === 7186) return "generated/chunks/7186.143633398dd597b87bf4.js";
/******/ 			if (chunkId === 5850) return "generated/chunks/5850.2e98d69dc6937f0e7126.js";
/******/ 			if (chunkId === 4204) return "generated/chunks/4204.a29dd1463e277d17e944.js";
/******/ 			if (chunkId === 1808) return "generated/chunks/1808.8eda529199080ccf698c.js";
/******/ 			if (chunkId === 5174) return "generated/chunks/5174.6985b83f630908cfd049.js";
/******/ 			if (chunkId === 8083) return "generated/chunks/8083.81bf49a80d8b513e6b49.js";
/******/ 			if (chunkId === 4505) return "generated/chunks/4505.cb537280b2578fdba18a.js";
/******/ 			if (chunkId === 7770) return "generated/chunks/7770.75a17d34bbb5a938a8a0.js";
/******/ 			if (chunkId === 9534) return "generated/chunks/9534.470c401abbaabad8fc50.js";
/******/ 			if (chunkId === 3677) return "generated/chunks/3677.ea5e8216cd51df088755.js";
/******/ 			if (chunkId === 7379) return "generated/chunks/7379.f77dfc1dc59ba5537958.js";
/******/ 			if (chunkId === 8696) return "generated/chunks/8696.92d4e878d84b4f5c88b8.js";
/******/ 			if (chunkId === 1849) return "generated/chunks/1849.09c067d55aee468a7cdb.js";
/******/ 			if (chunkId === 179) return "generated/chunks/179.dc3439cc6a3ceb4e10cc.js";
/******/ 			if (chunkId === 8840) return "generated/chunks/8840.493f9a4269edcae53703.js";
/******/ 			if (chunkId === 5095) return "generated/chunks/5095.ded5717b6894b30dc29e.js";
/******/ 			if (chunkId === 4497) return "generated/chunks/4497.f19abecc55132cc29ae0.js";
/******/ 			if (chunkId === 2029) return "generated/chunks/2029.d0c009a04cbe8532cdf2.js";
/******/ 			if (chunkId === 6254) return "generated/chunks/6254.8665946186c43a54fc0a.js";
/******/ 			if (chunkId === 8578) return "generated/chunks/8578.b07cb416b7473c1825ac.js";
/******/ 			if (chunkId === 6649) return "generated/chunks/6649.557ddd8b8d91c9bc06e6.js";
/******/ 			if (chunkId === 3454) return "generated/chunks/3454.fe126e74a43f10a3c378.js";
/******/ 			if (chunkId === 377) return "generated/chunks/377.313126c98e7ff3546352.js";
/******/ 			if (chunkId === 8782) return "generated/chunks/8782.2142bd134e513605cb45.js";
/******/ 			if (chunkId === 5609) return "generated/chunks/5609.8762a58586327e1dcdac.js";
/******/ 			if (chunkId === 1622) return "generated/chunks/1622.3506dd3180069ce32a35.js";
/******/ 			if (chunkId === 9606) return "generated/chunks/9606.2f506e049777f01c163b.js";
/******/ 			if (chunkId === 7714) return "generated/chunks/7714.395240eaa635f3bd7007.js";
/******/ 			if (chunkId === 6946) return "generated/chunks/6946.f284e3f7758952faf7a6.js";
/******/ 			if (chunkId === 2663) return "generated/chunks/2663.d3aa627950e28f424872.js";
/******/ 			if (chunkId === 764) return "generated/chunks/764.d28544c9df8e29abc0bb.js";
/******/ 			if (chunkId === 9411) return "generated/chunks/9411.e27bd9593cf1092d010a.js";
/******/ 			if (chunkId === 1192) return "generated/chunks/1192.72e94e3efd5f02cc9259.js";
/******/ 			if (chunkId === 527) return "generated/chunks/527.a6f03044dd1217da8b49.js";
/******/ 			if (chunkId === 3123) return "generated/chunks/3123.c0ece20a2e49addca6ee.js";
/******/ 			if (chunkId === 1038) return "generated/chunks/1038.f2f673c5ac7f51b2ca63.js";
/******/ 			if (chunkId === 7047) return "generated/chunks/7047.c08d9c0c2fd521f803b6.js";
/******/ 			if (chunkId === 6678) return "generated/chunks/6678.d4bcc0ffb350791a1079.js";
/******/ 			if (chunkId === 3963) return "generated/chunks/3963.7d4c51193903ade221a6.js";
/******/ 			if (chunkId === 1409) return "generated/chunks/1409.abb2b71b1c9e5d6b71d8.js";
/******/ 			if (chunkId === 4008) return "generated/chunks/4008.ff9604c3ed3611660c10.js";
/******/ 			if (chunkId === 100) return "generated/chunks/100.5f1219a101768530ca4a.js";
/******/ 			if (chunkId === 5485) return "generated/chunks/5485.9da4c4564ddc84850b4b.js";
/******/ 			if (chunkId === 7755) return "generated/chunks/7755.fc5379cf0c3fcea3425d.js";
/******/ 			if (chunkId === 4152) return "generated/chunks/4152.6907e4978d3611a86611.js";
/******/ 			if (chunkId === 8975) return "generated/chunks/8975.af831701484fa0e1b203.js";
/******/ 			if (chunkId === 1175) return "generated/chunks/1175.b468a3e9337f5738e778.js";
/******/ 			if (chunkId === 498) return "generated/chunks/498.e2353eca4c10f19640ab.js";
/******/ 			if (chunkId === 6331) return "generated/chunks/6331.26fd4ac0f22b97f425b1.js";
/******/ 			if (chunkId === 6540) return "generated/chunks/6540.95466dc13795af53ac57.js";
/******/ 			if (chunkId === 4811) return "generated/chunks/4811.84c261dbf64daa4abfda.js";
/******/ 			if (chunkId === 5283) return "generated/chunks/5283.99615e810915591865c6.js";
/******/ 			if (chunkId === 3930) return "generated/chunks/3930.e00ff4dfc4f1c19159bf.js";
/******/ 			if (chunkId === 91) return "generated/chunks/91.cd7dd4428efc3bea283a.js";
/******/ 			if (chunkId === 3379) return "generated/chunks/3379.efc3b991a7359cd4a74e.js";
/******/ 			if (chunkId === 9988) return "generated/chunks/9988.0a5a744ed6690f5cd64b.js";
/******/ 			if (chunkId === 8307) return "generated/chunks/8307.258936155553810cb30c.js";
/******/ 			if (chunkId === 1200) return "generated/chunks/1200.6fc4b6bb62deb2b85a19.js";
/******/ 			if (chunkId === 3462) return "generated/chunks/3462.c03d2a4168eb1d9a14b1.js";
/******/ 			if (chunkId === 4462) return "generated/chunks/4462.18214cffded2f344ca67.js";
/******/ 			if (chunkId === 9977) return "generated/chunks/9977.cabc4633d0b57dfd388f.js";
/******/ 			if (chunkId === 7960) return "generated/chunks/7960.e7275389b54ebafff2b8.js";
/******/ 			if (chunkId === 8806) return "generated/chunks/8806.434b8e7ce6545365ca95.js";
/******/ 			if (chunkId === 3495) return "generated/chunks/3495.966a0e2137d84e2e6740.js";
/******/ 			if (chunkId === 4270) return "generated/chunks/4270.874fe7d475d9fb017bb7.js";
/******/ 			if (chunkId === 6909) return "generated/chunks/6909.ef22d2bc442aa1966919.js";
/******/ 			if (chunkId === 2022) return "generated/chunks/2022.6abeea51d2e6422ae3e1.js";
/******/ 			if (chunkId === 3885) return "generated/chunks/3885.836eff8763a5478d9bd4.js";
/******/ 			if (chunkId === 3795) return "generated/chunks/3795.1fc9d50be4e9e596479a.js";
/******/ 			if (chunkId === 3723) return "generated/chunks/3723.6448ba82da3177e4d8a7.js";
/******/ 			if (chunkId === 1810) return "generated/chunks/1810.a984710ead253d2a55e0.js";
/******/ 			if (chunkId === 9245) return "generated/chunks/9245.6e0eff5cf041578d9978.js";
/******/ 			if (chunkId === 6013) return "generated/chunks/6013.29688a5c3e9693353dce.js";
/******/ 			if (chunkId === 6511) return "generated/chunks/6511.3e1124e487064d3dfbc7.js";
/******/ 			if (chunkId === 4691) return "generated/chunks/4691.0c07f56fbfcbc8d40359.js";
/******/ 			if (chunkId === 7645) return "generated/chunks/7645.4c5bd7fc4f55c558deac.js";
/******/ 			if (chunkId === 1218) return "generated/chunks/1218.804cd2de5e58282a3609.js";
/******/ 			if (chunkId === 6307) return "generated/chunks/6307.34d7a1dee424f7c0f5f8.js";
/******/ 			if (chunkId === 2817) return "generated/chunks/2817.fce3044fa94775ec72a2.js";
/******/ 			if (chunkId === 9214) return "generated/chunks/9214.d04c8fba751295f7f40f.js";
/******/ 			if (chunkId === 1577) return "generated/chunks/1577.79eff4757a7e6a53b6f9.js";
/******/ 			if (chunkId === 9989) return "generated/chunks/9989.f58d984244afc4173e27.js";
/******/ 			if (chunkId === 3676) return "generated/chunks/3676.475c90767a22acb85fdf.js";
/******/ 			if (chunkId === 4549) return "generated/chunks/4549.8c753de06f7d60681ec2.js";
/******/ 			if (chunkId === 5497) return "generated/chunks/5497.d26a37d291f71c2e3964.js";
/******/ 			if (chunkId === 2510) return "generated/chunks/2510.c3788f22cf23d18af4ca.js";
/******/ 			if (chunkId === 6019) return "generated/chunks/6019.5db69e1c512409740128.js";
/******/ 			if (chunkId === 1353) return "generated/chunks/1353.0d2112e0a76a95b489b4.js";
/******/ 			if (chunkId === 5426) return "generated/chunks/5426.0d45b685fbc3dccfcb3e.js";
/******/ 			if (chunkId === 561) return "generated/chunks/561.5d100a1b39fb9ee268e2.js";
/******/ 			if (chunkId === 841) return "generated/chunks/841.a30900c574ee1551b941.js";
/******/ 			if (chunkId === 6158) return "generated/chunks/6158.4129684eec1a6b777f8b.js";
/******/ 			if (chunkId === 4219) return "generated/chunks/4219.2383dd4857e1e34e0f7c.js";
/******/ 			if (chunkId === 4907) return "generated/chunks/4907.14b85f5b7b348dc9737d.js";
/******/ 			if (chunkId === 2846) return "generated/chunks/2846.512442620a79f0e8ffcf.js";
/******/ 			if (chunkId === 4739) return "generated/chunks/4739.5072701acecd39508c94.js";
/******/ 			if (chunkId === 7942) return "generated/chunks/7942.1edaed8de4e03c00de14.js";
/******/ 			if (chunkId === 5681) return "generated/chunks/5681.98c0253c022f61286edc.js";
/******/ 			if (chunkId === 5454) return "generated/chunks/5454.a1df41156805b4d9ed93.js";
/******/ 			if (chunkId === 8151) return "generated/chunks/8151.9a54095a2b895ade3be7.js";
/******/ 			if (chunkId === 2222) return "generated/chunks/2222.d7cfc5f636064e8bdffd.js";
/******/ 			if (chunkId === 752) return "generated/chunks/752.8354fa047d079ee4a922.js";
/******/ 			if (chunkId === 3327) return "generated/chunks/3327.8b8ef678a0947b2e70ed.js";
/******/ 			if (chunkId === 61) return "generated/chunks/61.c53f51c6e21a7f992d2d.js";
/******/ 			if (chunkId === 4879) return "generated/chunks/4879.eaaeb49ca967cdc9074f.js";
/******/ 			if (chunkId === 5817) return "generated/chunks/5817.d7959f6f99da2446335f.js";
/******/ 			if (chunkId === 471) return "generated/chunks/471.f3d6584357078764cdad.js";
/******/ 			if (chunkId === 1250) return "generated/chunks/1250.93c7668c3a8878a491d9.js";
/******/ 			if (chunkId === 8685) return "generated/chunks/8685.0ab192056d41f85670cf.js";
/******/ 			if (chunkId === 757) return "generated/chunks/757.934199ada301424e9a42.js";
/******/ 			if (chunkId === 6457) return "generated/chunks/6457.6761a5a1454f06c2ee58.js";
/******/ 			if (chunkId === 9046) return "generated/chunks/9046.37a64c013876e009c1c8.js";
/******/ 			if (chunkId === 1143) return "generated/chunks/1143.be045b8a3e1c76a44fbe.js";
/******/ 			if (chunkId === 9667) return "generated/chunks/9667.fcfc1ff5261cc8df4b5e.js";
/******/ 			if (chunkId === 5580) return "generated/chunks/5580.8c2817500e9687ede138.js";
/******/ 			if (chunkId === 4989) return "generated/chunks/4989.4e3136cfc172af92a6af.js";
/******/ 			if (chunkId === 794) return "generated/chunks/794.0b56459eef50401ecbfb.js";
/******/ 			if (chunkId === 4134) return "generated/chunks/4134.8593df197f08e4670432.js";
/******/ 			if (chunkId === 2045) return "generated/chunks/2045.a3862e5a987873759e56.js";
/******/ 			if (chunkId === 3804) return "generated/chunks/3804.081c34469a2231f868b9.js";
/******/ 			if (chunkId === 679) return "generated/chunks/679.7f8c7d4eefa1b30e36db.js";
/******/ 			if (chunkId === 166) return "generated/chunks/166.a48dfbb173a1e6ab3a39.js";
/******/ 			if (chunkId === 9849) return "generated/chunks/9849.1926c6c494d6b081883a.js";
/******/ 			if (chunkId === 8489) return "generated/chunks/8489.1e0571b131f2a8e2f226.js";
/******/ 			if (chunkId === 4051) return "generated/chunks/4051.22178e92facdb0f15c38.js";
/******/ 			if (chunkId === 5106) return "generated/chunks/5106.6531318dbc6c0124d74a.js";
/******/ 			if (chunkId === 6371) return "generated/chunks/6371.b18cfd575b55f35eab55.js";
/******/ 			if (chunkId === 7088) return "generated/chunks/7088.45d795ca50ccaa9ba412.js";
/******/ 			if (chunkId === 4622) return "generated/chunks/4622.f32333290c4ca46e2441.js";
/******/ 			if (chunkId === 8612) return "generated/chunks/8612.29713eb336b10a16757b.js";
/******/ 			if (chunkId === 1294) return "generated/chunks/1294.0659bc86101331ddd4a0.js";
/******/ 			if (chunkId === 9088) return "generated/chunks/9088.940cd576f6c86734b2ea.js";
/******/ 			if (chunkId === 5848) return "generated/chunks/5848.7f009ed07adc4864f080.js";
/******/ 			if (chunkId === 258) return "generated/chunks/258.225cb1028a477c72e64b.js";
/******/ 			if (chunkId === 8406) return "generated/chunks/8406.f47bf02a522d1105e3a3.js";
/******/ 			if (chunkId === 3001) return "generated/chunks/3001.d003e1903ca8701635b0.js";
/******/ 			if (chunkId === 7572) return "generated/chunks/7572.8d65d54c9c2f63784ccc.js";
/******/ 			if (chunkId === 6958) return "generated/chunks/6958.85a9365f4c06c0fa2a47.js";
/******/ 			if (chunkId === 437) return "generated/chunks/437.7f3fcf516dd5395e6c06.js";
/******/ 			if (chunkId === 278) return "generated/chunks/278.5e8491b4af846c786a84.js";
/******/ 			if (chunkId === 7262) return "generated/chunks/7262.df1f89788a4111ea8480.js";
/******/ 			if (chunkId === 359) return "generated/chunks/359.eac2852a7ebae6a3595e.js";
/******/ 			if (chunkId === 8810) return "generated/chunks/8810.a7670d5e22154426e1be.js";
/******/ 			if (chunkId === 1877) return "generated/chunks/1877.c7b84a6a8944ce5494d8.js";
/******/ 			if (chunkId === 8335) return "generated/chunks/8335.6fba7bd5e201d15e77a2.js";
/******/ 			if (chunkId === 9566) return "generated/chunks/9566.875277515830b23e3a0a.js";
/******/ 			if (chunkId === 5062) return "generated/chunks/5062.e327559eadb5fd4189dd.js";
/******/ 			if (chunkId === 4055) return "generated/chunks/4055.a4dbafc2e8b18cf23761.js";
/******/ 			if (chunkId === 5803) return "generated/chunks/5803.e1f8d03f922fb4c2f56f.js";
/******/ 			if (chunkId === 9108) return "generated/chunks/9108.a705fad972ddf8be99f9.js";
/******/ 			if (chunkId === 5534) return "generated/chunks/5534.30e47300394f100bf957.js";
/******/ 			if (chunkId === 3358) return "generated/chunks/3358.f34ffa8f8b9b298ee9de.js";
/******/ 			if (chunkId === 2541) return "generated/chunks/2541.16b9d18b2b5f2f1a73eb.js";
/******/ 			if (chunkId === 9751) return "generated/chunks/9751.c97e9fd87d6a5be9987d.js";
/******/ 			if (chunkId === 771) return "generated/chunks/771.bb2b7ca3e937f1672404.js";
/******/ 			if (chunkId === 5156) return "generated/chunks/5156.f3a09fe555f3023dd509.js";
/******/ 			if (chunkId === 5594) return "generated/chunks/5594.7b9ce8633cb264016ecd.js";
/******/ 			if (chunkId === 9999) return "generated/chunks/9999.455d30bff66169367aa8.js";
/******/ 			if (chunkId === 9154) return "generated/chunks/9154.932faac8eb77cc090268.js";
/******/ 			if (chunkId === 4298) return "generated/chunks/4298.45f79384191b1c1770b9.js";
/******/ 			if (chunkId === 4146) return "generated/chunks/4146.42e7827476ddb33a0a29.js";
/******/ 			if (chunkId === 2982) return "generated/chunks/2982.6ab28ab18f2c0486145e.js";
/******/ 			if (chunkId === 4618) return "generated/chunks/4618.9b0fde8d7a8220655b5c.js";
/******/ 			if (chunkId === 3109) return "generated/chunks/3109.4aad1cc2424687535391.js";
/******/ 			if (chunkId === 8155) return "generated/chunks/8155.9cd1b622ad27417ffbc3.js";
/******/ 			if (chunkId === 9913) return "generated/chunks/9913.e3ecc15a15a315e4b8e9.js";
/******/ 			if (chunkId === 127) return "generated/chunks/127.91377ef81337b0a5029e.js";
/******/ 			if (chunkId === 624) return "generated/chunks/624.3efdd4eb857a39247fba.js";
/******/ 			if (chunkId === 9670) return "generated/chunks/9670.cbd73a660e9fed9e84c7.js";
/******/ 			if (chunkId === 1948) return "generated/chunks/1948.668211540bc73838f44a.js";
/******/ 			if (chunkId === 6018) return "generated/chunks/6018.3c212d75e13f36f6c7ae.js";
/******/ 			if (chunkId === 5901) return "generated/chunks/5901.b98dbcb933ff9b82fa22.js";
/******/ 			if (chunkId === 738) return "generated/chunks/738.2e9fa3a8d82727849dcd.js";
/******/ 			if (chunkId === 115) return "generated/chunks/115.026216cd485aa3ff195f.js";
/******/ 			if (chunkId === 454) return "generated/chunks/454.8a39de2cac7a4fce84b3.js";
/******/ 			if (chunkId === 8102) return "generated/chunks/8102.0d244a513fed3cc3e09a.js";
/******/ 			if (chunkId === 5269) return "generated/chunks/5269.23a8db840181288918c3.js";
/******/ 			if (chunkId === 982) return "generated/chunks/982.0ec6b13a13a2c516922f.js";
/******/ 			if (chunkId === 4706) return "generated/chunks/4706.c34b380bb54eea81f9c8.js";
/******/ 			if (chunkId === 7123) return "generated/chunks/7123.8e3d0c3967c152e33d76.js";
/******/ 			if (chunkId === 2859) return "generated/chunks/2859.469121687aac6c9badf4.js";
/******/ 			if (chunkId === 9124) return "generated/chunks/9124.99d6bb649d01eff7edfc.js";
/******/ 			if (chunkId === 373) return "generated/chunks/373.1b53fbe1a055b2dc3abb.js";
/******/ 			if (chunkId === 1558) return "generated/chunks/1558.ec0c520a3aacf0238b7a.js";
/******/ 			if (chunkId === 3566) return "generated/chunks/3566.b038f6911845bdc261c9.js";
/******/ 			if (chunkId === 1724) return "generated/chunks/1724.fa504c16d3c3b3637917.js";
/******/ 			if (chunkId === 3496) return "generated/chunks/3496.7f1c7159ff4d2e0f12d8.js";
/******/ 			if (chunkId === 7564) return "generated/chunks/7564.bb4e7bf5e8c588458f99.js";
/******/ 			if (chunkId === 1750) return "generated/chunks/1750.cbbcb3af20fac0c75bc4.js";
/******/ 			if (chunkId === 4764) return "generated/chunks/4764.15eed4d239eff5ea6c22.js";
/******/ 			if (chunkId === 8404) return "generated/chunks/8404.f6f4f8dfaae46f59ea1d.js";
/******/ 			if (chunkId === 3534) return "generated/chunks/3534.0b4f375b61245a1b1c7e.js";
/******/ 			if (chunkId === 7736) return "generated/chunks/7736.78073ad9826214c5e454.js";
/******/ 			if (chunkId === 7859) return "generated/chunks/7859.a2af0a71894585b0c32c.js";
/******/ 			if (chunkId === 2558) return "generated/chunks/2558.b73b47880d6a8ce61aa4.js";
/******/ 			if (chunkId === 7738) return "generated/chunks/7738.8bacbce6a5e5eecced50.js";
/******/ 			if (chunkId === 3010) return "generated/chunks/3010.90282b1b34c2f6ed1d6e.js";
/******/ 			if (chunkId === 4985) return "generated/chunks/4985.18595de1e089ecfd133d.js";
/******/ 			if (chunkId === 7174) return "generated/chunks/7174.b24e4010cfc3bf166e38.js";
/******/ 			if (chunkId === 5253) return "generated/chunks/5253.eeb98c1c5f5279bfde5e.js";
/******/ 			if (chunkId === 3611) return "generated/chunks/3611.f545a439f80f8125b8df.js";
/******/ 			if (chunkId === 6774) return "generated/chunks/6774.c39ab142fe6f63091cc1.js";
/******/ 			if (chunkId === 5161) return "generated/chunks/5161.8ba99a0cb58779f5d68d.js";
/******/ 			if (chunkId === 2512) return "generated/chunks/2512.908a19198275e8696842.js";
/******/ 			if (chunkId === 3958) return "generated/chunks/3958.62f40749241a05ec9a67.js";
/******/ 			if (chunkId === 8111) return "generated/chunks/8111.3595242fc73e632f655b.js";
/******/ 			if (chunkId === 6241) return "generated/chunks/6241.913a71da3a4f61ce88f9.js";
/******/ 			if (chunkId === 5811) return "generated/chunks/5811.343ad11a7c589b318702.js";
/******/ 			if (chunkId === 8675) return "generated/chunks/8675.ab5c5df32f1ed87173fa.js";
/******/ 			if (chunkId === 4064) return "generated/chunks/4064.153928926e606f3af07c.js";
/******/ 			if (chunkId === 2993) return "generated/chunks/2993.ebf3bc187a2e6f196f0b.js";
/******/ 			if (chunkId === 3547) return "generated/chunks/3547.a2b1e8e788901bb1e784.js";
/******/ 			if (chunkId === 6028) return "generated/chunks/6028.047e1b1e5d079a5673a3.js";
/******/ 			if (chunkId === 9855) return "generated/chunks/9855.8cf6de3d3d9d740edca2.js";
/******/ 			if (chunkId === 5275) return "generated/chunks/5275.71e71333bd02d677339a.js";
/******/ 			if (chunkId === 7968) return "generated/chunks/7968.f91a44b595829269cb3c.js";
/******/ 			if (chunkId === 7498) return "generated/chunks/7498.f6394d26908db06d3c97.js";
/******/ 			if (chunkId === 9558) return "generated/chunks/9558.910e33436ae0f28e0e62.js";
/******/ 			if (chunkId === 6741) return "generated/chunks/6741.daf9c2a751dbd7b569d8.js";
/******/ 			if (chunkId === 7464) return "generated/chunks/7464.54d4ce5506ce8ac847f2.js";
/******/ 			if (chunkId === 273) return "generated/chunks/273.4d23d1d5d70edc8e80de.js";
/******/ 			if (chunkId === 5607) return "generated/chunks/5607.7a03f21a9159c122497c.js";
/******/ 			if (chunkId === 7366) return "generated/chunks/7366.ef599b5391342c12537b.js";
/******/ 			if (chunkId === 3932) return "generated/chunks/3932.21180f316740f51229ba.js";
/******/ 			if (chunkId === 7695) return "generated/chunks/7695.656631ba65b864dccc70.js";
/******/ 			if (chunkId === 7261) return "generated/chunks/7261.9774dbd1ce68c6464c29.js";
/******/ 			if (chunkId === 2881) return "generated/chunks/2881.578d0541ae07dd6964a2.js";
/******/ 			if (chunkId === 4912) return "generated/chunks/4912.19389cfb76bfd6d8c2dc.js";
/******/ 			if (chunkId === 3997) return "generated/chunks/3997.671d33e4b6922534386e.js";
/******/ 			if (chunkId === 5965) return "generated/chunks/5965.62e5bf9fe1c598d1f08c.js";
/******/ 			if (chunkId === 9365) return "generated/chunks/9365.8388d72ff64551d45d55.js";
/******/ 			if (chunkId === 7716) return "generated/chunks/7716.b50e58f68c102cd40f94.js";
/******/ 			if (chunkId === 6535) return "generated/chunks/6535.28edf49b85400edbbc03.js";
/******/ 			if (chunkId === 9220) return "generated/chunks/9220.7fe36e031538b489f52b.js";
/******/ 			if (chunkId === 2152) return "generated/chunks/2152.391d278be0edf92a501c.js";
/******/ 			if (chunkId === 1447) return "generated/chunks/1447.6c8d89c29acea4533bf3.js";
/******/ 			if (chunkId === 7242) return "generated/chunks/7242.2d66a00c7cdcb95a322d.js";
/******/ 			if (chunkId === 865) return "generated/chunks/865.a2fedca767fac257e783.js";
/******/ 			if (chunkId === 1320) return "generated/chunks/1320.30d22183da44473652f6.js";
/******/ 			if (chunkId === 6092) return "generated/chunks/6092.0bd743f6b8aeb77398a3.js";
/******/ 			if (chunkId === 2368) return "generated/chunks/2368.442ea5ff89c561620614.js";
/******/ 			if (chunkId === 3561) return "generated/chunks/3561.ddd5ec56778736222bd5.js";
/******/ 			if (chunkId === 4960) return "generated/chunks/4960.944cab37ea34a6968378.js";
/******/ 			if (chunkId === 746) return "generated/chunks/746.b05e184abb1746fe0dec.js";
/******/ 			if (chunkId === 3830) return "generated/chunks/3830.f6d907735f709ec7f151.js";
/******/ 			if (chunkId === 1716) return "generated/chunks/1716.94f5faed313b1c1dc4d5.js";
/******/ 			if (chunkId === 5912) return "generated/chunks/5912.1351b60beeeabf0cea57.js";
/******/ 			if (chunkId === 7109) return "generated/chunks/7109.4b33ced512c47ad510a5.js";
/******/ 			if (chunkId === 398) return "generated/chunks/398.f1078c94ef6320952388.js";
/******/ 			if (chunkId === 4509) return "generated/chunks/4509.b56fed7384589e656cf3.js";
/******/ 			if (chunkId === 7159) return "generated/chunks/7159.deb36e40b82006cf9df0.js";
/******/ 			if (chunkId === 5466) return "generated/chunks/5466.52399e3bb96cc4a93c30.js";
/******/ 			if (chunkId === 5510) return "generated/chunks/5510.cfcc3fade12b84203f68.js";
/******/ 			if (chunkId === 6104) return "generated/chunks/6104.36e2e1245de6c349cdaf.js";
/******/ 			if (chunkId === 8804) return "generated/chunks/8804.39cee74ea3f25dc88d53.js";
/******/ 			if (chunkId === 3911) return "generated/chunks/3911.6e682f262e46db4c1774.js";
/******/ 			if (chunkId === 3513) return "generated/chunks/3513.75c23ea3aa2a9a5ea4ea.js";
/******/ 			if (chunkId === 1512) return "generated/chunks/1512.8e67f3cba907308597ad.js";
/******/ 			if (chunkId === 8417) return "generated/chunks/8417.772702d3605c6fe6249b.js";
/******/ 			if (chunkId === 4588) return "generated/chunks/4588.84673b37168c94cfa323.js";
/******/ 			if (chunkId === 9932) return "generated/chunks/9932.ae457906435eee84da5e.js";
/******/ 			if (chunkId === 5417) return "generated/chunks/5417.f3d2a56ee42ac11121ba.js";
/******/ 			if (chunkId === 8129) return "generated/chunks/8129.621fd75b0f01ecaba948.js";
/******/ 			if (chunkId === 8308) return "generated/chunks/8308.a451e6b03b53b05b2093.js";
/******/ 			if (chunkId === 9559) return "generated/chunks/9559.754ab7b845420c8f2509.js";
/******/ 			if (chunkId === 5980) return "generated/chunks/5980.be235c2037da68c5284f.js";
/******/ 			if (chunkId === 781) return "generated/chunks/781.ab1c6d47de465c10c367.js";
/******/ 			if (chunkId === 2903) return "generated/chunks/2903.08e56e2feabf3986dcc0.js";
/******/ 			if (chunkId === 9450) return "generated/chunks/9450.9dc9977597c49d0294ff.js";
/******/ 			if (chunkId === 3523) return "generated/chunks/3523.71f841195ed8c5af34a9.js";
/******/ 			if (chunkId === 9780) return "generated/chunks/9780.687ec75004e0f46985b4.js";
/******/ 			if (chunkId === 2751) return "generated/chunks/2751.92ea5777859324d8016c.js";
/******/ 			if (chunkId === 5925) return "generated/chunks/5925.54642536f3c02bdf5a9b.js";
/******/ 			if (chunkId === 1033) return "generated/chunks/1033.91b7c5c556203837078d.js";
/******/ 			if (chunkId === 1979) return "generated/chunks/1979.0582f63ec075f246fea7.js";
/******/ 			if (chunkId === 3554) return "generated/chunks/3554.559ac632e11f68909f13.js";
/******/ 			if (chunkId === 530) return "generated/chunks/530.bde84f580700b041616b.js";
/******/ 			if (chunkId === 92) return "generated/chunks/92.5079082ef7b4dbaa68c5.js";
/******/ 			if (chunkId === 6135) return "generated/chunks/6135.f947c26928ee7041edc3.js";
/******/ 			if (chunkId === 3145) return "generated/chunks/3145.b45b178fa59f57514e59.js";
/******/ 			if (chunkId === 9978) return "generated/chunks/9978.7d0d276777880806c6cf.js";
/******/ 			if (chunkId === 958) return "generated/chunks/958.05ac2535f0c71daaee66.js";
/******/ 			if (chunkId === 7249) return "generated/chunks/7249.0ef20246cb525d041b75.js";
/******/ 			if (chunkId === 9808) return "generated/chunks/9808.d926ad597466815ba6af.js";
/******/ 			if (chunkId === 8452) return "generated/chunks/8452.5bd99b8925cea41a839f.js";
/******/ 			if (chunkId === 4566) return "generated/chunks/4566.34e39c053da129e9d54d.js";
/******/ 			if (chunkId === 981) return "generated/chunks/981.d0b71db4dd0ee378ecf3.js";
/******/ 			if (chunkId === 5781) return "generated/chunks/5781.530d4ff336cd2746073d.js";
/******/ 			if (chunkId === 4692) return "generated/chunks/4692.26c7a4a5b7d2f981451c.js";
/******/ 			if (chunkId === 6329) return "generated/chunks/6329.891691bac06b279a825a.js";
/******/ 			if (chunkId === 768) return "generated/chunks/768.8483b78bcdfd2708706a.js";
/******/ 			if (chunkId === 9363) return "generated/chunks/9363.7cdd61ca95638b5a72c9.js";
/******/ 			if (chunkId === 5824) return "generated/chunks/5824.31df1053c4b6157a2dc3.js";
/******/ 			if (chunkId === 9464) return "generated/chunks/9464.ee745fac51bce53013df.js";
/******/ 			if (chunkId === 7778) return "generated/chunks/7778.ba9aa1d06cf971f71e3d.js";
/******/ 			if (chunkId === 239) return "generated/chunks/239.5efe64133965cfe3e529.js";
/******/ 			if (chunkId === 3623) return "generated/chunks/3623.2c862297dfd21a9d0739.js";
/******/ 			if (chunkId === 4248) return "generated/chunks/4248.9734cb25418d57ce2174.js";
/******/ 			if (chunkId === 7060) return "generated/chunks/7060.e7bd0b878d335d34d30b.js";
/******/ 			if (chunkId === 6038) return "generated/chunks/6038.b8434c288f5c41e419a8.js";
/******/ 			if (chunkId === 5724) return "generated/chunks/5724.d187417eff4b0e9d151f.js";
/******/ 			if (chunkId === 7263) return "generated/chunks/7263.0d61517c361c8a1ae500.js";
/******/ 			if (chunkId === 8186) return "generated/chunks/8186.5365288db1229f26d1d7.js";
/******/ 			if (chunkId === 8936) return "generated/chunks/8936.5174b036edbc5b523619.js";
/******/ 			if (chunkId === 5623) return "generated/chunks/5623.db1b9311a79d3976a155.js";
/******/ 			if (chunkId === 5274) return "generated/chunks/5274.d9531788887e43daa5b4.js";
/******/ 			if (chunkId === 7566) return "generated/chunks/7566.e00d09cb78df4ef79ec5.js";
/******/ 			if (chunkId === 256) return "generated/chunks/256.93ace216a8b4e03a6f85.js";
/******/ 			if (chunkId === 750) return "generated/chunks/750.37160d59226d1a68c04a.js";
/******/ 			if (chunkId === 5890) return "generated/chunks/5890.47bdd6c3eb4f4ed29178.js";
/******/ 			if (chunkId === 1982) return "generated/chunks/1982.af0100513a5d2b07236d.js";
/******/ 			if (chunkId === 1988) return "generated/chunks/1988.949b5b17a5a2a085b81b.js";
/******/ 			if (chunkId === 3509) return "generated/chunks/3509.d189a599186387a46769.js";
/******/ 			if (chunkId === 1234) return "generated/chunks/1234.4e0f395c6f6518df1e5b.js";
/******/ 			if (chunkId === 5366) return "generated/chunks/5366.516582a675ce07e506cf.js";
/******/ 			if (chunkId === 6986) return "generated/chunks/6986.56fc8e57bf17b672e121.js";
/******/ 			if (chunkId === 5975) return "generated/chunks/5975.80ed1446e8fec3651ab5.js";
/******/ 			if (chunkId === 3714) return "generated/chunks/3714.7a66ff8c37f0ecea350e.js";
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.hmd = function(module) {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: function() {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	!function() {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "generetic:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = function(url, done, key, chunkId) {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = function(prev, event) {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach(function(fn) { return fn(event); });
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		__webpack_require__.p = "/generetic/";
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			6377: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = function(chunkId, promises) {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = function(event) {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkgeneretic"] = self["webpackChunkgeneretic"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, [5723], function() { return __webpack_require__(63990); })
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;